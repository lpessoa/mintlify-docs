{
  "info": {
    "title": "Core Api",
    "version": "v1"
  },
  "paths": {
    "/v1/account-schedule-tags": {
      "get": {
        "summary": "Retrieves all AccountScheduleTags.",
        "operationId": ".core_api.v1.account_schedule_tags.ListAccountScheduleTagsResponse|ListAccountScheduleTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1account_schedule_tagsListAccountScheduleTagsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of results to be listed.\n\nRequired.\nMin value: 1.\nMax value: 500.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccountScheduleTags"
        ],
        "x-section": "Account schedule tags",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.account_schedule_tags:read"
        ]
      },
      "post": {
        "summary": "Creates an AccountScheduleTag. The AccountScheduleTag can be created with a status of `ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_NO_OVERRIDE`, `ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_TO_ENABLED`, `ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_TO_FAST_FORWARDED` or `ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_TO_SKIPPED`.",
        "operationId": ".core_api.v1.account_schedule_tags.AccountScheduleTag|CreateAccountScheduleTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1account_schedule_tagsAccountScheduleTag"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIAccountScheduleTags"
        ],
        "x-section": "Account schedule tags",
        "x-permission-scopes": [
          "core:write",
          "core.account_schedule_tags:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1account_schedule_tagsCreateAccountScheduleTagRequest"
        }
      }
    },
    "/v1/account-schedule-tags/{account_schedule_tag.id}": {
      "put": {
        "summary": "Updates an AccountScheduleTag.",
        "operationId": ".core_api.v1.account_schedule_tags.AccountScheduleTag|UpdateAccountScheduleTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1account_schedule_tagsAccountScheduleTag"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the AccountScheduleTag; it is used to tag schedules in a Smart Contract or Supervisor Contract.",
            "name": "account_schedule_tag.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccountScheduleTags"
        ],
        "x-section": "Account schedule tags",
        "x-permission-scopes": [
          "core:write",
          "core.account_schedule_tags:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1account_schedule_tagsUpdateAccountScheduleTagRequest"
        }
      }
    },
    "/v1/account-schedule-tags:batchGet": {
      "get": {
        "summary": "Retrieves one or more AccountScheduleTags based on their AccountScheduleTag IDs.",
        "operationId": ".core_api.v1.account_schedule_tags.BatchGetAccountScheduleTagsResponse|BatchGetAccountScheduleTags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1account_schedule_tagsBatchGetAccountScheduleTagsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of the AccountScheduleTags that are to be retrieved. The 6.0 release will reduce the maximum number of IDs to 50.\n\nRequired.\nMin count: 1.\nMax count: 500.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIAccountScheduleTags"
        ],
        "x-section": "Account schedule tags",
        "x-permission-scopes": [
          "core:read",
          "core.account_schedule_tags:read"
        ]
      }
    },
    "/v1/account-migrations": {
      "get": {
        "summary": "Lists and filters account migrations.",
        "operationId": ".core_api.v1.accounts.ListAccountMigrationsResponse|ListAccountMigrations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsListAccountMigrationsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The statuses of account migrations; these are used to filter on. Optional.",
            "name": "statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "ACCOUNT_MIGRATION_STATUS_COMPLETED": "Indicates that the account migration has been completed. This status implies that all of the requested Account Updates have been created and processed in Vault; it does not claim that all Updates have been successful.",
              "ACCOUNT_MIGRATION_STATUS_PAUSED": "Indicates that the account migration has been paused.",
              "ACCOUNT_MIGRATION_STATUS_PENDING_EXECUTION": "Indicates that the account migration is in progress.",
              "ACCOUNT_MIGRATION_STATUS_UNKNOWN": "Default value."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCOUNT_MIGRATION_STATUS_UNKNOWN",
                  "ACCOUNT_MIGRATION_STATUS_PENDING_EXECUTION",
                  "ACCOUNT_MIGRATION_STATUS_PAUSED",
                  "ACCOUNT_MIGRATION_STATUS_COMPLETED"
                ]
              }
            }
          },
          {
            "description": "The number of results to be listed. Required; must be non-zero. The 6.0 release will reduce the maximum page size to 100.\n\nRequired.\nMin value: 1.\nMax value: 1000.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.account_migrations:read"
        ]
      },
      "post": {
        "summary": "Creates an account migration. Converting an Account to a new product version will mean that the Account can only retrieve the Template Parameter history of the _new_ product version.",
        "operationId": ".core_api.v1.accounts.AccountMigration|CreateAccountMigration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsAccountMigration"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-permission-scopes": [
          "core:write",
          "core.account_migrations:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1accountsCreateAccountMigrationRequest"
        }
      }
    },
    "/v1/account-migrations/{account_migration.id}": {
      "put": {
        "summary": "Updates an account migration. Only updates to the account migration status are currently supported.",
        "operationId": ".core_api.v1.accounts.AccountMigration|UpdateAccountMigration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsAccountMigration"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A unique identifier for the account migration. Optional.",
            "name": "account_migration.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-permission-scopes": [
          "core:write",
          "core.account_migrations:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1accountsUpdateAccountMigrationRequest"
        }
      }
    },
    "/v1/account-migrations:batchGet": {
      "get": {
        "summary": "Retrieves one or more account migrations by account migration ID.",
        "operationId": ".core_api.v1.accounts.BatchGetAccountMigrationsResponse|BatchGetAccountMigrations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsBatchGetAccountMigrationsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of account migrations that are to be retrieved. Required; must be non-empty. The 6.0 release will enforce a maximum number of IDs of 50.\n\nRequired.\nMin count: 1.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-permission-scopes": [
          "core:read",
          "core.account_migrations:read"
        ]
      }
    },
    "/v1/account-schedule-assocs": {
      "get": {
        "summary": "Lists the associations of an account and its Schedules.",
        "operationId": ".core_api.v1.accounts.ListAccountScheduleAssocsResponse|ListAccountScheduleAssocs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsListAccountScheduleAssocsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The account ID that Account Schedule associations are to be listed for.\n\nRequired.",
            "name": "account_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of results to be listed.\n\nRequired.\nMin value: 1.\nMax value: 500.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.account_schedule_assocs:read"
        ]
      }
    },
    "/v1/account-schedule-assocs/{id}": {
      "get": {
        "summary": "Retrieves a specified association between an account and a Schedule.",
        "operationId": ".core_api.v1.accounts.AccountScheduleAssoc|GetAccountScheduleAssoc",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsAccountScheduleAssoc"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Account Schedule association that is to be retrieved. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-permission-scopes": [
          "core:read",
          "core.account_schedule_assocs:read"
        ]
      }
    },
    "/v1/account-update-batches": {
      "get": {
        "summary": "Lists and filters account update batches.",
        "operationId": ".core_api.v1.accounts.ListAccountUpdateBatchesResponse|ListAccountUpdateBatches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsListAccountUpdateBatchesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The IDs of the account migrations that account update batches are to be listed for. Required; must be non-empty.",
            "name": "account_migration_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The number of results to be listed. Required; must be non-zero.\n\nRequired.\nMin value: 1.\nMax value: 20.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.account_update_batches:read"
        ]
      },
      "post": {
        "summary": "Creates a batch of account updates. Account update batches are used to update multiple accounts.",
        "operationId": ".core_api.v1.accounts.AccountUpdateBatch|CreateAccountUpdateBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsAccountUpdateBatch"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-release-info": {
          "noticeVersion": {
            "major": 5
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v2/accounts."
        },
        "x-permission-scopes": [
          "core:write",
          "core.account_update_batches:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1accountsCreateAccountUpdateBatchRequest"
        }
      }
    },
    "/v1/account-update-batches:batchGet": {
      "get": {
        "summary": "Retrieves one or more account update batches by account update batch ID.",
        "operationId": ".core_api.v1.accounts.BatchGetAccountUpdateBatchesResponse|BatchGetAccountUpdateBatches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsBatchGetAccountUpdateBatchesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of account update batches that are to be retrieved. Required; must be non-empty.\n\nRequired.\nMin count: 1.\nMax count: 20.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-permission-scopes": [
          "core:read",
          "core.account_update_batches:read"
        ]
      }
    },
    "/v1/account-updates": {
      "get": {
        "summary": "Lists and filters account updates for a specified account ID.",
        "operationId": ".core_api.v1.accounts.ListAccountUpdatesResponse|ListAccountUpdates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsListAccountUpdatesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the account that updates are to be listed for. Required.",
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Statuses of account updates to filter on. Optional.",
            "name": "statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "ACCOUNT_UPDATE_STATUS_COMPLETED": "The AccountUpdate was successfully executed.",
              "ACCOUNT_UPDATE_STATUS_ERRORED": "The AccountUpdate errored.",
              "ACCOUNT_UPDATE_STATUS_PENDING_EXECUTION": "The AccountUpdate hasn't been picked up from the queue or is in progress.",
              "ACCOUNT_UPDATE_STATUS_REJECTED": "The AccountUpdate failed validation of a constraint in the async pipeline.",
              "ACCOUNT_UPDATE_STATUS_UNKNOWN": "Default value."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCOUNT_UPDATE_STATUS_UNKNOWN",
                  "ACCOUNT_UPDATE_STATUS_PENDING_EXECUTION",
                  "ACCOUNT_UPDATE_STATUS_COMPLETED",
                  "ACCOUNT_UPDATE_STATUS_REJECTED",
                  "ACCOUNT_UPDATE_STATUS_ERRORED"
                ]
              }
            }
          },
          {
            "description": "The number of results to be listed. Required; must be non-zero. The 6.0 release will reduce the maximum page size to 100.\n\nRequired.\nMin value: 1.\nMax value: 1000.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.account_updates:read"
        ]
      },
      "post": {
        "summary": "Registers a request for an account update to be created and executed asynchronously. The account_id field is required for the creation of an account update. The ID of an account update can be specified for create requests. An account update can be created to either update the instance parameter values, the product version of an account or to retry a closure update.",
        "operationId": ".core_api.v1.accounts.AccountUpdate|CreateAccountUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsAccountUpdate"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-permission-scopes": [
          "core:write",
          "core.account_updates:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1accountsCreateAccountUpdateRequest"
        }
      }
    },
    "/v1/account-updates/{id}": {
      "get": {
        "summary": "Retrieves a specific account update by account update ID.",
        "operationId": ".core_api.v1.accounts.AccountUpdate|GetAccountUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsAccountUpdate"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the account update that is to be retrieved. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-permission-scopes": [
          "core:read",
          "core.account_updates:read"
        ]
      }
    },
    "/v1/account-updates:batchGet": {
      "get": {
        "summary": "Retrieves one or more account updates based on their account update IDs.",
        "operationId": ".core_api.v1.accounts.BatchGetAccountUpdatesResponse|BatchGetAccountUpdates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsBatchGetAccountUpdatesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of account updates that are to be retrieved. Required; must be non-empty. The 6.0 release will enforce a maximum number of IDs of 50.\n\nRequired.\nMin count: 1.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-permission-scopes": [
          "core:read",
          "core.account_updates:read"
        ]
      }
    },
    "/v1/accounts": {
      "get": {
        "summary": "Retrieves all the accounts for a customer.",
        "operationId": ".core_api.v1.accounts.ListAccountsResponse|ListAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsListAccountsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the stakeholder whose accounts are to be listed. Optional.",
            "name": "stakeholder_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of results to be listed. The 6.0 release will reduce the maximum page size to 100.\n\nRequired.\nMin value: 1.\nMax value: 1000.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of inclusive OR account status filters. Must be URL encoded. Optional.",
            "name": "account_statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "ACCOUNT_STATUS_CANCELLED": "Account was requested but was never approved, it is now permanently closed.",
              "ACCOUNT_STATUS_CLOSED": "Account was previously open but is now permanently closed.",
              "ACCOUNT_STATUS_OPEN": "Account has been approved and transactions are allowed.",
              "ACCOUNT_STATUS_PENDING": "Account and contract record has been created, it is waiting for another call to be made open.",
              "ACCOUNT_STATUS_PENDING_CLOSURE": "Account was requested closure but contract and account closure are not finished.",
              "ACCOUNT_STATUS_UNKNOWN": "Default value."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCOUNT_STATUS_UNKNOWN",
                  "ACCOUNT_STATUS_OPEN",
                  "ACCOUNT_STATUS_CLOSED",
                  "ACCOUNT_STATUS_CANCELLED",
                  "ACCOUNT_STATUS_PENDING_CLOSURE",
                  "ACCOUNT_STATUS_PENDING"
                ]
              }
            }
          },
          {
            "description": "List of inclusive OR product version ID filters. Must be URL encoded. Optional.",
            "name": "product_version_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "opening_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the account's `opening_timestamp` must be within. This range is from `opening_timestamp_range.from` up to and not including `opening_timestamp_range.to`. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 1
              },
              "changeType": "ADD_FIELD"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "opening_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the account's `opening_timestamp` must be within. This range is from `opening_timestamp_range.from` up to and not including `opening_timestamp_range.to`. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 1
              },
              "changeType": "ADD_FIELD"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "closing_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the account's `closing_timestamp` must be within. This range is from `closing_timestamp_range.from` up to and not including `closing_timestamp_range.to`. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 1
              },
              "changeType": "ADD_FIELD"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "closing_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the account's `closing_timestamp` must be within. This range is from `closing_timestamp_range.from` up to and not including `closing_timestamp_range.to`. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 1
              },
              "changeType": "ADD_FIELD"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-release-info": {
          "noticeVersion": {
            "major": 5
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v2/accounts."
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.accounts:read"
        ]
      },
      "post": {
        "summary": "Creates an account for a customer. The account can be created with a status of OPEN or PENDING.",
        "operationId": ".core_api.v1.accounts.Account|CreateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsAccount"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-release-info": {
          "noticeVersion": {
            "major": 5
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v2/accounts."
        },
        "x-permission-scopes": [
          "core:write",
          "core.accounts:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1accountsCreateAccountRequest"
        }
      }
    },
    "/v1/accounts/{account.id}": {
      "put": {
        "summary": "Updates a customer's account.",
        "operationId": ".core_api.v1.accounts.Account|UpdateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsAccount"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A unique ID for an account. Optional for create requests.",
            "name": "account.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-release-info": {
          "noticeVersion": {
            "major": 5
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v2/accounts."
        },
        "x-permission-scopes": [
          "core:write",
          "core.accounts:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1accountsUpdateAccountRequest"
        }
      }
    },
    "/v1/accounts/{account_id}:paramTimeseries": {
      "get": {
        "summary": "Lists the timeseries for the parameters on an account. This endpoint will change once we have a more generalised method for returning timeseries.",
        "operationId": ".core_api.v1.accounts.ListAccountParamTimeseriesResponse|ListAccountParamTimeseries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsListAccountParamTimeseriesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The account ID a parameter timeseries is to be retrieved for.",
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-release-info": {
          "noticeVersion": {
            "major": 5
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v1/parameter-values."
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.accounts:read"
        ]
      }
    },
    "/v1/accounts/{account_id}:updateDetails": {
      "put": {
        "summary": "Updates the details of an account.",
        "operationId": ".core_api.v1.accounts.Account|UpdateAccountDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsAccount"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The account that is to be updated. Required.",
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-release-info": {
          "noticeVersion": {
            "major": 5
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v2/accounts."
        },
        "x-permission-scopes": [
          "core:write",
          "core.accounts:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1accountsUpdateAccountDetailsRequest"
        }
      }
    },
    "/v1/accounts/{id}": {
      "get": {
        "summary": "Retrieves a specified account of the customer.",
        "operationId": ".core_api.v1.accounts.Account|GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1accountsAccount"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the account to be retrieved. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A list of fields to display, which are omitted by default. When set to INCLUDE_FIELD_DERIVED_INSTANCE_PARAM_VALS, derived Instance-level parameters will be displayed in the`derived_instance_param_vals` field.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_DERIVED_INSTANCE_PARAM_VALS"
                ]
              }
            }
          },
          {
            "description": "The returned instance and derived parameter values will be calculated as of this timestamp. Should be formatted as an RFC3339 timestamp.",
            "name": "instance_param_vals_effective_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts",
        "x-release-info": {
          "noticeVersion": {
            "major": 5,
            "minor": 4
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v2/accounts. For retrieving derived parameters use /v1/derived-parameter-values."
        },
        "x-permission-scopes": [
          "core:read",
          "core.accounts:read"
        ]
      }
    },
    "/v1/account-attribute-values": {
      "get": {
        "summary": "ListAccountAttributeValues retrieves a filtered and paginated list of Account Attribute values. Requires filtering by account ID and attribute name. Values are calculated as of the point in time the API call is made.",
        "operationId": ".core_api.v1.account_attributes.ListAccountAttributeValuesResponse|ListAccountAttributeValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1account_attributesListAccountAttributeValuesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ListAccountAttributeValuesFAILED_PRECONDITION_0",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIAccountAttributesINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The page size of Account Attribute values to be returned. Maximum 100. Required.",
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page to retrieve. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Account IDs to filter values on. Required.",
            "name": "account_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Attribute Names to filter values on. Required.",
            "name": "attribute_names",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Effective timestamp values to filter on, each to be passed to the `attribute_hook` calculation as `effective_datetime`. Formatted as an RFC3339 timestamp. If unspecified, defaults to a single effective timestamp using the current system time.",
            "name": "effective_timestamps",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIAccountAttributes"
        ],
        "x-section": "Account Attributes",
        "x-list-consistency-level": "PAGE_LEVEL",
        "x-permission-scopes": [
          "core:read",
          "core.account_attribute_values:read"
        ]
      }
    },
    "/v1/service-accounts": {
      "get": {
        "summary": "Lists service accounts with pagination. The request must include a page_size parameter. A list of statuses may be used as a filter. A page_token may be included to retrieve a specific page of results.",
        "operationId": ".core_api.v1.auth.ListServiceAccountsResponse|ListServiceAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1authListServiceAccountsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of service account statuses that may be used as logical OR filters for results. Optional.",
            "name": "service_account_statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "SERVICE_ACCOUNT_STATUS_ACTIVE": "The service account is active and can authenticate.",
              "SERVICE_ACCOUNT_STATUS_FROZEN": "The service account has been frozen and transactions are temporarily prohibited.",
              "SERVICE_ACCOUNT_STATUS_INACTIVE": "The service account has been deactivated and is no longer visible to users.",
              "SERVICE_ACCOUNT_STATUS_UNKNOWN": "The service account status is unknown."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "SERVICE_ACCOUNT_STATUS_UNKNOWN",
                  "SERVICE_ACCOUNT_STATUS_ACTIVE",
                  "SERVICE_ACCOUNT_STATUS_INACTIVE",
                  "SERVICE_ACCOUNT_STATUS_FROZEN"
                ]
              }
            }
          },
          {
            "description": "The number of results to be listed. Required; must have an integer value in the range 1-100.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAuth"
        ],
        "x-section": "Auth",
        "x-release-info": {
          "noticeVersion": {
            "major": 4,
            "minor": 3
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated as Service Accounts have been deprecated in favour of JWT-based authentication"
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.service_accounts:read"
        ]
      },
      "post": {
        "summary": "Creates and returns a service account with the access token populated. The name field of the service account is required for creation. For this endpoint retries work as normal but a new token is generated each time.",
        "operationId": ".core_api.v1.auth.ServiceAccount|CreateServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1authServiceAccount"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIAuth"
        ],
        "x-section": "Auth",
        "x-release-info": {
          "noticeVersion": {
            "major": 4,
            "minor": 3
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated as Service Accounts have been deprecated in favour of JWT-based authentication"
        },
        "x-permission-scopes": [
          "core:write",
          "core.service_accounts:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1authCreateServiceAccountRequest"
        }
      }
    },
    "/v1/service-accounts/{id}": {
      "get": {
        "summary": "Retrieves the service account for the service account ID provided.",
        "operationId": ".core_api.v1.auth.ServiceAccount|GetServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1authServiceAccount"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the service account that is to be retrieved.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAuth"
        ],
        "x-section": "Auth",
        "x-release-info": {
          "noticeVersion": {
            "major": 4,
            "minor": 3
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated as Service Accounts have been deprecated in favour of JWT-based authentication"
        },
        "x-permission-scopes": [
          "core:read",
          "core.service_accounts:read"
        ]
      }
    },
    "/v1/service-accounts/{service_account.id}": {
      "put": {
        "summary": "Updates a service account. The service account token will only be returned when the token is refreshed or if an inactive service account is reactivated. If an inactive service account is reactivated, a new token is generated. A service account with active status can be updated to be frozen or inactive. A service account with frozen status can be updated to active or inactive. If a frozen account is reactivated, a new token is not required. A service account with inactive status can only be updated to active status. Freezing a service account will disable existing tokens until the service account is reactivated. Deactivating a service account will permanently invalidate all previous tokens and new tokens will be required.",
        "operationId": ".core_api.v1.auth.ServiceAccount|UpdateServiceAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1authServiceAccount"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A unique string ID for a service account. Output only.",
            "name": "service_account.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAuth"
        ],
        "x-section": "Auth",
        "x-release-info": {
          "noticeVersion": {
            "major": 4,
            "minor": 3
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated as Service Accounts have been deprecated in favour of JWT-based authentication"
        },
        "x-permission-scopes": [
          "core:write",
          "core.service_accounts:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1authUpdateServiceAccountRequest"
        }
      }
    },
    "/v1/service-accounts/{service_account_id}:updatePermissions": {
      "put": {
        "summary": "Updates the permissions for a service account.",
        "operationId": ".core_api.v1.auth.ServiceAccount|UpdateServiceAccountPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1authServiceAccount"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the service account that is to be updated. Required.",
            "name": "service_account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAuth"
        ],
        "x-section": "Auth",
        "x-release-info": {
          "noticeVersion": {
            "major": 4,
            "minor": 3
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated as Service Accounts have been deprecated in favour of JWT-based authentication"
        },
        "x-permission-scopes": [
          "core:write",
          "core.service_accounts:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1authUpdateServiceAccountPermissionsRequest"
        }
      }
    },
    "/v1/service-accounts:batchGet": {
      "get": {
        "summary": "Retrieves service accounts for the service account IDs provided.",
        "operationId": ".core_api.v1.auth.BatchGetServiceAccountsResponse|BatchGetServiceAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1authBatchGetServiceAccountsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of service accounts that are to be retrieved. Required; must be non-empty.\n\nRequired.\nMin length: 1 characters.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIAuth"
        ],
        "x-section": "Auth",
        "x-release-info": {
          "noticeVersion": {
            "major": 4,
            "minor": 3
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated as Service Accounts have been deprecated in favour of JWT-based authentication"
        },
        "x-permission-scopes": [
          "core:read",
          "core.service_accounts:read"
        ]
      }
    },
    "/v1/token:validate": {
      "get": {
        "summary": "Checks if a token is valid.",
        "operationId": ".core_api.v1.auth.ValidateTokenResponse|ValidateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1authValidateTokenResponse"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIAuth"
        ],
        "x-section": "Auth"
      }
    },
    "/v1/balances/live": {
      "get": {
        "summary": "Retrieves the latest balances for the supplied Customer Account IDs ordered by decreasing `id`.",
        "operationId": ".core_api.v1.balances.ListBalancesLiveResponse|ListBalancesLive",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1balancesListBalancesLiveResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The IDs of the accounts the balances belong to. Required.\n\nRequired.\nMin count: 1.\nMax count: 200.",
            "name": "account_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Filters results by account address. Optional.",
            "name": "account_addresses",
            "in": "query",
            "required": false,
            "x-example-override": "[\"DEFAULT\"]",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The number of results to be retrieved. Required.\n\nRequired.\nMin value: 1.\nMax value: 10000.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, this is the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "x-example-override": "nASlspO",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIBalances"
        ],
        "x-section": "Balances",
        "x-list-consistency-level": "SNAPSHOT",
        "x-permission-scopes": [
          "core:read",
          "core.balances:read"
        ]
      }
    },
    "/v1/balances/timerange": {
      "get": {
        "summary": "Retrieves a time range of balances for the supplied Customer Account IDs ordered by decreasing `value_time`. If multiple entries have the same `value_time`, they will be grouped by balance definition, and within the groups the entries are ordered by decreasing logical time. This includes all balance events within the time range and the latest state of the balances as of the `from_time`, if provided, which could be prior to the time range.",
        "operationId": ".core_api.v1.balances.ListBalancesTimeRangeResponse|ListBalancesTimeRange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1balancesListBalancesTimeRangeResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The IDs of the accounts the balances belong to. Required.\n\nRequired.\nMin count: 1.\nMax count: 200.",
            "name": "account_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Filters results by account address.",
            "name": "account_addresses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The earliest time in the time range of the returned balances in UTC. Optional. If included, will also return the latest balance event before the `from_time` for comparison. If omitted, the results will start from the first available balance event. Formatted as an RFC3339 timestamp.",
            "name": "from_time",
            "in": "query",
            "required": false,
            "x-example-override": "2021-01-01T01:00:00.00Z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The latest time in the time range of the returned balances in UTC. Optional. If omitted, the results will end at the last available balance event. Formatted as an RFC3339 timestamp.",
            "name": "to_time",
            "in": "query",
            "required": false,
            "x-example-override": "2021-01-01T12:00:00.00Z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The number of results to be retrieved. Required.\n\nRequired.\nMin value: 1.\nMax value: 10000.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, this is the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If supplied, the balances time range will take into account only those postings inserted into Vault up to this time, and exclude balance changes from any postings inserted after this time. Optional.",
            "name": "snapshot_timestamp",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "If supplied, the balances time range will take into account only thosepostings inserted into Vault up to this time, and exclude balance changesfrom any postings inserted after this time.",
              "featureFlag": "IMP_1479_SNAPSHOT_TIME_BALANCE_TIMESERIES_FETCHING"
            },
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "tags": [
          "CoreAPIBalances"
        ],
        "x-section": "Balances",
        "x-list-consistency-level": "SNAPSHOT",
        "x-permission-scopes": [
          "core:read",
          "core.balances:read"
        ]
      }
    },
    "/v1/calendar": {
      "post": {
        "summary": "CreateCalendar creates a Calendar.",
        "operationId": ".core_api.v1.calendar.Calendar|CreateCalendar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarCalendar"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "409": {
            "description": "The error response for 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCalendarALREADY_EXISTS_0",
                  "description": "Returned when a Calendar with the same `id` already exists",
                  "title": "ALREADY_EXISTS"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-permission-scopes": [
          "core:write",
          "core.calendars:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1calendarCreateCalendarRequest"
        }
      }
    },
    "/v1/calendar-event": {
      "get": {
        "summary": "ListCalendarEvents retrieves a list of Calendar Events that occur within a specified time range.",
        "operationId": ".core_api.v1.calendar.ListCalendarEventsResponse|ListCalendarEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarListCalendarEventsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Filters by Calendars IDs; if this is not set, all Calendars will be included.",
            "name": "calendar_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Filters by Calendar Event names; if filter criteria are not given, all Calendar Event names will be listed.",
            "name": "calendar_event_names",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The number of results to be listed. Must be non-zero.\n\nRequired.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If set, all other filtering parameters are ignored.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active_calendar_event",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 4
              },
              "changeType": "ADD_FIELD",
              "description": "This field replaces: is_active."
            },
            "schema": {
              "type": "string",
              "enum": [
                "BOTH",
                "ONLY_TRUE",
                "ONLY_FALSE"
              ],
              "default": "BOTH"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "calendar_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "The Timestamp range that the Calendar Event is valid for. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "calendar_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "The Timestamp range that the Calendar Event is valid for. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          }
        ],
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.calendar_events:read"
        ]
      },
      "post": {
        "summary": "CreateCalendarEvent creates a Calendar Event.",
        "operationId": ".core_api.v1.calendar.CalendarEvent|CreateCalendarEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarCalendarEvent"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "409": {
            "description": "The error response for 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCalendarEventALREADY_EXISTS_0",
                  "description": "Returned when a Calendar Event with the same `id` already exists",
                  "title": "ALREADY_EXISTS"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-permission-scopes": [
          "core:write",
          "core.calendar_events:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1calendarCreateCalendarEventRequest"
        }
      }
    },
    "/v1/calendar-event/{calendar_event_id}:updateDetails": {
      "put": {
        "summary": "UpdateCalendarEvent updates a Calendar Event based on a provided Calendar Event ID. From Vault **4.0.0** onwards, an inactive Calendar Event can only have the `is_active` field updated.",
        "operationId": ".core_api.v1.calendar.CalendarEvent|UpdateCalendarEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarCalendarEvent"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the calendar event that is to be updated.",
            "name": "calendar_event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 4
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint updates a calendar event with a given id"
        },
        "x-permission-scopes": [
          "core:write",
          "core.calendar_events:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1calendarUpdateCalendarEventRequest"
        }
      }
    },
    "/v1/calendar-event/{id}": {
      "get": {
        "summary": "GetCalendarEvent retrieves a Calendar Event using its ID.",
        "operationId": ".core_api.v1.calendar.CalendarEvent|GetCalendarEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarCalendarEvent"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Maps the ID to the requested CalendarEvent.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-permission-scopes": [
          "core:read",
          "core.calendar_events:read"
        ]
      }
    },
    "/v1/calendar-event:batchGet": {
      "get": {
        "summary": "BatchGetCalendarEvents retrieves a list of Calendar Events using their IDs.",
        "operationId": ".core_api.v1.calendar.BatchGetCalendarEventsResponse|BatchGetCalendarEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarBatchGetCalendarEventsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Maps the Calendar ID to the requested Calendars.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-permission-scopes": [
          "core:read",
          "core.calendar_events:read"
        ]
      }
    },
    "/v1/calendar-period-descriptor": {
      "post": {
        "summary": "CreateCalendarPeriodDescriptor creates a Calendar Period Descriptor.",
        "operationId": ".core_api.v1.calendar.CalendarPeriodDescriptor|CreateCalendarPeriodDescriptor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarCalendarPeriodDescriptor"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "409": {
            "description": "The error response for 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCalendarPeriodDescriptorALREADY_EXISTS_0",
                  "description": "Returned when a Calendar Period Descriptor with the same `id` already exists",
                  "title": "ALREADY_EXISTS"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 8
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:write",
          "core.calendar_period_descriptors:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1calendarCreateCalendarPeriodDescriptorRequest"
        }
      }
    },
    "/v1/calendar/bookkeeping-date/{id}": {
      "get": {
        "summary": "GetBookkeepingDate retrieves the Bookkeeping Date for the given Calendar ID.",
        "operationId": ".core_api.v1.calendar.BookkeepingDate|GetBookkeepingDate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarBookkeepingDate"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The associated Calendar to retrieve the next Bookkeeping Date for",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-release-info": {
          "releaseVersion": {
            "major": 3,
            "minor": 1
          },
          "changeType": "ADD_METHOD",
          "description": "This retrieves the Bookkeeping Date for the specified Calendar ID"
        },
        "x-permission-scopes": [
          "core:read",
          "core.bookkeeping_dates:read"
        ]
      },
      "put": {
        "summary": "UpdateBookkeepingDate updates a Bookkeeping Date by the provided Calendar ID. This specifies what the next calendar period to be published should be annotated with.",
        "operationId": ".core_api.v1.calendar.BookkeepingDate|UpdateBookkeepingDate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarBookkeepingDate"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Calendar to be updated.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-release-info": {
          "releaseVersion": {
            "major": 3,
            "minor": 1
          },
          "changeType": "ADD_METHOD",
          "description": "This updates the Bookkeeping Date for the given Calendar ID"
        },
        "x-permission-scopes": [
          "core:write",
          "core.bookkeeping_dates:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1calendarUpdateBookkeepingDateRequest"
        }
      }
    },
    "/v1/calendar/{calendar_id}/period/current:change": {
      "put": {
        "summary": "ChangeCurrentCalendarPeriod changes the duration of the current calendar period.",
        "operationId": ".core_api.v1.calendar.CalendarPeriod|ChangeCurrentCalendarPeriod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarCalendarPeriod"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "ID of the calendar.",
            "name": "calendar_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 8
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint changes the duration of the current calendar period"
        },
        "x-permission-scopes": [
          "core:write",
          "core.calendar_periods:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1calendarChangeCurrentCalendarPeriodRequest"
        }
      }
    },
    "/v1/calendar/{calendar_id}:calculatePeriod": {
      "get": {
        "summary": "CalculateCalendarPeriod calculates the number of period resolution units from the start epoch of the Calendar to the given time and returns the expected Calendar Period data. Already-emitted Calendar Periods will be returned as-is.",
        "operationId": ".core_api.v1.calendar.CalendarPeriod|CalculateCalendarPeriod",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarCalendarPeriod"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Calendar ID that will be used when calculating the number of period resolution units from the Calendar's start epoch.",
            "name": "calendar_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The latest time that the number of period resolution units is calculated up to. Defaults to the current time in UTC. Must be formatted as an RFC3339 timestamp.",
            "name": "timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 8
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:read",
          "core.calendar_periods:read"
        ]
      }
    },
    "/v1/calendar/{calendar_id}:updateDetails": {
      "put": {
        "summary": "UpdateCalendar updates a Calendar based on a provided Calendar ID.",
        "operationId": ".core_api.v1.calendar.Calendar|UpdateCalendar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarCalendar"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the calendar that is to be updated.",
            "name": "calendar_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 7
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint updates a calendar event with a given id"
        },
        "x-permission-scopes": [
          "core:write",
          "core.calendars:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1calendarUpdateCalendarRequest"
        }
      }
    },
    "/v1/calendar/{id}": {
      "get": {
        "summary": "GetCalendar retrieves a Calendar using its ID.",
        "operationId": ".core_api.v1.calendar.Calendar|GetCalendar",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarCalendar"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Maps the ID to the requested Calendar.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-permission-scopes": [
          "core:read",
          "core.calendars:read"
        ]
      }
    },
    "/v1/calendars": {
      "get": {
        "summary": "ListCalendars retrieves a list of Calendars.",
        "operationId": ".core_api.v1.calendar.ListCalendarsResponse|ListCalendars",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1calendarListCalendarsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPICalendarINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "501": {
            "description": "The error response for 501",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCalendarsUNIMPLEMENTED_0",
                  "description": "Returned when an unsupported name pattern match type is specified",
                  "title": "UNIMPLEMENTED"
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of results to be listed. Must be non-zero.\n\nRequired.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "If a page token is supplied, the page size value must match the original value used to generate the token. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ordering of the results. Optional.",
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ORDER_BY_CREATE_TIMESTAMP_ASC",
                  "ORDER_BY_CREATE_TIMESTAMP_DESC"
                ]
              }
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/v1calendarNamePatternMatch",
              "description": "Pattern matching on the Group name. Optional.",
              "x-release-info": {
                "releaseVersion": {
                  "major": 2,
                  "minor": 6
                },
                "changeType": "ADD_FIELD",
                "description": "This field is used to search by a name pattern."
              }
            },
            "name": "name_pattern_match",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "CoreAPICalendar"
        ],
        "x-section": "Calendar",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 4
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint lists calendars"
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.calendars:read"
        ]
      }
    },
    "/v1/contract-executions": {
      "get": {
        "summary": "Retrieves a filtered and paginated list of ContractExecution resources.",
        "operationId": ".core_api.v1.contract_events.ListContractExecutionsResponse|ListContractExecutions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1contract_eventsListContractExecutionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIContractEventsINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of ContractExecutions to be returned. Maximum 50. Required.\n\nRequired.\nMin value: 1.\nMax value: 50.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the requested page, which comes from a previous GET v1/contract-events response. If empty, the first page will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A set of Contract Event IDs. This filters ContractExecutions returned in the response to only those with a `contract_event_id` in the set. Must not contain IDs that are empty strings. Required if both `account_ids` and `plan_ids` are empty.\n\nFilters response to include only ContractExecutions that have field `contract_event_id` matching matching ANY `contract_event_id` provided in this set. Must not contain IDs that are empty strings. Required if both `account_ids` and `plan_ids` are empty.",
            "name": "contract_event_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Filters response to include only ContractExecutions that have field `account_id` matching matching ANY `account_id` provided in this set. Must not contain IDs that are empty strings. Required if both `contract_event_ids` and `plan_ids` are empty.\n\nNote, specifying both `account_ids` and `plan_ids` filters will never return any Contract Executions, as a ContractExecution is associated with a single account or plan only. To list ContractExecutions that match any `account_ids` OR `plan_ids`, use the `or_fields` field and provide values `OR_FIELD_ACCOUNT_IDS` and `OR_FIELD_PLAN_IDS`.",
            "name": "account_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Filters response to include only ContractExecutions that have field `plan_id` matching matching ANY `plan_id` provided in this set. Must not contain IDs that are empty strings. Required if both `contract_event_ids` and `account_ids` are empty.\n\nNote, specifying both `account_ids` and `plan_ids` filters will never return any Contract Executions, as a ContractExecution is associated with a single account or plan only. To list ContractExecutions that match any `account_ids` OR `plan_ids`, use the `or_fields` field and provide values `OR_FIELD_ACCOUNT_IDS` and `OR_FIELD_PLAN_IDS`.",
            "name": "plan_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Optional. This field specifies that a ContractExecution should be returned if ANY of the following field filters match. This is opposed to the default behaviour, which only returns a ContractExecution is ALL field filters in the request are matched.",
            "name": "or_fields",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "OR_FIELD_ACCOUNT_IDS",
                  "OR_FIELD_PLAN_IDS"
                ]
              }
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "execution_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "Optional. The timestamp range that the ContractExecution's `execution_timestamp` must be within. This range is from `execution_timestamp_range.from` inclusive up to `execution_timestamp_range.to` exclusive. If `execution_timestamp_range.from` is not provided, defaults to the zero timestamp. If `execution_timestamp_range.to` is not provided, defaults to +inf. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "execution_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "Optional. The timestamp range that the ContractExecution's `execution_timestamp` must be within. This range is from `execution_timestamp_range.from` inclusive up to `execution_timestamp_range.to` exclusive. If `execution_timestamp_range.from` is not provided, defaults to the zero timestamp. If `execution_timestamp_range.to` is not provided, defaults to +inf. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          }
        ],
        "tags": [
          "CoreAPIContractEvents"
        ],
        "x-section": "Contract Events",
        "x-release-info": {
          "changeType": "ADD_METHOD",
          "featureFlag": "IMP_55_AEP_COL_SCHEDULE_HOOK_INTEGRATION"
        },
        "x-list-consistency-level": "PAGE_LEVEL",
        "x-permission-scopes": [
          "core:read",
          "core.contract_events:read"
        ]
      }
    },
    "/v1/contract-module-versions": {
      "get": {
        "summary": "Lists Contract Module Versions.",
        "operationId": ".core_api.v1.contract_modules.ListContractModuleVersionsResponse|ListContractModuleVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1contract_modulesListContractModuleVersionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Contract Module ID to retrieve values for.\n\nRequired.",
            "name": "contract_module_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of Contract Module Versions to be retrieved.\n\nRequired.\nMin value: 1.\nMax value: 20.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, this returns the first page of results.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIContractModules"
        ],
        "x-section": "Contract Modules",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 6
          },
          "changeType": "ADD_METHOD"
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.contract_module_versions:read"
        ]
      },
      "post": {
        "summary": "Creates a Contract Module Version.",
        "operationId": ".core_api.v1.contract_modules.ContractModuleVersion|CreateContractModuleVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1contract_modulesContractModuleVersion"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIContractModules"
        ],
        "x-section": "Contract Modules",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 6
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:write",
          "core.contract_module_versions:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1contract_modulesCreateContractModuleVersionRequest"
        }
      }
    },
    "/v1/contract-module-versions:batchGet": {
      "get": {
        "summary": "Retrieves one or more Contract Module Versions using the Contract Module Version ID.",
        "operationId": ".core_api.v1.contract_modules.BatchGetContractModuleVersionsResponse|BatchGetContractModuleVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1contract_modulesBatchGetContractModuleVersionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "List of IDs of the Contract Module Versions to retrieve.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Additional fields to return; optional. Some Contract Module Version fields are omitted by default as they are bulky or costly; if those fields are specified here, they will be populated in the response.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_CODE",
                  "INCLUDE_FIELD_DETAILS_API_VERSION",
                  "INCLUDE_FIELD_DETAILS_CALLABLE_DETAILS"
                ]
              }
            }
          }
        ],
        "tags": [
          "CoreAPIContractModules"
        ],
        "x-section": "Contract Modules",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 6
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:read",
          "core.contract_module_versions:read"
        ]
      }
    },
    "/v1/contract-modules": {
      "get": {
        "summary": "Lists Contract Modules.",
        "operationId": ".core_api.v1.contract_modules.ListContractModulesResponse|ListContractModules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1contract_modulesListContractModulesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of Contract Modules to be retrieved.\n\nRequired.\nMin value: 1.\nMax value: 50.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, this returns the first page of results.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIContractModules"
        ],
        "x-section": "Contract Modules",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 6
          },
          "changeType": "ADD_METHOD"
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.contract_modules:read"
        ]
      },
      "post": {
        "summary": "Creates a Contract Module.",
        "operationId": ".core_api.v1.contract_modules.ContractModule|CreateContractModule",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1contract_modulesContractModule"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIContractModules"
        ],
        "x-section": "Contract Modules",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 6
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:write",
          "core.contract_modules:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1contract_modulesCreateContractModuleRequest"
        }
      }
    },
    "/v1/contract-modules:batchGet": {
      "get": {
        "summary": "Retrieves one or more Contract Modules using the Contract Module ID.",
        "operationId": ".core_api.v1.contract_modules.BatchGetContractModulesResponse|BatchGetContractModules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1contract_modulesBatchGetContractModulesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "List of IDs of the Contract Modules to retrieve.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIContractModules"
        ],
        "x-section": "Contract Modules",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 6
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:read",
          "core.contract_modules:read"
        ]
      }
    },
    "/v1/smart-contract-module-versions-links": {
      "get": {
        "summary": "Lists Smart Contract Module Versions' Links.",
        "operationId": ".core_api.v1.contract_modules.ListSmartContractModuleVersionsLinksResponse|ListSmartContractModuleVersionsLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1contract_modulesListSmartContractModuleVersionsLinksResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Smart Contract Version IDs to retrieve values for.",
            "name": "smart_contract_version_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The Contract Module Version IDs to retrieve values for.",
            "name": "contract_module_version_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The number of Contract Module Versions to be retrieved.\n\nRequired.\nMin value: 1.\nMax value: 50.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, this returns the first page of results.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIContractModules"
        ],
        "x-section": "Contract Modules",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 6
          },
          "changeType": "ADD_METHOD"
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.smart_contract_module_versions_links:read"
        ]
      },
      "post": {
        "summary": "Creates a Smart Contract Module Versions Link.",
        "operationId": ".core_api.v1.contract_modules.SmartContractModuleVersionsLink|CreateSmartContractModuleVersionsLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1contract_modulesSmartContractModuleVersionsLink"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIContractModules"
        ],
        "x-section": "Contract Modules",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 6
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:write",
          "core.smart_contract_module_versions_links:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1contract_modulesCreateSmartContractModuleVersionsLinkRequest"
        }
      }
    },
    "/v1/smart-contract-module-versions-links:batchGet": {
      "get": {
        "summary": "Retrieves one or more Smart Contract Module Versions Links using the Smart Contract Module Versions Link ID.",
        "operationId": ".core_api.v1.contract_modules.BatchGetSmartContractModuleVersionsLinksResponse|BatchGetSmartContractModuleVersionsLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1contract_modulesBatchGetSmartContractModuleVersionsLinksResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "List of IDs of the Smart Contract Module Versions Links to retrieve.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIContractModules"
        ],
        "x-section": "Contract Modules",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 8
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:read",
          "core.smart_contract_module_versions_links:read"
        ]
      }
    },
    "/v1/contracts:simulate": {
      "post": {
        "summary": "Simulates Smart Contracts",
        "operationId": ".core_api.v1.contracts.SimulateContractsResponse|SimulateContracts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "x-is-streaming": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1contractsSimulateContractsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIContracts"
        ],
        "x-section": "Contracts",
        "x-permission-scopes": [
          "core:execute",
          "core.contracts:execute"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1contractsSimulateContractsRequest"
        }
      }
    },
    "/v1/customer-addresses": {
      "get": {
        "summary": "Retrieves a customer address. This could retrieve no addresses, a single address or multiple addresses.",
        "operationId": ".core_api.v1.customers.ListCustomerAddressesResponse|ListCustomerAddresses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1customersListCustomerAddressesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique ID of the customer.\n\nRequired.",
            "name": "customer_id",
            "in": "query",
            "required": true,
            "x-example-override": "6499023882596562732",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Includes previous addresses for the customer. A previous address has an end_timestamp which is in the past. Optional; defaults to false.",
            "name": "include_previous",
            "in": "query",
            "required": false,
            "x-example-override": "true",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The number of addresses to be retrieved.\n\nRequired.\nMin value: 1.\nMax value: 1000.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "x-example-override": "10",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "x-example-override": "MjAw",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICustomers"
        ],
        "x-section": "Customers",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.customer_addresses:read"
        ]
      },
      "post": {
        "summary": "Creates a customer address.",
        "operationId": ".core_api.v1.customers.CustomerAddress|CreateCustomerAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1customersCustomerAddress"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPICustomers"
        ],
        "x-section": "Customers",
        "x-permission-scopes": [
          "core:write",
          "core.customer_addresses:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1customersCreateCustomerAddressRequest"
        }
      }
    },
    "/v1/customer-addresses/{customer_address.id}": {
      "put": {
        "summary": "Updates a customer address.",
        "operationId": ".core_api.v1.customers.CustomerAddress|UpdateCustomerAddress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1customersCustomerAddress"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The address ID. Output only.",
            "name": "customer_address.id",
            "in": "path",
            "required": true,
            "x-example-override": "8c926ef4-f09c-4db0-9b58-57030e4547c0",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICustomers"
        ],
        "x-section": "Customers",
        "x-permission-scopes": [
          "core:write",
          "core.customer_addresses:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1customersUpdateCustomerAddressRequest"
        }
      }
    },
    "/v1/customers": {
      "get": {
        "summary": "Lists customers with pagination (deprecated).",
        "operationId": ".core_api.v1.customers.ListCustomersResponse|ListCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1customersListCustomersResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "List of inclusive OR customer status filters. Optional.",
            "name": "statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "CUSTOMER_STATUS_ACTIVE": "The customer status is active. To open an account, the customer status must be active; accounts cannot be opened for a customer with any other customer status. The status of an active customer could change to either frozen or deceased but cannot change to prospect.",
              "CUSTOMER_STATUS_DECEASED": "The customer status is deceased. Accounts cannot be opened for the customer but may still be active. The status of a deceased customer could change to either active or frozen but cannot change to prospect.",
              "CUSTOMER_STATUS_FROZEN": "The customer status is frozen. Accounts cannot be opened for the customer. The status of a frozen customer could change to either active or deceased but cannot change to prospect.",
              "CUSTOMER_STATUS_PROSPECT": "The customer status is not yet active. Accounts cannot be opened. The status of a prospect customer can only change to active. Once the status has changed from prospect, it cannot be changed back to prospect.",
              "CUSTOMER_STATUS_UNKNOWN": "The customer status is unknown."
            },
            "x-example-override": "[\"CUSTOMER_STATUS_ACTIVE\", \"CUSTOMER_STATUS_PROSPECT\"]",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CUSTOMER_STATUS_UNKNOWN",
                  "CUSTOMER_STATUS_ACTIVE",
                  "CUSTOMER_STATUS_FROZEN",
                  "CUSTOMER_STATUS_DECEASED",
                  "CUSTOMER_STATUS_PROSPECT"
                ]
              }
            }
          },
          {
            "description": "List of inclusive OR email identifier filters. Must be URL encoded. Optional.",
            "name": "email_identifiers",
            "in": "query",
            "required": false,
            "x-example-override": "[\"api_user@domain.com\"]",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "List of inclusive OR phone number identifier filters. Must be URL encoded. Optional.",
            "name": "phone_identifiers",
            "in": "query",
            "required": false,
            "x-example-override": "[\"+447700900796\"]",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "List of inclusive OR username identifier filters. Must be URL encoded. Optional.",
            "name": "username_identifiers",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Adds a username filter for list customers"
            },
            "x-example-override": "[\"api_user\", \"another_api_user\"]",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/customersListCustomersRequestExternalCustomerIDPatternMatch",
              "description": "Pattern matching filter for the customer_details.external_customer_id field.",
              "x-release-info": {
                "releaseVersion": {
                  "major": 5,
                  "minor": 6
                },
                "changeType": "ADD_FIELD",
                "featureFlag": "IMP_1119_SEARCH_BY_EXTERNAL_CUSTOMER_ID"
              }
            },
            "name": "external_customer_id_pattern_match",
            "in": "query",
            "required": false
          },
          {
            "description": "Number of customers to be listed.\n\nRequired.\nMin value: 1.\nMax value: 200.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "x-example-override": "10",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "x-example-override": "MjI2NDEwMDM4OTg2MTU3NTI4OCFDNjQ5ODk4NDA1ODYwOTA3MDM4NQ",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICustomers"
        ],
        "x-section": "Customers",
        "x-release-info": {
          "noticeVersion": {
            "major": 4,
            "minor": 7
          },
          "releaseVersion": {
            "major": 6
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v1/customers:search"
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.customers:read"
        ]
      },
      "post": {
        "summary": "Creates a new customer.",
        "operationId": ".core_api.v1.customers.Customer|CreateCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1customersCustomer"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPICustomers"
        ],
        "x-section": "Customers",
        "x-permission-scopes": [
          "core:write",
          "core.customers:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1customersCreateCustomerRequest"
        }
      }
    },
    "/v1/customers/{customer.id}": {
      "put": {
        "summary": "Used to update a customer's status and identifiers.",
        "operationId": ".core_api.v1.customers.Customer|UpdateCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1customersCustomer"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique ID of the customer. Defaults to a UUID if not provided on creation.",
            "name": "customer.id",
            "in": "path",
            "required": true,
            "x-example-override": "86d86f07-7ba6-466e-9f41-f72c24e9b13b",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICustomers"
        ],
        "x-section": "Customers",
        "x-permission-scopes": [
          "core:write",
          "core.customers:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1customersUpdateCustomerRequest"
        }
      }
    },
    "/v1/customers/{customer_id}:updateAdditionalDetails": {
      "put": {
        "summary": "Updates additional details for a customer.",
        "operationId": ".core_api.v1.customers.Customer|UpdateCustomerAdditionalDetails",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1customersCustomer"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique ID of the customer.",
            "name": "customer_id",
            "in": "path",
            "required": true,
            "x-example-override": "6499023882596562732",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICustomers"
        ],
        "x-section": "Customers",
        "x-permission-scopes": [
          "core:write",
          "core.customers:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1customersUpdateCustomerAdditionalDetailsRequest"
        }
      }
    },
    "/v1/customers/{id}": {
      "get": {
        "summary": "Retrieves a customer.",
        "operationId": ".core_api.v1.customers.Customer|GetCustomer",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1customersCustomer"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique ID of the customer.",
            "name": "id",
            "in": "path",
            "required": true,
            "x-example-override": "6499023882596562732",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPICustomers"
        ],
        "x-section": "Customers",
        "x-permission-scopes": [
          "core:read",
          "core.customers:read"
        ]
      }
    },
    "/v1/customers:batchGet": {
      "get": {
        "summary": "Retrieves customers for the customer IDs provided.",
        "operationId": ".core_api.v1.customers.BatchGetCustomersResponse|BatchGetCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1customersBatchGetCustomersResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of customers that are to be retrieved.\n\nRequired.\nMin length: 1 characters.",
            "name": "ids",
            "in": "query",
            "required": true,
            "x-example-override": "[\"6499023882596562732\", \"496755199759406183\"]",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPICustomers"
        ],
        "x-section": "Customers",
        "x-permission-scopes": [
          "core:read",
          "core.customers:read"
        ]
      }
    },
    "/v1/customers:search": {
      "post": {
        "summary": "Lists customers with pagination.",
        "operationId": ".core_api.v1.customers.ListCustomersResponse|SearchCustomers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1customersListCustomersResponse"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPICustomers"
        ],
        "x-section": "Customers",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.customers:read"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1customersListCustomersRequest"
        }
      }
    },
    "/v1/derived-parameter-values": {
      "get": {
        "summary": "GetDerivedParameterValues returns derived parameter values for the provided Account ID, executing the [derived_parameter_hook](/reference/contracts/contracts_api_4xx/smart_contracts_api_reference4xx/hooks/#derived_parameter_hook). Deprecated in favour of v1/account-attribute-values.",
        "operationId": ".core_api.v1.derived_parameters.GetDerivedParameterValuesResponse|GetDerivedParameterValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1derived_parametersGetDerivedParameterValuesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GetDerivedParameterValuesFAILED_PRECONDITION_0",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIDerivedParametersINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Account ID for which derived parameters are calculated for.",
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The returned derived parameter values will be calculated as of this timestamp. Defaults to the current time in UTC. Should be formatted as an RFC3339 timestamp.",
            "name": "effective_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "tags": [
          "CoreAPIDerivedParameters"
        ],
        "x-section": "Derived Parameters",
        "x-permission-scopes": [
          "core:read",
          "core.derived_parameter_values:read"
        ]
      }
    },
    "/v1/journal-events": {
      "get": {
        "summary": "Retrieves a page of Journal Events.",
        "operationId": ".core_api.v1.events.ListJournalEventsResponse|ListJournalEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1eventsListJournalEventsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "501": {
            "description": "The error response for 501",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIJournalEventsUNIMPLEMENTED_0",
                  "description": "The service is not implemented",
                  "title": "UNIMPLEMENTED"
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/v1eventsTimeWindow",
              "description": "Interval of time to query for. Required. Must be within the last 7 days."
            },
            "name": "time_window",
            "in": "query",
            "required": false
          },
          {
            "description": "The type of the Vault resource. Required.",
            "name": "resource_type",
            "in": "query",
            "required": false,
            "x-enum-value-release-info": {
              "RESOURCE_TYPE_ADJUSTMENT": {
                "releaseVersion": {
                  "major": 5,
                  "minor": 7
                },
                "changeType": "ADD_ENUM_VALUE",
                "featureFlag": "IMP_153_ADJUSTMENTS_PROD"
              },
              "RESOURCE_TYPE_BALANCE_EVENT_V2": {
                "releaseVersion": {
                  "major": 5,
                  "minor": 7
                },
                "changeType": "ADD_ENUM_VALUE",
                "featureFlag": "IMP_1354_BALANCES_V2_STREAMING"
              }
            },
            "x-enum-value-descriptions": {
              "RESOURCE_TYPE_ACCOUNT": "The Core API v1 Account resource.",
              "RESOURCE_TYPE_ACCOUNT_BALANCE": "The Core API v1 Balance resource.",
              "RESOURCE_TYPE_ACCOUNT_UPDATE": "The Core API Account Update resource.",
              "RESOURCE_TYPE_ACCOUNT_UPDATE_BATCH": "The Core API Account Update Batch resource.",
              "RESOURCE_TYPE_ACCOUNT_V2": "The Core API v2 Account resource.",
              "RESOURCE_TYPE_ADJUSTMENT": "The Core API Adjustment resource.",
              "RESOURCE_TYPE_BALANCE_EVENT_V2": "The Core API v2 Balance resource.",
              "RESOURCE_TYPE_ENRICHED_POSTING_INSTRUCTION_BATCH": "The Core API Enriched Posting Instruction Batch resource.",
              "RESOURCE_TYPE_FLAG": "The Core API Flag resource.",
              "RESOURCE_TYPE_PARAMETER": "The Core API Parameter resource.",
              "RESOURCE_TYPE_PARAMETERVALUE": "The Core API Parameter Value resource.",
              "RESOURCE_TYPE_PARAMETER_VALUE_HIERARCHY_NODE": "The Core API Parameter Value Hierarchy Node resource.",
              "RESOURCE_TYPE_POSTING_INSTRUCTION_BATCH": "The Core API Posting Instruction Batch resource.",
              "RESOURCE_TYPE_RESTRICTION_SET": "The Core API Restriction Set resource.",
              "RESOURCE_TYPE_SCHEDULER_OPERATION": "The Core API Scheduler Operation resource.",
              "RESOURCE_TYPE_VAULT_JOB": "The Core API Vault Jobs resource.",
              "RESOURCE_TYPE_VAULT_JOB_GROUP": "The Core API Vault Jobs Group resource."
            },
            "schema": {
              "type": "string",
              "enum": [
                "RESOURCE_TYPE_UNKNOWN",
                "RESOURCE_TYPE_SCHEDULER_OPERATION",
                "RESOURCE_TYPE_ACCOUNT_BALANCE",
                "RESOURCE_TYPE_ENRICHED_POSTING_INSTRUCTION_BATCH",
                "RESOURCE_TYPE_POSTING_INSTRUCTION_BATCH",
                "RESOURCE_TYPE_ACCOUNT",
                "RESOURCE_TYPE_ACCOUNT_UPDATE",
                "RESOURCE_TYPE_ACCOUNT_UPDATE_BATCH",
                "RESOURCE_TYPE_ACCOUNT_V2",
                "RESOURCE_TYPE_RESTRICTION_SET",
                "RESOURCE_TYPE_FLAG",
                "RESOURCE_TYPE_PARAMETER",
                "RESOURCE_TYPE_PARAMETERVALUE",
                "RESOURCE_TYPE_VAULT_JOB",
                "RESOURCE_TYPE_PARAMETER_VALUE_HIERARCHY_NODE",
                "RESOURCE_TYPE_VAULT_JOB_GROUP",
                "RESOURCE_TYPE_ADJUSTMENT",
                "RESOURCE_TYPE_BALANCE_EVENT_V2"
              ],
              "default": "RESOURCE_TYPE_UNKNOWN"
            }
          },
          {
            "description": "Number of results to be retrieved. Required.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIJournalEvents"
        ],
        "x-section": "Journal Events",
        "x-permission-scopes": [
          "core:read",
          "core.journal_events:read"
        ]
      }
    },
    "/v1/journal-events:checksum": {
      "get": {
        "summary": "Retrieves the Journal Events count and checksum for the specified window.",
        "operationId": ".core_api.v1.events.GetJournalEventsChecksumResponse|GetJournalEventsChecksum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1eventsGetJournalEventsChecksumResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "501": {
            "description": "The error response for 501",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIJournalEventsUNIMPLEMENTED_0",
                  "description": "The service is not implemented",
                  "title": "UNIMPLEMENTED"
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/v1eventsTimeWindow",
              "description": "Interval of time to query for. Required. Must be within the last 7 days."
            },
            "name": "time_window",
            "in": "query",
            "required": false
          },
          {
            "description": "The type of the Vault resource. Required.",
            "name": "resource_type",
            "in": "query",
            "required": false,
            "x-enum-value-release-info": {
              "RESOURCE_TYPE_ADJUSTMENT": {
                "releaseVersion": {
                  "major": 5,
                  "minor": 7
                },
                "changeType": "ADD_ENUM_VALUE",
                "featureFlag": "IMP_153_ADJUSTMENTS_PROD"
              },
              "RESOURCE_TYPE_BALANCE_EVENT_V2": {
                "releaseVersion": {
                  "major": 5,
                  "minor": 7
                },
                "changeType": "ADD_ENUM_VALUE",
                "featureFlag": "IMP_1354_BALANCES_V2_STREAMING"
              }
            },
            "x-enum-value-descriptions": {
              "RESOURCE_TYPE_ACCOUNT": "The Core API v1 Account resource.",
              "RESOURCE_TYPE_ACCOUNT_BALANCE": "The Core API v1 Balance resource.",
              "RESOURCE_TYPE_ACCOUNT_UPDATE": "The Core API Account Update resource.",
              "RESOURCE_TYPE_ACCOUNT_UPDATE_BATCH": "The Core API Account Update Batch resource.",
              "RESOURCE_TYPE_ACCOUNT_V2": "The Core API v2 Account resource.",
              "RESOURCE_TYPE_ADJUSTMENT": "The Core API Adjustment resource.",
              "RESOURCE_TYPE_BALANCE_EVENT_V2": "The Core API v2 Balance resource.",
              "RESOURCE_TYPE_ENRICHED_POSTING_INSTRUCTION_BATCH": "The Core API Enriched Posting Instruction Batch resource.",
              "RESOURCE_TYPE_FLAG": "The Core API Flag resource.",
              "RESOURCE_TYPE_PARAMETER": "The Core API Parameter resource.",
              "RESOURCE_TYPE_PARAMETERVALUE": "The Core API Parameter Value resource.",
              "RESOURCE_TYPE_PARAMETER_VALUE_HIERARCHY_NODE": "The Core API Parameter Value Hierarchy Node resource.",
              "RESOURCE_TYPE_POSTING_INSTRUCTION_BATCH": "The Core API Posting Instruction Batch resource.",
              "RESOURCE_TYPE_RESTRICTION_SET": "The Core API Restriction Set resource.",
              "RESOURCE_TYPE_SCHEDULER_OPERATION": "The Core API Scheduler Operation resource.",
              "RESOURCE_TYPE_VAULT_JOB": "The Core API Vault Jobs resource.",
              "RESOURCE_TYPE_VAULT_JOB_GROUP": "The Core API Vault Jobs Group resource."
            },
            "schema": {
              "type": "string",
              "enum": [
                "RESOURCE_TYPE_UNKNOWN",
                "RESOURCE_TYPE_SCHEDULER_OPERATION",
                "RESOURCE_TYPE_ACCOUNT_BALANCE",
                "RESOURCE_TYPE_ENRICHED_POSTING_INSTRUCTION_BATCH",
                "RESOURCE_TYPE_POSTING_INSTRUCTION_BATCH",
                "RESOURCE_TYPE_ACCOUNT",
                "RESOURCE_TYPE_ACCOUNT_UPDATE",
                "RESOURCE_TYPE_ACCOUNT_UPDATE_BATCH",
                "RESOURCE_TYPE_ACCOUNT_V2",
                "RESOURCE_TYPE_RESTRICTION_SET",
                "RESOURCE_TYPE_FLAG",
                "RESOURCE_TYPE_PARAMETER",
                "RESOURCE_TYPE_PARAMETERVALUE",
                "RESOURCE_TYPE_VAULT_JOB",
                "RESOURCE_TYPE_PARAMETER_VALUE_HIERARCHY_NODE",
                "RESOURCE_TYPE_VAULT_JOB_GROUP",
                "RESOURCE_TYPE_ADJUSTMENT",
                "RESOURCE_TYPE_BALANCE_EVENT_V2"
              ],
              "default": "RESOURCE_TYPE_UNKNOWN"
            }
          }
        ],
        "tags": [
          "CoreAPIJournalEvents"
        ],
        "x-section": "Journal Events",
        "x-permission-scopes": [
          "core:read",
          "core.journal_events:read"
        ]
      }
    },
    "/v1/journal-events:replay": {
      "post": {
        "summary": "Replays a specific set of events of a particular resource type (max batch size = 100). The events will be streamed with a `X-JournalEventsBatch-ID` header value set to the `journal_events_batch_id` value returned. <br> Due to the possibility of automatic retries internally, in exceptional circumstances events may also be streamed out with batch IDs other than the one returned; these should be ignored.",
        "operationId": ".core_api.v1.events.ReplayJournalEventsResponse|ReplayJournalEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1eventsReplayJournalEventsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "501": {
            "description": "The error response for 501",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIJournalEventsUNIMPLEMENTED_0",
                  "description": "The service is not implemented",
                  "title": "UNIMPLEMENTED"
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIJournalEvents"
        ],
        "x-section": "Journal Events",
        "x-permission-scopes": [
          "core:execute",
          "core.journal_events:execute"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1eventsReplayJournalEventsRequest"
        }
      }
    },
    "/v1/flag-definitions": {
      "get": {
        "summary": "Retrieves Flag Definitions that correspond to the parameters supplied.",
        "operationId": ".core_api.v1.flags.ListFlagDefinitionsResponse|ListFlagDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1flagsListFlagDefinitionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIFlagsINVALID_ARGUMENT_0",
                  "description": "Returned when the request can never be fulfilled.",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Flag visibility level that Flag Definitions are to be returned for. Set this to FLAG_VISIBILITY_OPERATOR to return Flag Definitions with Flag visibility=FLAG_VISIBILITY_OPERATOR. Set this to FLAG_VISIBILITY_CONTRACT to return all Flag Definitions. Optional.",
            "name": "flag_visibility_level",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "FLAG_VISIBILITY_CONTRACT": "The Flag is visible only to Smart Contracts.",
              "FLAG_VISIBILITY_OPERATOR": "The Flag is visible to UI operators and Smart Contracts.",
              "FLAG_VISIBILITY_UNKNOWN": "This status exists to avoid an empty request unintentionally setting an undesired status. A Flag will never have this status."
            },
            "schema": {
              "type": "string",
              "enum": [
                "FLAG_VISIBILITY_UNKNOWN",
                "FLAG_VISIBILITY_CONTRACT",
                "FLAG_VISIBILITY_OPERATOR"
              ],
              "default": "FLAG_VISIBILITY_UNKNOWN"
            }
          },
          {
            "description": "The Flag levels in the Flag Definition. If unspecified, this is equivalent to all Flag levels. Optional.",
            "name": "flag_levels",
            "in": "query",
            "required": false,
            "x-enum-value-release-info": {
              "FLAG_LEVEL_PAYMENT_DEVICE": {
                "noticeVersion": {
                  "major": 5,
                  "minor": 1
                },
                "releaseVersion": {
                  "major": 7
                },
                "changeType": "REMOVE_ENUM_VALUE",
                "description": "Deprecated due to lack of use."
              }
            },
            "x-enum-value-descriptions": {
              "FLAG_LEVEL_ACCOUNT": "Makes a Flag apply to the account ID.",
              "FLAG_LEVEL_CUSTOMER": "Makes a Flag apply to the customer ID.",
              "FLAG_LEVEL_PAYMENT_DEVICE": "Makes a Flag apply to the payment device ID.",
              "FLAG_LEVEL_UNKNOWN": "This status exists to avoid an empty request unintentionally setting an undesired status. A Flag will never have this status."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "FLAG_LEVEL_UNKNOWN",
                  "FLAG_LEVEL_CUSTOMER",
                  "FLAG_LEVEL_ACCOUNT",
                  "FLAG_LEVEL_PAYMENT_DEVICE"
                ]
              }
            }
          },
          {
            "description": "Indicates whether inactive Flag Definitions are included. Optional.",
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Number of results to be retrieved. Required; must be non-zero. The Vault Core 6.0 release will reduce the maximum page size to 100.\n\nRequired.\nMin value: 1.\nMax value: 500.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIFlags"
        ],
        "x-section": "Flags",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.flag_definitions:read"
        ]
      },
      "post": {
        "summary": "Creates a Flag Definition.",
        "operationId": ".core_api.v1.flags.FlagDefinition|CreateFlagDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1flagsFlagDefinition"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CreateFlagDefinitionFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIFlagsINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "409": {
            "description": "The error response for 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFlagDefinitionALREADY_EXISTS_0",
                  "description": "Returned when a Flag Definition with the requested ID already exists.",
                  "title": "ALREADY_EXISTS"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIFlags"
        ],
        "x-section": "Flags",
        "x-permission-scopes": [
          "core:write",
          "core.flag_definitions:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1flagsCreateFlagDefinitionRequest"
        }
      }
    },
    "/v1/flag-definitions/{flag_definition.id}": {
      "put": {
        "summary": "Updates a Flag Definition.",
        "operationId": ".core_api.v1.flags.FlagDefinition|UpdateFlagDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1flagsFlagDefinition"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UpdateFlagDefinitionFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIFlagsINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFlagDefinitionNOT_FOUND_0",
                  "description": "Returned when the provided Flag Definition ID does not exist.",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Flag Definition. Matches the name field. One of ID or name must be provided for create requests. If both are provided, ID will be used.",
            "name": "flag_definition.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIFlags"
        ],
        "x-section": "Flags",
        "x-permission-scopes": [
          "core:write",
          "core.flag_definitions:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1flagsUpdateFlagDefinitionRequest"
        }
      }
    },
    "/v1/flag-definitions:batchGet": {
      "get": {
        "summary": "Retrieves Flag Definitions that correspond to the requested Flag Definition IDs.",
        "operationId": ".core_api.v1.flags.BatchGetFlagDefinitionsResponse|BatchGetFlagDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1flagsBatchGetFlagDefinitionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIFlagsINVALID_ARGUMENT_0",
                  "description": "Returned when the request can never be fulfilled.",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetFlagDefinitionsNOT_FOUND_0",
                  "description": "Returned if any of the provided IDs do not match an existing Flag Definition ID.",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Flag Definition IDs or names to be retrieved. The Vault Core 6.0 release will enforce a maximum number of IDs of 50.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIFlags"
        ],
        "x-section": "Flags",
        "x-permission-scopes": [
          "core:read",
          "core.flag_definitions:read"
        ]
      }
    },
    "/v1/flags": {
      "get": {
        "summary": "Retrieves Flags that correspond to the parameters supplied.",
        "operationId": ".core_api.v1.flags.ListFlagsResponse|ListFlags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1flagsListFlagsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIFlagsINVALID_ARGUMENT_0",
                  "description": "Returned when the request can never be fulfilled.",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Flag Definition ID that returned Flags should correspond to. Optional.",
            "name": "flag_definition_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The IDs of customers the applied Flags should be included for. Optional. If used in conjunction with account_ids or payment_device_ids (deprecated), each Flag returned will match one of the provided filters.",
            "name": "customer_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The IDs of accounts the applied Flags should be included for. Optional. If used in conjunction with customer_ids or payment_device_ids (deprecated), each Flag returned will match one of the provided filters.",
            "name": "account_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The IDs of payment devices the applied Flags should be included for. Optional. If used in conjunction with account_ids or customer_ids, each Flag returned will match one of the provided filters.",
            "name": "payment_device_ids",
            "in": "query",
            "required": false,
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 2
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "Deprecated due to lack of use."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The Flag visibility level that Flags are to be returned for. Set this to FLAG_VISIBILITY_OPERATOR to return only Flags belonging to a Flag Definition with a flag_visibility=FLAG_VISIBILITY_OPERATOR. Set this to FLAG_VISIBILITY_CONTRACT to return all Flags. Optional.",
            "name": "flag_visibility_level",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "FLAG_VISIBILITY_CONTRACT": "The Flag is visible only to Smart Contracts.",
              "FLAG_VISIBILITY_OPERATOR": "The Flag is visible to UI operators and Smart Contracts.",
              "FLAG_VISIBILITY_UNKNOWN": "This status exists to avoid an empty request unintentionally setting an undesired status. A Flag will never have this status."
            },
            "schema": {
              "type": "string",
              "enum": [
                "FLAG_VISIBILITY_UNKNOWN",
                "FLAG_VISIBILITY_CONTRACT",
                "FLAG_VISIBILITY_OPERATOR"
              ],
              "default": "FLAG_VISIBILITY_UNKNOWN"
            }
          },
          {
            "description": "Timestamp after which the Flag will be effective, in UTC. Cannot be used in conjunction with effective_timestamp_range. Optional. Must be formatted as an RFC3339 timestamp. Will be truncated to microsecond precision.",
            "name": "effective_timestamp",
            "in": "query",
            "required": false,
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 2
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "Use effective_timestamp_range instead."
            },
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Indicates whether inactive Flags are included. Optional.",
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 2
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "Deprecated due to the deprecation of is_active. Use effective_timestamp_range instead. The Flag would be considered active if the current timestamp was between its effective and expiry timestamps."
            },
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The number of results to be retrieved. Required; must be non-zero and less than 3000. The 6.0 release will reduce the maximum page size to 100.\n\nRequired.\nMin value: 1.\nMax value: 3000.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "effective_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "The timestamp range that must overlap with the period of time when a Flag becomes effective and expires if the Flag is to be included; if the range and period of time do not overlap, the Flag will not be included. This range is from effective_timestamp_range.from up to and not including effective_timestamp_range.to. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "effective_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "The timestamp range that must overlap with the period of time when a Flag becomes effective and expires if the Flag is to be included; if the range and period of time do not overlap, the Flag will not be included. This range is from effective_timestamp_range.from up to and not including effective_timestamp_range.to. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          }
        ],
        "tags": [
          "CoreAPIFlags"
        ],
        "x-section": "Flags",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.flags:read"
        ]
      },
      "post": {
        "summary": "Creates a Flag.",
        "operationId": ".core_api.v1.flags.Flag|CreateFlag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1flagsFlag"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CreateFlagFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateFlagFAILED_PRECONDITION_2",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateFlagFAILED_PRECONDITION_3",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateFlagFAILED_PRECONDITION_4",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateFlagFAILED_PRECONDITION_5",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateFlagFAILED_PRECONDITION_6",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIFlagsINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "409": {
            "description": "The error response for 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateFlagALREADY_EXISTS_0",
                  "description": "Returned when a Flag with the requested ID already exists.",
                  "title": "ALREADY_EXISTS"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIFlags"
        ],
        "x-section": "Flags",
        "x-permission-scopes": [
          "core:write",
          "core.flags:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1flagsCreateFlagRequest"
        }
      }
    },
    "/v1/flags/{flag.id}": {
      "put": {
        "summary": "Updates a Flag.",
        "operationId": ".core_api.v1.flags.Flag|UpdateFlag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1flagsFlag"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UpdateFlagFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIFlagsINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateFlagNOT_FOUND_0",
                  "description": "Returned when the provided Flag ID does not exist.",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Flag. Output only. From Vault version 5.2 onwards, this defaults to a UUID.",
            "name": "flag.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIFlags"
        ],
        "x-section": "Flags",
        "x-permission-scopes": [
          "core:write",
          "core.flags:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1flagsUpdateFlagRequest"
        }
      }
    },
    "/v1/flags:batchGet": {
      "get": {
        "summary": "Retrieves Flags that correspond to the requested Flag IDs.",
        "operationId": ".core_api.v1.flags.BatchGetFlagsResponse|BatchGetFlags",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1flagsBatchGetFlagsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIFlagsINVALID_ARGUMENT_0",
                  "description": "Returned when the request can never be fulfilled.",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetFlagsNOT_FOUND_0",
                  "description": "Returned if any of the provided IDs do not match an existing Flag ID.",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Flag Definition IDs or names to be retrieved. The maximum number of IDs is 50.\n\nRequired.\nMax count: 50.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIFlags"
        ],
        "x-section": "Flags",
        "x-permission-scopes": [
          "core:read",
          "core.flags:read"
        ]
      }
    },
    "/v1/global-parameter-values": {
      "get": {
        "summary": "Lists `GlobalParameterValue`s for a given `GlobalParameter` ID and an optional time range with pagination.",
        "operationId": ".core_api.v1.global_parameters.ListGlobalParameterValuesResponse|ListGlobalParameterValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1global_parametersListGlobalParameterValuesResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The `GlobalParameter` ID to retrieve values for.\n\nRequired.",
            "name": "global_parameter_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of `GlobalParametersValues` to be retrieved.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, this returns the first page of results.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "effective_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "Optional time range. If provided, only `GlobalParameterValue`s that have the appropriate `effective_timestamp` will be retrieved. If the `effective_timestamp_range.from` attribute is not provided, it defaults to the minimum timestamp. If `effective_timestamp_range.to` is not provided, it defaults to the maximum timestamp. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "effective_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "Optional time range. If provided, only `GlobalParameterValue`s that have the appropriate `effective_timestamp` will be retrieved. If the `effective_timestamp_range.from` attribute is not provided, it defaults to the minimum timestamp. If `effective_timestamp_range.to` is not provided, it defaults to the maximum timestamp. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          }
        ],
        "tags": [
          "CoreAPIGlobalParameters"
        ],
        "x-section": "Global parameters",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.global_parameter_values:read"
        ]
      },
      "post": {
        "summary": "Creates a new `GlobalParameterValue`.",
        "operationId": ".core_api.v1.global_parameters.GlobalParameterValue|CreateGlobalParameterValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1global_parametersGlobalParameterValue"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGlobalParameterValueFAILED_PRECONDITION_0",
                  "description": "Returned when attempting to create a GlobalParameterValue which overlaps with a ParameterValue with an explicitly set effective_timestamp range. This can only be rectified by unsetting the ParameterValue's effective_to_timestamp if possible.",
                  "title": "FAILED_PRECONDITION",
                  "x-release-info": {
                    "releaseVersion": {
                      "major": 5
                    },
                    "changeType": "ADD_ERROR",
                    "featureFlag": "CPP_1430_ACCOUNTS_V2"
                  }
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "409": {
            "description": "The error response for 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateGlobalParameterValueALREADY_EXISTS_1",
                  "description": "Returned when attempting to create a GlobalParameterValue which overlaps with the effective_timestamp of an existing GlobalParameterValue.",
                  "title": "ALREADY_EXISTS"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIGlobalParameters"
        ],
        "x-section": "Global parameters",
        "x-permission-scopes": [
          "core:write",
          "core.global_parameter_values:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1global_parametersCreateGlobalParameterValueRequest"
        }
      }
    },
    "/v1/global-parameters": {
      "get": {
        "summary": "Lists `GlobalParameters` with pagination.",
        "operationId": ".core_api.v1.global_parameters.ListGlobalParametersResponse|ListGlobalParameters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1global_parametersListGlobalParametersResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of `GlobalParameter`s to be retrieved.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, this returns the first page of results.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIGlobalParameters"
        ],
        "x-section": "Global parameters",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.global_parameters:read"
        ]
      },
      "post": {
        "summary": "Creates a new `GlobalParameter`. It also creates a new `GlobalParameterValue` which will have the value specified in the request, and the effective timestamp of the Unix epoch.",
        "operationId": ".core_api.v1.global_parameters.GlobalParameter|CreateGlobalParameter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1global_parametersGlobalParameter"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIGlobalParameters"
        ],
        "x-section": "Global parameters",
        "x-permission-scopes": [
          "core:write",
          "core.global_parameters:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1global_parametersCreateGlobalParameterRequest"
        }
      }
    },
    "/v1/global-parameters/{id}": {
      "get": {
        "summary": "Retrieves a `GlobalParameter`.",
        "operationId": ".core_api.v1.global_parameters.GlobalParameter|GetGlobalParameter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1global_parametersGlobalParameter"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the `GlobalParameter` to be retrieved.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIGlobalParameters"
        ],
        "x-section": "Global parameters",
        "x-permission-scopes": [
          "core:read",
          "core.global_parameters:read"
        ]
      }
    },
    "/v1/global-parameters:batchGet": {
      "get": {
        "summary": "Retrieves `GlobalParameter`s for the provided IDs.",
        "operationId": ".core_api.v1.global_parameters.BatchGetGlobalParametersResponse|BatchGetGlobalParameters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1global_parametersBatchGetGlobalParametersResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of IDs of `GlobalParameter`s to be retrieved.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIGlobalParameters"
        ],
        "x-section": "Global parameters",
        "x-permission-scopes": [
          "core:read",
          "core.global_parameters:read"
        ]
      }
    },
    "/v1/internal-accounts": {
      "get": {
        "summary": "Lists all internal accounts that match the criteria used.",
        "operationId": ".core_api.v1.internal_accounts.ListInternalAccountsResponse|ListInternalAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1internal_accountsListInternalAccountsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The view of the data to return. Optional; default ACCOUNT_VIEW_BASIC.",
            "name": "view",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "ACCOUNT_VIEW_BASIC": "Returned Account(s) include no balances. Default."
            },
            "schema": {
              "type": "string",
              "enum": [
                "ACCOUNT_VIEW_BASIC"
              ],
              "default": "ACCOUNT_VIEW_BASIC"
            }
          },
          {
            "description": "The number of results to be listed. Required; must be non-zero and no greater than 1000. The 6.0 release will reduce the maximum page size to 100.\n\nRequired.\nMin value: 1.\nMax value: 1000.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIInternalAccounts"
        ],
        "x-section": "Internal accounts",
        "x-release-info": {
          "noticeVersion": {
            "major": 5
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v2/accounts."
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.internal_accounts:read"
        ]
      },
      "post": {
        "summary": "Creates an internal account.",
        "operationId": ".core_api.v1.internal_accounts.InternalAccount|CreateInternalAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1internal_accountsInternalAccount"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIInternalAccounts"
        ],
        "x-section": "Internal accounts",
        "x-release-info": {
          "noticeVersion": {
            "major": 5
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v2/accounts."
        },
        "x-permission-scopes": [
          "core:write",
          "core.internal_accounts:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1internal_accountsCreateInternalAccountRequest"
        }
      }
    },
    "/v1/internal-accounts/{id}": {
      "get": {
        "summary": "Retrieves a specified internal account.",
        "operationId": ".core_api.v1.internal_accounts.InternalAccount|GetInternalAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1internal_accountsInternalAccount"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the internal account that is to be retrieved. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "View of the data to return. Optional; default ACCOUNT_VIEW_BASIC.",
            "name": "view",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "ACCOUNT_VIEW_BASIC": "Returned Account(s) include no balances. Default."
            },
            "schema": {
              "type": "string",
              "enum": [
                "ACCOUNT_VIEW_BASIC"
              ],
              "default": "ACCOUNT_VIEW_BASIC"
            }
          }
        ],
        "tags": [
          "CoreAPIInternalAccounts"
        ],
        "x-section": "Internal accounts",
        "x-release-info": {
          "noticeVersion": {
            "major": 5
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v2/accounts."
        },
        "x-permission-scopes": [
          "core:read",
          "core.internal_accounts:read"
        ]
      }
    },
    "/v1/internal-accounts:batchGet": {
      "get": {
        "summary": "Retrieves one or more internal accounts based on their IDs.",
        "operationId": ".core_api.v1.internal_accounts.BatchGetInternalAccountsResponse|BatchGetInternalAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1internal_accountsBatchGetInternalAccountsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of internal accounts to be retrieved. Required; must be non-empty. The 6.0 release will enforce a maximum number of IDs of 50.\n\nRequired.\nMin count: 1.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "View of the data to return. Optional; default ACCOUNT_VIEW_BASIC.",
            "name": "view",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "ACCOUNT_VIEW_BASIC": "Returned Account(s) include no balances. Default."
            },
            "schema": {
              "type": "string",
              "enum": [
                "ACCOUNT_VIEW_BASIC"
              ],
              "default": "ACCOUNT_VIEW_BASIC"
            }
          }
        ],
        "tags": [
          "CoreAPIInternalAccounts"
        ],
        "x-section": "Internal accounts",
        "x-release-info": {
          "noticeVersion": {
            "major": 5
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v2/accounts."
        },
        "x-permission-scopes": [
          "core:read",
          "core.internal_accounts:read"
        ]
      }
    },
    "/v1/ledger-balances": {
      "get": {
        "summary": "Lists Ledger Balances for the supplied account IDs at a specified timestamp. The timestamp refers to the Postings Ledger insertion timestamp, thus a Ledger Balance is the sum of all postings up to, and including, that Postings Ledger insertion timestamp. If requesting Ledger Balances for Internal Accounts, it is recommended to send one request per Internal Account.",
        "operationId": ".core_api.v1.ledger_balances.ListLedgerBalancesResponse|ListLedgerBalances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ledger_balancesListLedgerBalancesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The IDs of the accounts that Ledger Balances are to be listed for.\n\nRequired.",
            "name": "account_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The Postings Ledger timestamp at which to retrieve Ledger Balances. Must be formatted as an RFC3339 timestamp.\n\nRequired.",
            "name": "ledger_timestamp",
            "in": "query",
            "required": true,
            "x-example-override": "2020-01-13T19:13:23.000Z",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The number of results to be retrieved. Validated in the ledger balance service.\n\nRequired.\nMin value: 1.\nMax value: 10000.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, the first page of results will be returned. Optional.\n",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPILedgerBalances"
        ],
        "x-section": "LedgerBalances",
        "x-list-consistency-level": "SNAPSHOT",
        "x-permission-scopes": [
          "core:read",
          "core.ledger_balances:read"
        ]
      }
    },
    "/v1/ledger-balances/{id}": {
      "get": {
        "summary": "Retrieves a Ledger Balance by ID.",
        "operationId": ".core_api.v1.ledger_balances.LedgerBalance|GetLedgerBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1ledger_balancesLedgerBalance"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Ledger Balance to be retrieved. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "x-example-override": "b2d26233-9438-43b3-abe5-cda0db5dfcae",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPILedgerBalances"
        ],
        "x-section": "LedgerBalances",
        "x-permission-scopes": [
          "core:read",
          "core.ledger_balances:read"
        ]
      }
    },
    "/v1/parameter-value-hierarchy-nodes": {
      "get": {
        "summary": "Retrieves a filtered and paginated list of Parameter Value Hierarchy Nodes.",
        "operationId": ".core_api.v1.parameters.ListParameterValueHierarchyNodesResponse|ListParameterValueHierarchyNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersListParameterValueHierarchyNodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of Parameter Value Hierarchy Nodes to be returned. Maximum 100. Required.",
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the requested page, which comes from a previous GET v1/parameter-value-hierarchy-nodes response. All other fields of the request must be kept the same as the request which resulted in the page token. If empty, the first page will be returned.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The order in which Parameter Value Hierarchy Nodes will be returned. When ordering results with the same value, Parameter Value Hierarchy Nodes will be sorted by ascending `parent_id` and then by ascending `id`.",
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_BY_DEPTH_ASC"
              ],
              "default": "ORDER_BY_DEPTH_ASC"
            }
          },
          {
            "description": "A set of Parameter Value Hierarchy Node IDs. Matches all Parameter Value Hierarchy Nodes with a `parent_id` in the set. Must not contain empty IDs.",
            "name": "parent_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "A set of names. Matches all Parameter Value Hierarchy Nodes with a `name` in the provided names. Must not contain empty strings.",
            "name": "names",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-list-consistency-level": "PAGE_LEVEL",
        "x-permission-scopes": [
          "core:read",
          "core.parameter_value_hierarchy_nodes:read"
        ]
      },
      "post": {
        "summary": "Creates a Parameter Value Hierarchy Node.",
        "operationId": ".core_api.v1.parameters.ParameterValueHierarchyNode|CreateParameterValueHierarchyNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersParameterValueHierarchyNode"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CreateParameterValueHierarchyNodeFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateParameterValueHierarchyNodeFAILED_PRECONDITION_2",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "409": {
            "description": "The error response for 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateParameterValueHierarchyNodeALREADY_EXISTS_0",
                  "description": "Returned when a Parameter Value Hierarchy Node with the same ID already exists",
                  "title": "ALREADY_EXISTS"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-permission-scopes": [
          "core:write",
          "core.parameter_value_hierarchy_nodes:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1parametersCreateParameterValueHierarchyNodeRequest"
        }
      }
    },
    "/v1/parameter-value-hierarchy-nodes/{parameter_value_hierarchy_node.id}": {
      "put": {
        "summary": "Updates a Parameter Value Hierarchy Node.",
        "operationId": ".core_api.v1.parameters.ParameterValueHierarchyNode|UpdateParameterValueHierarchyNode",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersParameterValueHierarchyNode"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UpdateParameterValueHierarchyNodeFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateParameterValueHierarchyNodeNOT_FOUND_0",
                  "description": "Returned when the Parameter Value Hierarchy Node being updated cannot be found.",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Unique identifier for the Parameter Value Hierarchy Node. Forms part of the `parent_path` for child nodes. This should not have any meaning related to the resource. It must match the regex `^[A-Za-z0-9][A-Za-z0-9-_.]*$` and its length must not exceed 256 characters. Required for create or update requests.",
            "name": "parameter_value_hierarchy_node.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-permission-scopes": [
          "core:write",
          "core.parameter_value_hierarchy_nodes:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1parametersUpdateParameterValueHierarchyNodeRequest"
        }
      }
    },
    "/v1/parameter-value-hierarchy-nodes:batchGet": {
      "get": {
        "summary": "Retrieves one or more Parameter Value Hierarchy Nodes.",
        "operationId": ".core_api.v1.parameters.BatchGetParameterValueHierarchyNodesResponse|BatchGetParameterValueHierarchyNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersBatchGetParameterValueHierarchyNodesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetParameterValueHierarchyNodesNOT_FOUND_0",
                  "description": "Returned when at least one Parameter Value Hierarchy Node cannot be found.",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of Parameter Value Hierarchy Node IDs to retrieve. Maximum 100. Required.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-permission-scopes": [
          "core:read",
          "core.parameter_value_hierarchy_nodes:read"
        ]
      }
    },
    "/v1/parameter-values": {
      "get": {
        "summary": "Retrieves a filtered and paginated list of Parameter Values.",
        "operationId": ".core_api.v1.parameters.ListParameterValuesResponse|ListParameterValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersListParameterValuesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of Parameter Values to be returned. Maximum 100. Required.",
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the requested page, which comes from a previous GET v1/parameter-values response. All other fields of the request must be kept the same as the request which resulted in the page token. If empty, the first page will be returned.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Parameter IDs to filter values on. Required.",
            "name": "parameter_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Only globally owned Parameter Values will be returned. Equivalent to, but should be used instead of, account_config_group_ids='root'. Cannot be used with `account_config_group_ids`, `parameter_value_hierarchy_node_ids` or `account_ids`.",
            "name": "global",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The only value that can return matches is `root`, which is exactly equivalent to filtering on `global` being `true`. Cannot be used with `account_ids`, `parameter_value_hierarchy_node_ids` or `global`.",
            "name": "account_config_group_ids",
            "in": "query",
            "required": false,
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 3
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "This field is replaced by `global`."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Only Parameter Values owned by the given Customer Accounts will be returned. Cannot be used with `account_config_group_ids`, `parameter_value_hierarchy_node_ids` or `global`.",
            "name": "account_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Filter by the Parameter Value's `is_cancelled` field.<br><br> - `BOTH` does not filter by `is_cancelled`.<br> - `ONLY_TRUE` returns only Parameter Values that have been cancelled.<br> - `ONLY_FALSE` returns only Parameter Values that have not been cancelled.",
            "name": "is_cancelled",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "BOTH",
                "ONLY_TRUE",
                "ONLY_FALSE"
              ],
              "default": "BOTH"
            }
          },
          {
            "description": "Only Parameter Values owned by the given Parameter Value Hierarchy Nodes will be returned. Cannot be used with `account_config_group_ids`, `global` or `account_ids`.",
            "name": "parameter_value_hierarchy_node_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "effective_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "Only values with an effective timestamp range which overlaps with the `effective_timestamp_range` will be returned. The `from` timestamps in both ranges are inclusive and the `to` timestamps in both ranges are exclusive. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "effective_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "Only values with an effective timestamp range which overlaps with the `effective_timestamp_range` will be returned. The `from` timestamps in both ranges are inclusive and the `to` timestamps in both ranges are exclusive. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          }
        ],
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-list-consistency-level": "PAGE_LEVEL",
        "x-permission-scopes": [
          "core:read",
          "core.parameter_values:read"
        ]
      },
      "post": {
        "summary": "Changes the value of a Parameter for a single owner at a particular point in time; this includes replacing an empty field (None) with a value. If the owner of the Parameter Value is an Account, then the [pre_parameter_change_hook](/reference/contracts/contracts_api_4xx/smart_contracts_api_reference4xx/hooks/#pre_parameter_change_hook) and [post_parameter_change_hook](/reference/contracts/contracts_api_4xx/smart_contracts_api_reference4xx/hooks/#post_parameter_change_hook) will run for an `INSTANCE` level `Parameter`, or an [ExpectedParameter](/reference/contracts/contracts_api_4xx/common_types_4xx/classes/#ExpectedParameter) which has opted in to the hooks.<br> These hooks are not run for Customer Accounts that are not yet OPEN, or if the Parameter Value is backdated.",
        "operationId": ".core_api.v1.parameters.ParameterValue|CreateParameterValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersParameterValue"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CreateParameterValueFAILED_PRECONDITION_0",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateParameterValueFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateParameterValueFAILED_PRECONDITION_2",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateParameterValueFAILED_PRECONDITION_3",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateParameterValueFAILED_PRECONDITION_4",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateParameterValueFAILED_PRECONDITION_5",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateParameterValueFAILED_PRECONDITION_6",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateParameterValueFAILED_PRECONDITION_7",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateParameterValueFAILED_PRECONDITION_8",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateParameterValueFAILED_PRECONDITION_9",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-permission-scopes": [
          "core:write",
          "core.parameter_values:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1parametersCreateParameterValueRequest"
        }
      }
    },
    "/v1/parameter-values/{parameter_value.id}": {
      "put": {
        "summary": "Updates a Parameter Value.",
        "operationId": ".core_api.v1.parameters.ParameterValue|UpdateParameterValue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersParameterValue"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UpdateParameterValueFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateParameterValueFAILED_PRECONDITION_2",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateParameterValueFAILED_PRECONDITION_3",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateParameterValueFAILED_PRECONDITION_4",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateParameterValueFAILED_PRECONDITION_5",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateParameterValueNOT_FOUND_0",
                  "description": "Returned when the Parameter Value being updated cannot be found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Unique UUID identifier for the Parameter Value. Read-only and set to a random UUID on creation.",
            "name": "parameter_value.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-permission-scopes": [
          "core:write",
          "core.parameter_values:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1parametersUpdateParameterValueRequest"
        }
      }
    },
    "/v1/parameter-values:batchCreate": {
      "post": {
        "summary": "Changes the values of several Parameters for a single owner at a particular point in time; this includes replacing any empty fields (None) with values. The batch request is atomic; if an individual request in the batch fails, then the whole request will fail with no side-effects. All values in the batch must have the same `effective_from_timestamp`. <br><br> If the owner of the Parameter Values is an Account, then the [pre_parameter_change_hook](/reference/contracts/contracts_api_4xx/smart_contracts_api_reference4xx/hooks/#pre_parameter_change_hook) and [post_parameter_change_hook](/reference/contracts/contracts_api_4xx/smart_contracts_api_reference4xx/hooks/#post_parameter_change_hook) will run for an `INSTANCE` level `Parameter`, or an [ExpectedParameter](/reference/contracts/contracts_api_4xx/common_types_4xx/classes/#ExpectedParameter) which has opted in to the hooks.<br> These hooks are not run for Customer Accounts that are not yet OPEN, or if the Parameter Value is backdated.",
        "operationId": ".core_api.v1.parameters.BatchCreateParameterValuesResponse|BatchCreateParameterValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersBatchCreateParameterValuesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/BatchCreateParameterValuesFAILED_PRECONDITION_0",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/BatchCreateParameterValuesFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/BatchCreateParameterValuesFAILED_PRECONDITION_2",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/BatchCreateParameterValuesFAILED_PRECONDITION_3",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/BatchCreateParameterValuesFAILED_PRECONDITION_4",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/BatchCreateParameterValuesFAILED_PRECONDITION_5",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/BatchCreateParameterValuesFAILED_PRECONDITION_6",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/BatchCreateParameterValuesFAILED_PRECONDITION_7",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/BatchCreateParameterValuesFAILED_PRECONDITION_8",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/BatchCreateParameterValuesFAILED_PRECONDITION_9",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-permission-scopes": [
          "core:write",
          "core.parameter_values:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1parametersBatchCreateParameterValuesRequest"
        }
      }
    },
    "/v1/parameter-values:batchGet": {
      "get": {
        "summary": "Retrieves one or more Parameter Values by their IDs.",
        "operationId": ".core_api.v1.parameters.BatchGetParameterValuesResponse|BatchGetParameterValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersBatchGetParameterValuesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetParameterValuesNOT_FOUND_0",
                  "description": "Returned when at least one Parameter Value cannot be found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "IDs of Parameter Values to retrieve. Maximum 100. Required.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-permission-scopes": [
          "core:read",
          "core.parameter_values:read"
        ]
      }
    },
    "/v1/parameter-values:viewEffective": {
      "get": {
        "summary": "Retrieves a derived view of Parameter Values effective for a Customer Account or Parameter Value Hierarchy Node. This view is determined considering both the inheritance and the changes made to Parameter Values over time. Can also be used to preview the effects of alternative Smart Contracts or Parameters.",
        "operationId": ".core_api.v1.parameters.ViewEffectiveParameterValuesResponse|ViewEffectiveParameterValues",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersViewEffectiveParameterValuesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of Effective Parameter Values to be returned. Maximum 1000. Required.",
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the requested page, which comes from a previous GET v1/parameter-values:viewEffective response. All other fields of the request must be kept the same as in the request that resulted in the page token. If empty, the first page will be returned.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Providing an `account_id` will return the Parameter Values effective for the Customer Account. These Parameter Values may be inherited from global or `parameter_value_hierarchy_node` owners.<br><br> - If `smart_contract_version_ids` and/or `parameter_ids` are specified on the request, Parameter Values will be returned based on these, regardless of whether they were defined in the Smart Contract Version(s) backing the Customer Account at the effective time period (`effective_timestamp`, `effective_timestamp_range`).<br><br> - If neither `smart_contract_version_ids` nor `parameter_ids` are specified, defaults to resolving the Parameter Values for all the Expected Parameters defined on the Smart Contracts' Version(s) backing the Customer Account at the effective time period.<br><br> Cannot be used in conjunction with `parameter_value_hierarchy_node_id`. Either an `account_id` or a `parameter_value_hierarchy_node_id` must be provided.",
            "name": "account_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Providing a `parameter_value_hierarchy_node_id` will return the Effective Parameter Values for the Hierarchy Node. These Parameter Values may be inherited from global or ancestral `parameter_value_hierarchy_node` owners. At least one of `smart_contract_version_ids`, `parameter_ids` must be specified on the request if `parameter_value_hierarchy_node_id` is provided.<br><br> Cannot be used in conjunction with `account_id`. Either an `account_id` or a `parameter_value_hierarchy_node_id` must be provided.",
            "name": "parameter_value_hierarchy_node_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Providing `smart_contract_version_ids` will only return the Effective Parameter Values for all the unique Expected Parameters defined in these Smart Contracts' Version(s). If used in conjunction with `parameter_ids`, a superset of Parameters will be returned. Optional.",
            "name": "smart_contract_version_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Providing `parameter_ids` will return the Effective Parameter Values for all of these Parameters. If used in conjunction with `smart_contract_version_id`, a superset of Parameters will be returned. Optional.",
            "name": "parameter_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "An effective time filter which returns Effective Parameter Values at this timestamp. If neither of the effective time filters (`effective_timestamp`, `effective_timestamp_range`) are specified, `effective_timestamp` defaults to the time the first page is processed. Cannot be used in conjunction with `effective_timestamp_range`. Must be formatted as an RFC3339 timestamp. Will be truncated to microsecond precision. Optional.",
            "name": "effective_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Providing a `snapshot_timestamp` will return all the Parameter Values as they were at that specific timestamp. Cannot be set in the future (greater than current time). If omitted, it defaults to the time the first page is processed. Using a `snapshot_timestamp` that is too recent (within a few seconds of the current time) may exclude concurrent updates that are still being processed. Must be formatted as an RFC3339 timestamp. Will be truncated to microsecond precision. Optional. <br><br> *NOTE: There are some important limitations to be aware of. For more information, see the _Retrieving effective Parameter Values_ sections for a [Parameter Value Hierarchy Node](/vault_v5/parameters#retrieving_effective_parameter_values) and a [Customer Account](/vault_v5/accounts_version_2#retrieving_effective_parameter_values_for_a_customer_account)*.",
            "name": "snapshot_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "effective_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "An effective time filter which returns Effective Parameter Values over a specified timestamp range. This range is from `effective_timestamp_range.from` up to and not including `effective_timestamp_range.to`. <br><br> - If `effective_timestamp_range.from` is omitted, it defaults to the earliest possible timestamp. <br> - If `effective_timestamp_range.to` is omitted, it defaults to the latest possible timestamp. <br><br> Cannot be used in conjunction with `effective_timestamp`. Both From and To timestamps must be formatted as an RFC3339 timestamp. Will be truncated to microsecond precision. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "effective_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "An effective time filter which returns Effective Parameter Values over a specified timestamp range. This range is from `effective_timestamp_range.from` up to and not including `effective_timestamp_range.to`. <br><br> - If `effective_timestamp_range.from` is omitted, it defaults to the earliest possible timestamp. <br> - If `effective_timestamp_range.to` is omitted, it defaults to the latest possible timestamp. <br><br> Cannot be used in conjunction with `effective_timestamp`. Both From and To timestamps must be formatted as an RFC3339 timestamp. Will be truncated to microsecond precision. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          }
        ],
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-release-info": {
          "changeType": "ADD_METHOD",
          "featureFlag": "IMP_1417_VIEW_EFFECTIVE_PARAMETER_VALUES_API"
        },
        "x-list-consistency-level": "SNAPSHOT",
        "x-permission-scopes": [
          "core:read",
          "core.parameter_values:read"
        ]
      }
    },
    "/v1/parameters": {
      "get": {
        "summary": "Retrieves a filtered and paginated list of Parameters.",
        "operationId": ".core_api.v1.parameters.ListParametersResponse|ListParameters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersListParametersResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of Parameters to be returned. Maximum 1000. Required.",
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the requested page, which comes from a previous GET v1/parameters response. If empty, the first page will be returned.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-list-consistency-level": "PAGE_LEVEL",
        "x-permission-scopes": [
          "core:read",
          "core.parameters:read"
        ]
      },
      "post": {
        "summary": "Creates a Parameter.",
        "operationId": ".core_api.v1.parameters.Parameter|CreateParameter",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersParameter"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "409": {
            "description": "The error response for 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateParameterALREADY_EXISTS_0",
                  "description": "Returned when a Parameter with the same ID already exists",
                  "title": "ALREADY_EXISTS"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-permission-scopes": [
          "core:write",
          "core.parameters:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1parametersCreateParameterRequest"
        }
      }
    },
    "/v1/parameters:batchGet": {
      "get": {
        "summary": "Retrieves one or more Parameters by their IDs.",
        "operationId": ".core_api.v1.parameters.BatchGetParametersResponse|BatchGetParameters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1parametersBatchGetParametersResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIParametersINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetParametersNOT_FOUND_0",
                  "description": "Returned when at least one Parameter cannot be found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "IDs of Parameters to retrieve. Maximum 100. Required.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIParameters"
        ],
        "x-section": "Parameters",
        "x-permission-scopes": [
          "core:read",
          "core.parameters:read"
        ]
      }
    },
    "/v1/payment-device-links": {
      "get": {
        "summary": "Lists the payment device links that match the provided criteria. Must provide at least one token, payment device ID or account ID.",
        "operationId": ".core_api.v1.payment_devices.ListPaymentDeviceLinksResponse|ListPaymentDeviceLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1payment_devicesListPaymentDeviceLinksResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "List of payment device link tokens.",
            "name": "tokens",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "List of payment device IDs.",
            "name": "payment_device_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "List of account IDs.",
            "name": "account_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Maximum start timestamp of listed links. Optional. Defaults to current time. Must be formatted as an RFC3339 timestamp.\n",
            "name": "effective_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Indicates whether to include inactive payment device links in the response.",
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "CoreAPIPaymentDevices"
        ],
        "x-section": "Payment devices",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.payment_device_links:read"
        ]
      },
      "post": {
        "summary": "Creates a payment-device-link linking a payment device to the account. The payment device that is being linked to must have a status of PAYMENT_DEVICE_STATUS_ACTIVE or PAYMENT_DEVICE_STATUS_PENDING for the request to succeed.",
        "operationId": ".core_api.v1.payment_devices.PaymentDeviceLink|CreatePaymentDeviceLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1payment_devicesPaymentDeviceLink"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIPaymentDevices"
        ],
        "x-section": "Payment devices",
        "x-permission-scopes": [
          "core:write",
          "core.payment_device_links:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1payment_devicesCreatePaymentDeviceLinkRequest"
        }
      }
    },
    "/v1/payment-device-links/{payment_device_link.id}": {
      "put": {
        "summary": "Updates an existing payment device link.",
        "operationId": ".core_api.v1.payment_devices.PaymentDeviceLink|UpdatePaymentDeviceLink",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1payment_devicesPaymentDeviceLink"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A caller-injected or Vault auto-generated unique ID for the payment device link. When auto-generated, this is a UUID in the canonical 8-4-4-4-12 form.",
            "name": "payment_device_link.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPaymentDevices"
        ],
        "x-section": "Payment devices",
        "x-permission-scopes": [
          "core:write",
          "core.payment_device_links:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1payment_devicesUpdatePaymentDeviceLinkRequest"
        }
      }
    },
    "/v1/payment-device-links:batchGet": {
      "get": {
        "summary": "Returns the payment device links for the provided IDs.",
        "operationId": ".core_api.v1.payment_devices.BatchGetPaymentDeviceLinksResponse|BatchGetPaymentDeviceLinks",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1payment_devicesBatchGetPaymentDeviceLinksResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "List of IDs of payment device links to fetch. Required; must be non-empty. The 6.0 release will enforce a maximum number of IDs of 50.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPaymentDevices"
        ],
        "x-section": "Payment devices",
        "x-permission-scopes": [
          "core:read",
          "core.payment_device_links:read"
        ]
      }
    },
    "/v1/payment-devices": {
      "post": {
        "summary": "Creates a new payment device.",
        "operationId": ".core_api.v1.payment_devices.PaymentDevice|CreatePaymentDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1payment_devicesPaymentDevice"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIPaymentDevices"
        ],
        "x-section": "Payment devices",
        "x-permission-scopes": [
          "core:write",
          "core.payment_devices:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1payment_devicesCreatePaymentDeviceRequest"
        }
      }
    },
    "/v1/payment-devices/{payment_device.id}": {
      "put": {
        "summary": "Updates an existing payment device.",
        "operationId": ".core_api.v1.payment_devices.PaymentDevice|UpdatePaymentDevice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1payment_devicesPaymentDevice"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Caller injected or Vault auto-generated unique ID for payment device. Optional. When auto-generated, this is a UUID in the canonical 8-4-4-4-12 form.",
            "name": "payment_device.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPaymentDevices"
        ],
        "x-section": "Payment devices",
        "x-permission-scopes": [
          "core:write",
          "core.payment_devices:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1payment_devicesUpdatePaymentDeviceRequest"
        }
      }
    },
    "/v1/payment-devices:batchGet": {
      "get": {
        "summary": "Returns the payment devices for the provided IDs.",
        "operationId": ".core_api.v1.payment_devices.BatchGetPaymentDevicesResponse|BatchGetPaymentDevices",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1payment_devicesBatchGetPaymentDevicesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "List of IDs of payment devices to fetch. Required; must be non-empty. The 6.0 release will enforce a maximum number of IDs of 50.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPaymentDevices"
        ],
        "x-section": "Payment devices",
        "x-permission-scopes": [
          "core:read",
          "core.payment_devices:read"
        ]
      }
    },
    "/v1/account-plan-assocs": {
      "get": {
        "summary": "Retrieves Account Plan Associations using the provided filters.",
        "operationId": ".core_api.v1.plans.ListAccountPlanAssocsResponse|ListAccountPlanAssocs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1plansListAccountPlanAssocsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The IDs of accounts that Account Plan Associations are to be listed for. Optional.",
            "name": "account_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The IDs of plans that Account Plan Associations are to be listed for. Optional.",
            "name": "plan_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The number of results to be retrieved. Required.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "start_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the start timestamp must belong to. This range is from start_timestamp_range.from up to and not including start_timestamp_range.to. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "start_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the start timestamp must belong to. This range is from start_timestamp_range.from up to and not including start_timestamp_range.to. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "end_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the end timestamp must belong to. This range is from end_timestamp_range.from up to and not including end_timestamp_range.to. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "end_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the end timestamp must belong to. This range is from end_timestamp_range.from up to and not including end_timestamp_range.to. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          }
        ],
        "tags": [
          "CoreAPIPlans"
        ],
        "x-section": "Plans",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.account_plan_assocs:read"
        ]
      }
    },
    "/v1/account-plan-assocs:batchGet": {
      "get": {
        "summary": "Retrieves one or more Account Plan Associations using the Account Plan Association ID.",
        "operationId": ".core_api.v1.plans.BatchGetAccountPlanAssocsResponse|BatchGetAccountPlanAssocs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1plansBatchGetAccountPlanAssocsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of the account Plan Associations that are to be retrieved. Required; must be non-empty. The 6.0 release will enforce a maximum number of IDs of 50.\n\nRequired.\nMin count: 1.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPlans"
        ],
        "x-section": "Plans",
        "x-permission-scopes": [
          "core:read",
          "core.account_plan_assocs:read"
        ]
      }
    },
    "/v1/plan-migrations": {
      "get": {
        "summary": "Lists all Plan Migrations with optional filters.",
        "operationId": ".core_api.v1.plans.ListPlanMigrationsResponse|ListPlanMigrations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1plansListPlanMigrationsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Statuses of Plan Migrations to filter on. Optional.",
            "name": "statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "PLAN_MIGRATION_STATUS_COMPLETED": "Indicates the Plan Migration completed.",
              "PLAN_MIGRATION_STATUS_PENDING_EXECUTION": "The Plan Migration is in progress.",
              "PLAN_MIGRATION_STATUS_UNKNOWN": "Default value."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PLAN_MIGRATION_STATUS_UNKNOWN",
                  "PLAN_MIGRATION_STATUS_PENDING_EXECUTION",
                  "PLAN_MIGRATION_STATUS_COMPLETED"
                ]
              }
            }
          },
          {
            "description": "Number of results to be retrieved. Must be non-zero.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page from which to retrieve the results. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPlans"
        ],
        "x-section": "Plans",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 3
          },
          "changeType": "ADD_METHOD"
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.plan_migrations:read"
        ]
      },
      "post": {
        "summary": "Creates a Plan Migration.",
        "operationId": ".core_api.v1.plans.PlanMigration|CreatePlanMigration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1plansPlanMigration"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIPlans"
        ],
        "x-section": "Plans",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 3
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:write",
          "core.plan_migrations:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1plansCreatePlanMigrationRequest"
        }
      }
    },
    "/v1/plan-migrations:batchGet": {
      "get": {
        "summary": "Retrieves one or more Plan Migrations using the Plan Migration ID.",
        "operationId": ".core_api.v1.plans.BatchGetPlanMigrationsResponse|BatchGetPlanMigrations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1plansBatchGetPlanMigrationsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "IDs of the Plan Migrations to get. Mandatory. The 6.0 release will enforce a maximum number of IDs of 50.\n\nRequired.\nMin count: 1.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPlans"
        ],
        "x-section": "Plans",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 3
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:read",
          "core.plan_migrations:read"
        ]
      }
    },
    "/v1/plan-schedules": {
      "get": {
        "summary": "Retrieves Plan Schedules using the provided filters.",
        "operationId": ".core_api.v1.plans.ListPlanSchedulesResponse|ListPlanSchedules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1plansListPlanSchedulesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Plan ID that Plan Schedules are to be listed for. Required; must be non-empty.",
            "name": "plan_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The number of results to be retrieved. Required.\n\nRequired.\nMin value: 1.\nMax value: 20.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A boolean controlling the Plan Schedules that are returned. When set to `false`, only associated Plan Schedules, that is, Plan Schedules with `is_associated=true`, are returned. When set to `true`, associated and disassociated Plan Schedules are returned. An optional field. False by default.",
            "name": "include_disassociated",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "CoreAPIPlans"
        ],
        "x-section": "Plans",
        "x-release-info": {
          "releaseVersion": {
            "major": 2,
            "minor": 1
          },
          "changeType": "ADD_METHOD"
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.plan_schedules:read"
        ]
      }
    },
    "/v1/plan-updates": {
      "get": {
        "summary": "Retrieves Plan updates using the provided filters.",
        "operationId": ".core_api.v1.plans.ListPlanUpdatesResponse|ListPlanUpdates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1plansListPlanUpdatesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The IDs of Plans that Plan Updates are to be listed for. At least one of plan_ids and job_ids is required; must be non-empty.",
            "name": "plan_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "IDs of the jobs that Plan Updates are to be listed for. At least one of plan_ids and job_ids is required.",
            "name": "job_ids",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 3
              },
              "changeType": "ADD_FIELD"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The statuses of Plan Updates to filter on. Optional.",
            "name": "statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "PLAN_UPDATE_STATUS_COMPLETED": "The Plan Update was successfully executed.",
              "PLAN_UPDATE_STATUS_ERRORED": "The Plan Update errored.",
              "PLAN_UPDATE_STATUS_PENDING_EXECUTION": "The Plan Update has not been picked up from the queue yet, or is in progress.",
              "PLAN_UPDATE_STATUS_REJECTED": "The Plan Update failed validation and has been rejected.",
              "PLAN_UPDATE_STATUS_UNKNOWN": "Default value."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "PLAN_UPDATE_STATUS_UNKNOWN",
                  "PLAN_UPDATE_STATUS_PENDING_EXECUTION",
                  "PLAN_UPDATE_STATUS_COMPLETED",
                  "PLAN_UPDATE_STATUS_REJECTED",
                  "PLAN_UPDATE_STATUS_ERRORED"
                ]
              }
            }
          },
          {
            "description": "The number of results to be retrieved. Required.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPlans"
        ],
        "x-section": "Plans",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.plan_updates:read"
        ]
      },
      "post": {
        "summary": "Creates a Plan Update.",
        "operationId": ".core_api.v1.plans.PlanUpdate|CreatePlanUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1plansPlanUpdate"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIPlans"
        ],
        "x-section": "Plans",
        "x-permission-scopes": [
          "core:write",
          "core.plan_updates:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1plansCreatePlanUpdateRequest"
        }
      }
    },
    "/v1/plan-updates:batchGet": {
      "get": {
        "summary": "Retrieves one or more Plan Updates using the Plan Update ID.",
        "operationId": ".core_api.v1.plans.BatchGetPlanUpdatesResponse|BatchGetPlanUpdates",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1plansBatchGetPlanUpdatesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of the Plan Updates that are to be retrieved. Required; must be non-empty. The 6.0 release will enforce a maximum number of IDs of 50.\n\nRequired.\nMin count: 1.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPlans"
        ],
        "x-section": "Plans",
        "x-permission-scopes": [
          "core:read",
          "core.plan_updates:read"
        ]
      }
    },
    "/v1/plans": {
      "post": {
        "summary": "Creates a Plan.",
        "operationId": ".core_api.v1.plans.Plan|CreatePlan",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1plansPlan"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIPlans"
        ],
        "x-section": "Plans",
        "x-permission-scopes": [
          "core:write",
          "core.plans:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1plansCreatePlanRequest"
        }
      }
    },
    "/v1/plans:batchGet": {
      "get": {
        "summary": "Retrieves one or more Plans using the Plan ID.",
        "operationId": ".core_api.v1.plans.BatchGetPlansResponse|BatchGetPlans",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1plansBatchGetPlansResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of the Plans that are to be retrieved. Required; must be non-empty. The 6.0 release will enforce a maximum number of IDs of 50.\n\nRequired.\nMin count: 1.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPlans"
        ],
        "x-section": "Plans",
        "x-permission-scopes": [
          "core:read",
          "core.plans:read"
        ]
      }
    },
    "/v1/policies": {
      "get": {
        "summary": "Lists and filters Policy objects.",
        "operationId": ".core_api.v1.policy_management.ListPoliciesResponse|ListPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1policy_managementListPoliciesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIPolicyManagementINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The policy schema ID or IDs to filter results by. Optional.",
            "name": "policy_schema_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Fields to include in the response that are omitted by default. Optional.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "INCLUDE_FIELD_REGO_SOURCE": "Includes the rego_source field."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_REGO_SOURCE"
                ]
              }
            }
          },
          {
            "description": "The number of results to be listed. Required; must be non-zero. Maximum value of 100.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPolicyManagement"
        ],
        "x-section": "Policy Management",
        "x-permission-scopes": [
          "core:read",
          "core.policies:read"
        ]
      },
      "post": {
        "summary": "Creates a new Policy.",
        "operationId": ".core_api.v1.policy_management.Policy|CreatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1policy_managementPolicy"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIPolicyManagementINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIPolicyManagement"
        ],
        "x-section": "Policy Management",
        "x-permission-scopes": [
          "core:write",
          "core.policies:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1policy_managementCreatePolicyRequest"
        }
      }
    },
    "/v1/policies/{id}": {
      "get": {
        "summary": "Retrieves a Policy based on a Policy ID.",
        "operationId": ".core_api.v1.policy_management.Policy|GetPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1policy_managementPolicy"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIPolicyManagementINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPolicyNOT_FOUND_0",
                  "description": "Returned on the resource being retrieved not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Policy that is to be retrieved. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPolicyManagement"
        ],
        "x-section": "Policy Management",
        "x-permission-scopes": [
          "core:read",
          "core.policies:read"
        ]
      }
    },
    "/v1/policies/{policy.id}": {
      "put": {
        "summary": "Updates an existing Policy.",
        "operationId": ".core_api.v1.policy_management.Policy|UpdatePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1policy_managementPolicy"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIPolicyManagementINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdatePolicyNOT_FOUND_0",
                  "description": "Returned on the resource being mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique identifier for the Policy. Required.",
            "name": "policy.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPolicyManagement"
        ],
        "x-section": "Policy Management",
        "x-permission-scopes": [
          "core:write",
          "core.policies:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1policy_managementUpdatePolicyRequest"
        }
      }
    },
    "/v1/policies:batchGet": {
      "get": {
        "summary": "Retrieves one or more Policies based on a list of IDs.",
        "operationId": ".core_api.v1.policy_management.BatchGetPoliciesResponse|BatchGetPolicies",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1policy_managementBatchGetPoliciesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIPolicyManagementINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetPoliciesNOT_FOUND_0",
                  "description": "Returned on the resource being retrieved not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The IDs of the Policies to be retrieved.\n\nRequired.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Fields to include in the response that are omitted by default. Optional.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "INCLUDE_FIELD_REGO_SOURCE": "Includes the rego_source field."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_REGO_SOURCE"
                ]
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPolicyManagement"
        ],
        "x-section": "Policy Management",
        "x-permission-scopes": [
          "core:read",
          "core.policies:read"
        ]
      }
    },
    "/v1/post-posting-failures": {
      "get": {
        "summary": "Lists and filters Post-Posting Failures that are currently stored.",
        "operationId": ".core_api.v1.post_posting_republisher.ListPostPostingFailuresResponse|ListPostPostingFailures",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1post_posting_republisherListPostPostingFailuresResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIPostPostingRepublisherINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Filters Post-Posting Failures by the account IDs of their associated failures. Optional.",
            "name": "account_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Filters Post-Posting Failures by the posting instruction batch IDs of their associated failures. Optional.",
            "name": "posting_instruction_batch_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The number of Post-Posting Failures to be retrieved.\n\nRequired.\nMin value: 1.\nMax value: 50.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, this returns the first page of results.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters Post Posting Failures by the provided failure status. Optional.",
            "name": "post_posting_failure_statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "POST_POSTING_FAILURE_STATUS_BUFFERED": "Indicates this is a Post-Posting execution that has never been attempted because it was blocked by a previous failure.",
              "POST_POSTING_FAILURE_STATUS_FAILURE": "Indicates the Post-Posting Failure was created after a `post_posting_hook` execution was attempted and failed.",
              "POST_POSTING_FAILURE_STATUS_PUBLISHED": "Indicates this is a republished Post-Posting event and is currently being processed asynchronously.",
              "POST_POSTING_FAILURE_STATUS_UNKNOWN": "Default value."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "POST_POSTING_FAILURE_STATUS_UNKNOWN",
                  "POST_POSTING_FAILURE_STATUS_FAILURE",
                  "POST_POSTING_FAILURE_STATUS_BUFFERED",
                  "POST_POSTING_FAILURE_STATUS_PUBLISHED"
                ]
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPostPostingRepublisher"
        ],
        "x-section": "Post Posting Republisher",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.post_posting_failures:read"
        ]
      }
    },
    "/v1/post-posting-failures/{id}": {
      "delete": {
        "summary": "DeletePostPostingFailure deletes the Post-Posting Failure. It will reject requests to delete a Post-Posting Failure that is not the earliest for an account.",
        "operationId": ".core_api.v1.post_posting_republisher.DeletePostPostingFailureResponse|DeletePostPostingFailure",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1post_posting_republisherDeletePostPostingFailureResponse"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/DeletePostPostingFailureFAILED_PRECONDITION_0",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIPostPostingRepublisherINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Post-Posting Failure to delete. If the ID is not the earliest for the associated account, the request will be rejected. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPostPostingRepublisher"
        ],
        "x-section": "Post Posting Republisher",
        "x-permission-scopes": [
          "core:write",
          "core.post_posting_failures:write"
        ]
      }
    },
    "/v1/post-posting-failures:batchGet": {
      "get": {
        "summary": "Gets one or more Post-Posting Failures based on their ID.",
        "operationId": ".core_api.v1.post_posting_republisher.BatchGetPostPostingFailuresResponse|BatchGetPostPostingFailures",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1post_posting_republisherBatchGetPostPostingFailuresResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIPostPostingRepublisherINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetPostPostingFailuresNOT_FOUND_0",
                  "description": "Returned when one or more of the resource IDs provided do not exist",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of IDs of Post-Posting Failures to be retrieved. Required.\n\nRequired.\nMin count: 1.\nMax count: 50.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPostPostingRepublisher"
        ],
        "x-section": "Post Posting Republisher",
        "x-permission-scopes": [
          "core:read",
          "core.post_posting_failures:read"
        ]
      }
    },
    "/v1/post-posting-failures:republish": {
      "post": {
        "summary": "RepublishPostPostingFailure republishes the earliest Post-Posting Failure for an account. It can also republish all blocked failures for the account at the same time.",
        "operationId": ".core_api.v1.post_posting_republisher.PostPostingFailure|RepublishPostPostingFailure",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1post_posting_republisherPostPostingFailure"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIPostPostingRepublisherINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIPostPostingRepublisher"
        ],
        "x-section": "Post Posting Republisher",
        "x-permission-scopes": [
          "core:write",
          "core.post_posting_failures:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1post_posting_republisherRepublishPostPostingFailureRequest"
        }
      }
    },
    "/v1/create-posting-instruction-batch:validate": {
      "post": {
        "summary": "Validates that a CreatePostingInstructionBatchRequest message is well-formed.",
        "operationId": ".core_api.v1.posting_instruction_batches.ValidateCreatePostingInstructionBatchRequestResponse|ValidateCreatePostingInstructionBatchRequest",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1posting_instruction_batchesValidateCreatePostingInstructionBatchRequestResponse"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIPostingInstructionBatch"
        ],
        "x-section": "Posting instruction batches",
        "x-permission-scopes": [
          "core:execute",
          "core.create_posting_instruction_batch:execute"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1posting_instruction_batchesValidateCreatePostingInstructionBatchRequestRequest"
        }
      }
    },
    "/v1/posting-instruction-batches": {
      "get": {
        "summary": "Lists and filters posting instruction batches. Performance of this endpoint is optimal by filtering customer `account_ids` and timerange on `value_timestamp`. Increasing the number of values or the number of request parameters will increase the response time. We recommend querying only customer accounts and not internal accounts through this endpoint, as internal accounts typically have a very large number of postings. \\n [IMPORTANT]\\n =====\\n The following characteristics apply to the List endpoint:\\n \\n * When using this endpoint, there will be a short interval between a posting instruction\\n batch being created, and that creation being reflected\\n * If there are multiple posting instructions in a batch with different value timestamps,\\n only the _earliest_ value timestamp will be considered in the filter\\n * While we guarantee atomicity in Posting Instruction Batches, we do not guarantee the\\n order in which the Posting Instructions will be arranged in the response.\\n =====\\n \\n",
        "operationId": ".core_api.v1.posting_instruction_batches.ListPostingInstructionBatchesResponse|ListPostingInstructionBatches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1posting_instruction_batchesListPostingInstructionBatchesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Filters posting instruction batches by the `account_ids` of their associated posting instructions. Optional.",
            "name": "account_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Filters posting instruction batches by their `client_batch_ids`. Optional.",
            "name": "client_batch_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "payment_device_tokens",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Filters posting instruction batches by the `client_transaction_ids` of their associated posting instructions. Optional.<br><br>If a matching `client_transaction_id` is used in multiple `client_ids`, this may return more than one client transaction.",
            "name": "client_transaction_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The maximum number of results to retrieve. Required; non-zero.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page to retrieve results from. If left empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The direction to order results in, by `value_timestamp`. Optional.",
            "name": "order_by_direction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_BY_DESC",
                "ORDER_BY_ASC"
              ],
              "default": "ORDER_BY_DESC"
            }
          },
          {
            "description": "Filters posting instruction batches by `value_timestamp`. The earliest posting instruction batch returned in the list will have been created after or at `start_time`. Optional. Must be formatted as an RFC3339 timestamp.",
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Filters posting instruction batches by `value_timestamp`. The latest posting instruction batch returned in the list will have been created before `end_time`. Optional. Must be formatted as an RFC3339 timestamp.",
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "tags": [
          "CoreAPIPostingInstructionBatch"
        ],
        "x-section": "Posting instruction batches",
        "x-list-consistency-level": "SNAPSHOT",
        "x-permission-scopes": [
          "core:read",
          "core.posting_instruction_batches:read"
        ]
      },
      "post": {
        "summary": "Creates and returns a PostingInstructionBatch after submitting a CreatePostingInstructionBatchRequest to the Postings API. Useful for high priority Postings. \\n [NOTE]\\n =====\\n There is also a Kafka-based asynchronous API, used for low-priority Postings.\\n For more information, see the link:{baseURL}/api/postings_api[Postings API documentation].\\n =====\\n \\n",
        "operationId": ".posting_api.v1.CreatePostingInstructionBatchResponse|CreatePostingInstructionBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/posting_apiv1CreatePostingInstructionBatchResponse"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIPostingInstructionBatch"
        ],
        "x-section": "Posting instruction batches",
        "x-release-info": {
          "releaseVersion": {
            "major": 5,
            "minor": 4
          },
          "changeType": "ADD_METHOD",
          "featureFlag": "IMP_13_V1_SYNCHRONOUS_POSTINGS_API"
        },
        "x-permission-scopes": [
          "core:write",
          "core.posting_instruction_batches:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/posting_apiv1CreatePostingInstructionBatchRequest"
        }
      }
    },
    "/v1/posting-instruction-batches/async-operations:batchGet": {
      "get": {
        "summary": "Retrieves multiple AsyncOperations. The IDs provided must belong to AsyncOperations returned by /v1/posting-instruction-batches:asyncCreate.",
        "operationId": ".common.async_operations.BatchGetAsyncOperationsResponse|BatchGetAsyncOperations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonasync_operationsBatchGetAsyncOperationsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The IDs of the AsyncOperations to retrieve.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPostingInstructionBatch"
        ],
        "x-section": "Posting instruction batches",
        "x-release-info": {
          "noticeVersion": {
            "major": 5,
            "minor": 4
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method will serve no purpose once POST /v1/posting-instruction-batches:asyncCreate is removed."
        },
        "x-permission-scopes": [
          "core:read",
          "core.posting_instruction_batches:read"
        ]
      }
    },
    "/v1/posting-instruction-batches/{id}": {
      "get": {
        "summary": "Retrieves a posting instruction batch by ID.",
        "operationId": ".posting_api.v1.PostingInstructionBatch|GetPostingInstructionBatch",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatch"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the posting instruction batch to retrieve.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPostingInstructionBatch"
        ],
        "x-section": "Posting instruction batches",
        "x-permission-scopes": [
          "core:read",
          "core.posting_instruction_batches:read"
        ]
      }
    },
    "/v1/posting-instruction-batches:asyncCreate": {
      "post": {
        "summary": "Creates and returns an AsyncOperation to submit a PostingInstructionBatchRequest to the Postings API. The Postings API is idempotent to duplicate PostingInstructionBatchRequest, and will respond idempotently to PostingInstructionBatchRequest messages with the same <client_id-request_id>. The CreatePostingInstructionBatchAsync endpoint is not idempotent and will create multiple AsyncOperation resources on duplicate calls. \\n [CAUTION]\\n =====\\n * Create (async) should only be used for testing purposes - it is not supported in a\\n production environment.\\n * As of Vault Core 5.0 onwards, this does not send any outcome to the `response_topic`.\\n The status of the posting instruction batch request can be checked by calling\\n BatchGetAsyncOperations on the AsyncOperation ID.\\n =====\\n \\n",
        "operationId": ".common.async_operations.AsyncOperation|CreatePostingInstructionBatchAsync",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/commonasync_operationsAsyncOperation"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIPostingInstructionBatch"
        ],
        "x-section": "Posting instruction batches",
        "x-release-info": {
          "noticeVersion": {
            "major": 5,
            "minor": 4
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "Use POST /v1/posting-instruction-batches instead."
        },
        "x-permission-scopes": [
          "core:write",
          "core.posting_instruction_batches:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/core_apiv1posting_instruction_batchesCreatePostingInstructionBatchRequest"
        }
      }
    },
    "/v1/posting-instruction-batches:batchGet": {
      "get": {
        "summary": "Retrieves one or more posting instruction batches by ID.",
        "operationId": ".core_api.v1.posting_instruction_batches.BatchGetPostingInstructionBatchesResponse|BatchGetPostingInstructionBatches",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1posting_instruction_batchesBatchGetPostingInstructionBatchesResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of IDs of posting instruction batches to retrieve. Required; must be non-empty.\nThis field must contain a valid UUID in the canonical 8-4-4-4-12 form.\nRequired.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPostingInstructionBatch"
        ],
        "x-section": "Posting instruction batches",
        "x-permission-scopes": [
          "core:read",
          "core.posting_instruction_batches:read"
        ]
      }
    },
    "/v1/postings-api-clients": {
      "get": {
        "summary": "Gets a list of all `PostingsAPIClient`s.",
        "operationId": ".core_api.v1.postings_api_clients.ListPostingsAPIClientsResponse|ListPostingsAPIClients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1postings_api_clientsListPostingsAPIClientsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of results to retrieve. Required; must be non-zero.",
            "name": "page_size",
            "in": "query",
            "required": false,
            "x-example-override": "2",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPostingsAPIClient"
        ],
        "x-section": "Postings API clients",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.postings_api_clients:read"
        ]
      },
      "post": {
        "summary": "Creates and returns a specified `PostingsAPIClient`. The response topic will be created if it does not exist and must contain the prefix 'integration.'. For compatibility, existing topics that are not prefixed with 'integration.' are allowed. NOTE: You cannot update the response topic after the client has been created. You can disable Vault-side Kafka topic management by setting the `kafka.topics.disable_vault_topic_management` option in the `values.yaml` file to `true`. When topic management is disabled, the response topics you have provided will not be created in the Kafka cluster, only the required `integration.*` prefix of the topic names will be validated. You must ensure that the topics exist in the Kafka cluster before using the PostingsAPIClient.",
        "operationId": ".core_api.v1.postings_api_clients.PostingsAPIClient|CreatePostingsAPIClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1postings_api_clientsPostingsAPIClient"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIPostingsAPIClient"
        ],
        "x-section": "Postings API clients",
        "x-permission-scopes": [
          "core:write",
          "core.postings_api_clients:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1postings_api_clientsCreatePostingsAPIClientRequest"
        }
      }
    },
    "/v1/postings-api-clients/{id}": {
      "get": {
        "summary": "Gets a `PostingsAPIClient` for the given `id`.",
        "operationId": ".core_api.v1.postings_api_clients.PostingsAPIClient|GetPostingsAPIClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1postings_api_clientsPostingsAPIClient"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A unique ID that identifies a `PostingsAPIClient` to the Postings API. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "x-example-override": "ExamplePaymentProcessorClientID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPostingsAPIClient"
        ],
        "x-section": "Postings API clients",
        "x-permission-scopes": [
          "core:read",
          "core.postings_api_clients:read"
        ]
      }
    },
    "/v1/postings-api-clients/{postings_api_client.id}": {
      "put": {
        "summary": "Updates an existing `PostingsAPIClient` with a new `response_topic_low_priority`, which must differ from `response_topic`. The response topic will be created if it does not exist and must contain the prefix 'integration.'. For compatibility, existing topics that are not prefixed with 'integration.' are allowed. It may take up to five minutes for responses to be streamed on the updated response topics. You can disable Vault-side Kafka topic management by setting the `kafka.topics.disable_vault_topic_management` option in the `values.yaml` file to `true`. When topic management is disabled, the `response_topic_low_priority` topic you have provided will not be created in the Kafka cluster, only the required `integrations.*` prefix of the topic name will be validated. You must ensure that the topic exists in the Kafka cluster before using the PostingsAPIClient.",
        "operationId": ".core_api.v1.postings_api_clients.PostingsAPIClient|UpdatePostingsAPIClient",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1postings_api_clientsPostingsAPIClient"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A unique ID that identifies a `PostingsAPIClient` to the Postings API.",
            "name": "postings_api_client.id",
            "in": "path",
            "required": true,
            "x-example-override": "ExamplePaymentProcessorClientID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIPostingsAPIClient"
        ],
        "x-section": "Postings API clients",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 9
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:write",
          "core.postings_api_clients:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1postings_api_clientsUpdatePostingsAPIClientRequest"
        }
      }
    },
    "/v1/postings-api-clients:batchGet": {
      "get": {
        "summary": "Gets a map of `id` to `PostingsAPIClient` for a given set of `id`s.",
        "operationId": ".core_api.v1.postings_api_clients.BatchGetPostingsAPIClientsResponse|BatchGetPostingsAPIClients",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1postings_api_clientsBatchGetPostingsAPIClientsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of unique IDs that identify `PostingsAPIClient`s to the Postings API. Required.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIPostingsAPIClient"
        ],
        "x-section": "Postings API clients",
        "x-permission-scopes": [
          "core:read",
          "core.postings_api_clients:read"
        ]
      }
    },
    "/v1/processing-groups": {
      "get": {
        "summary": "ListProcessingGroups retrieves all Processing Groups.",
        "operationId": ".core_api.v1.processing_groups.ListProcessingGroupsResponse|ListProcessingGroups",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1processing_groupsListProcessingGroupsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIProcessingGroupsINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the system state",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of Processing Groups to be listed per page.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.\n",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIProcessingGroups"
        ],
        "x-section": "ProcessingGroups",
        "x-release-info": {
          "releaseVersion": {
            "major": 5
          },
          "changeType": "ADD_FIELD"
        },
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.processing_groups:read"
        ]
      },
      "post": {
        "summary": "CreateProcessingGroup creates a single processing group.",
        "operationId": ".core_api.v1.processing_groups.ProcessingGroup|CreateProcessingGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1processing_groupsProcessingGroup"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIProcessingGroupsINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the system state",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "409": {
            "description": "The error response for 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProcessingGroupALREADY_EXISTS_0",
                  "description": "Returned on a non-idempotent attempt to recreate a resource",
                  "title": "ALREADY_EXISTS"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIProcessingGroups"
        ],
        "x-section": "ProcessingGroups",
        "x-release-info": {
          "releaseVersion": {
            "major": 5,
            "minor": 3
          },
          "changeType": "ADD_FIELD"
        },
        "x-permission-scopes": [
          "core:write",
          "core.processing_groups:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1processing_groupsCreateProcessingGroupRequest"
        }
      }
    },
    "/v1/processing-groups/{id}": {
      "get": {
        "summary": "GetProcessingGroup retrieves a single Processing Group by ID.",
        "operationId": ".core_api.v1.processing_groups.ProcessingGroup|GetProcessingGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1processing_groupsProcessingGroup"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIProcessingGroupsINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the system state",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIProcessingGroupsNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Processing Group to be retrieved. Required.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIProcessingGroups"
        ],
        "x-section": "ProcessingGroups",
        "x-release-info": {
          "releaseVersion": {
            "major": 5
          },
          "changeType": "ADD_FIELD"
        },
        "x-permission-scopes": [
          "core:read",
          "core.processing_groups:read"
        ]
      }
    },
    "/v1/processing-groups/{processing_group.id}": {
      "put": {
        "summary": "UpdateProcessingGroup updates a single Processing Group.",
        "operationId": ".core_api.v1.processing_groups.ProcessingGroup|UpdateProcessingGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1processing_groupsProcessingGroup"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UpdateProcessingGroupFAILED_PRECONDITION_0",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateProcessingGroupFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIProcessingGroupsINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIProcessingGroupsNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A unique ID for the Processing Group. Optional for create requests. The '/' character is not supported in the ID.",
            "name": "processing_group.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIProcessingGroups"
        ],
        "x-section": "ProcessingGroups",
        "x-release-info": {
          "releaseVersion": {
            "major": 5
          },
          "changeType": "ADD_FIELD"
        },
        "x-permission-scopes": [
          "core:write",
          "core.processing_groups:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1processing_groupsUpdateProcessingGroupRequest"
        }
      }
    },
    "/v1/product-versions": {
      "get": {
        "summary": "Lists the versions of a product with pagination.",
        "operationId": ".core_api.v1.products.ListProductVersionsResponse|ListProductVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1productsListProductVersionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The product ID that product versions are to be listed for. Required.",
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates which fields should be included in the product versions. Optional.",
            "name": "view",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "PRODUCT_VERSION_VIEW_BASIC": "Default. Includes basic information about the product version.",
              "PRODUCT_VERSION_VIEW_INCLUDE_CODE": "Includes contract parameters and source code associated with the product.",
              "PRODUCT_VERSION_VIEW_INCLUDE_PARAMETERS": "Includes basic product version information and contract parameters associated with the product.",
              "PRODUCT_VERSION_VIEW_INCLUDE_TAGS": "Includes basic product version information and tags associated with the product."
            },
            "schema": {
              "type": "string",
              "enum": [
                "PRODUCT_VERSION_VIEW_BASIC",
                "PRODUCT_VERSION_VIEW_INCLUDE_TAGS",
                "PRODUCT_VERSION_VIEW_INCLUDE_PARAMETERS",
                "PRODUCT_VERSION_VIEW_INCLUDE_CODE"
              ],
              "default": "PRODUCT_VERSION_VIEW_BASIC"
            }
          },
          {
            "description": "\n\nRequired.\nMin value: 1.\nMax value: 30.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIProducts"
        ],
        "x-section": "Products",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.product_versions:read"
        ]
      },
      "post": {
        "summary": "Creates a product version and product.",
        "operationId": ".core_api.v1.products.ProductVersion|CreateProductVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1productsProductVersion"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIProducts"
        ],
        "x-section": "Products",
        "x-permission-scopes": [
          "core:write",
          "core.product_versions:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1productsCreateProductVersionRequest"
        }
      }
    },
    "/v1/product-versions/{product_version_id}:paramTimeseries": {
      "get": {
        "summary": "Lists the timeseries for the parameters of a product version.",
        "operationId": ".core_api.v1.products.ListProductVersionParametersTimeseriesResponse|ListProductVersionParametersTimeseries",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1productsListProductVersionParametersTimeseriesResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The product version ID the parameter timeseries is to be retrieved for.",
            "name": "product_version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIProducts"
        ],
        "x-section": "Products",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read"
        ]
      }
    },
    "/v1/product-versions/{product_version_id}:updateParams": {
      "put": {
        "summary": "Updates the value of one or more parameters for a product version.",
        "description": "To add one or more parameter values at a new effective timestamp, each parameter in the `items_to_add` field must have its `name` and `value` populated. The `effective_timestamp` is optional, but must not be in the past, and defaults to current time. The new parameter(s) will be added to the product version parameter timeseries. An error will be raised if the `items_to_add` field is populated with a parameter with an existing `name` and `effective_timestamp`. An error will be raised during execution if the `shape` of the `value` does not match the existing parameter `shape`. There is no parse-time validation to check the `shape`.\n\n\nTo remove one or more parameter values at existing effective timestamps, you must populate the `items_to_remove` field with `name` and `value` for each parameter. The`effective_timestamp` must not be in the past. The `value` of the parameter is ignored. Specifying `items_to_remove` deletes these parameter(s) from the product version parameter timeseries. If the `items_to_remove` field is populated with `name` and `effective_timestamp` parameters that do not already exist in the product version parameter timeseries, this generates an error.\n\nTo edit the `value` of one or more parameters with an effective_timestamp set to a time in the future, the request must be sent with the `items_to_remove` and `items_to_add` fields populated. The `items_to_remove` field requires a list of existing parameters with the `name` and `effective_timestamp` fields populated. The `items_to_add field` requires a list of parameters with the `name` and `effective_timestamp` fields populated. The `value` field of the parameter(s) must be populated with the desired end value. The name and effective_timestamp of a parameter in the items_to_add field must exactly match the corresponding parameter in the items_to_remove field if the parameter's `value` is to be updated.",
        "operationId": ".core_api.v1.products.ProductVersion|UpdateProductVersionParams",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1productsProductVersion"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the product version to be updated.",
            "name": "product_version_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIProducts"
        ],
        "x-section": "Products",
        "x-permission-scopes": [
          "core:write",
          "core.product_versions:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1productsUpdateProductVersionParamsRequest"
        }
      }
    },
    "/v1/product-versions:batchGet": {
      "get": {
        "summary": "Retrieves one or more product versions using the product version IDs specified.",
        "operationId": ".core_api.v1.products.BatchGetProductVersionsResponse|BatchGetProductVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1productsBatchGetProductVersionsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of the product versions to be retrieved. Required; must be non-empty.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Indicates which fields should be included for the product versions. Optional; default is basic view.",
            "name": "view",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "PRODUCT_VERSION_VIEW_BASIC": "Default. Includes basic information about the product version.",
              "PRODUCT_VERSION_VIEW_INCLUDE_CODE": "Includes contract parameters and source code associated with the product.",
              "PRODUCT_VERSION_VIEW_INCLUDE_PARAMETERS": "Includes basic product version information and contract parameters associated with the product.",
              "PRODUCT_VERSION_VIEW_INCLUDE_TAGS": "Includes basic product version information and tags associated with the product."
            },
            "schema": {
              "type": "string",
              "enum": [
                "PRODUCT_VERSION_VIEW_BASIC",
                "PRODUCT_VERSION_VIEW_INCLUDE_TAGS",
                "PRODUCT_VERSION_VIEW_INCLUDE_PARAMETERS",
                "PRODUCT_VERSION_VIEW_INCLUDE_CODE"
              ],
              "default": "PRODUCT_VERSION_VIEW_BASIC"
            }
          }
        ],
        "tags": [
          "CoreAPIProducts"
        ],
        "x-section": "Products",
        "x-permission-scopes": [
          "core:read",
          "core.product_versions:read"
        ]
      }
    },
    "/v1/products": {
      "get": {
        "summary": "Lists products with pagination.",
        "operationId": ".core_api.v1.products.ListProductsResponse|ListProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1productsListProductsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Whether to include internal and/or external Products in the results.",
            "name": "include_internality",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "INTERNALITY_REFINER_ANY_INTERNALITY": "Default. Lists both internal and external products.",
              "INTERNALITY_REFINER_EXTERNAL": "Lists external products only.",
              "INTERNALITY_REFINER_INTERNAL": "Lists internal products only."
            },
            "schema": {
              "type": "string",
              "enum": [
                "INTERNALITY_REFINER_ANY_INTERNALITY",
                "INTERNALITY_REFINER_INTERNAL",
                "INTERNALITY_REFINER_EXTERNAL"
              ],
              "default": "INTERNALITY_REFINER_ANY_INTERNALITY"
            }
          },
          {
            "description": "\n\nRequired.\nMin value: 1.\nMax value: 30.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIProducts"
        ],
        "x-section": "Products",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.products:read"
        ]
      }
    },
    "/v1/products:batchGet": {
      "get": {
        "summary": "Retrieves one or more products using the product IDs specified.",
        "operationId": ".core_api.v1.products.BatchGetProductsResponse|BatchGetProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1productsBatchGetProductsResponse"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The list of product IDs for the products that are to be retrieved. Required; must be non-empty.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIProducts"
        ],
        "x-section": "Products",
        "x-permission-scopes": [
          "core:read",
          "core.products:read"
        ]
      }
    },
    "/v1/restriction-set-definition-versions": {
      "get": {
        "summary": "Lists all the restriction set definition versions sorted by name. This list method does not support pagination, as we believe it will never reach a point where pagination is required, even after many years of use. The restriction set definition versions are sorted by creation time from earliest to latest.",
        "operationId": ".core_api.v1.restrictions.ListRestrictionSetDefinitionVersionsResponse|ListRestrictionSetDefinitionVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1restrictionsListRestrictionSetDefinitionVersionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Indicates if previous versions should be excluded. Optional; default false.",
            "name": "exclude_previous_versions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The restriction set definition ID that the restriction set definition versions must belong to. If empty, all restriction set definitions are returned. Optional.",
            "name": "restriction_set_definition_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIRestrictions"
        ],
        "x-section": "Restrictions",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.restriction_set_definition_versions:read"
        ]
      },
      "post": {
        "summary": "Creates a restriction set definition version. This creates the restriction set definition if it does not exist.",
        "operationId": ".core_api.v1.restrictions.RestrictionSetDefinitionVersion|CreateRestrictionSetDefinitionVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1restrictionsRestrictionSetDefinitionVersion"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIRestrictions"
        ],
        "x-section": "Restrictions",
        "x-permission-scopes": [
          "core:write",
          "core.restriction_set_definition_versions:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1restrictionsCreateRestrictionSetDefinitionVersionRequest"
        }
      }
    },
    "/v1/restriction-set-definition-versions:batchGet": {
      "get": {
        "summary": "Retrieves one or more restriction set definition versions using the restriction set definition version IDs.",
        "operationId": ".core_api.v1.restrictions.BatchGetRestrictionSetDefinitionVersionsResponse|BatchGetRestrictionSetDefinitionVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1restrictionsBatchGetRestrictionSetDefinitionVersionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of restriction set definition versions that are to be retrieved. Required; must be non-empty. The 6.0 release will enforce a maximum number of IDs of 50.\n\nRequired.\nMin count: 1.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIRestrictions"
        ],
        "x-section": "Restrictions",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 10
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:read",
          "core.restriction_set_definition_versions:read"
        ]
      }
    },
    "/v1/restriction-set-definition/{restriction_set_definition_id}/versions": {
      "get": {
        "summary": "Lists all the restriction set definition versions sorted by name. This list method does not support pagination, as we believe it will never reach a point where pagination is required, even after many years of use. The restriction set definition versions are sorted by creation time from earliest to latest.",
        "operationId": ".core_api.v1.restrictions.ListRestrictionSetDefinitionVersionsResponse|ListRestrictionSetDefinitionVersions2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1restrictionsListRestrictionSetDefinitionVersionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The restriction set definition ID that the restriction set definition versions must belong to. If empty, all restriction set definitions are returned. Optional.",
            "name": "restriction_set_definition_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates if previous versions should be excluded. Optional; default false.",
            "name": "exclude_previous_versions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "tags": [
          "CoreAPIRestrictions"
        ],
        "x-section": "Restrictions",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.restriction_set_definition_versions:read"
        ]
      }
    },
    "/v1/restriction-set-definition/{restriction_set_definition_version.restriction_set_definition_id}/versions": {
      "post": {
        "summary": "Creates a restriction set definition version. This creates the restriction set definition if it does not exist.",
        "operationId": ".core_api.v1.restrictions.RestrictionSetDefinitionVersion|CreateRestrictionSetDefinitionVersion2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1restrictionsRestrictionSetDefinitionVersion"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID or name of the restriction set definition this version belongs to. Required for create requests.",
            "name": "restriction_set_definition_version.restriction_set_definition_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIRestrictions"
        ],
        "x-section": "Restrictions",
        "x-permission-scopes": [
          "core:write",
          "core.restriction_set_definition_versions:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1restrictionsCreateRestrictionSetDefinitionVersionRequest"
        }
      }
    },
    "/v1/restriction-set-definitions": {
      "get": {
        "summary": "Lists all the restriction set definitions.",
        "operationId": ".core_api.v1.restrictions.ListRestrictionSetDefinitionsResponse|ListRestrictionSetDefinitions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1restrictionsListRestrictionSetDefinitionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of results to be retrieved. Required; non-zero; maximum 500.\n\nRequired.\nMin value: 1.\nMax value: 500.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, the first page of results will be returned. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIRestrictions"
        ],
        "x-section": "Restrictions",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.restriction_set_definitions:read"
        ]
      }
    },
    "/v1/restriction-sets": {
      "get": {
        "summary": "Returns all the restriction sets for the provided parameters. This does not require pagination, as we only expect this to return a small number of restriction sets. You must provide at least one ID in the request.",
        "operationId": ".core_api.v1.restrictions.ListRestrictionSetsResponse|ListRestrictionSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1restrictionsListRestrictionSetsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The time at which restriction sets apply. Any restriction sets that are not yet active or have already expired at this time will be excluded. Optional; default is current time. Must be formatted as an RFC3339 timestamp.",
            "name": "effective_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The IDs of customers that restriction sets are applied to. Optional; Boolean OR interaction with other fields.",
            "name": "customer_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The IDs of accounts that restriction sets are applied to. Optional; Boolean OR interaction with other fields.",
            "name": "account_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The IDs of payment devices that restriction sets are applied to. Optional; Boolean OR interaction with other fields.",
            "name": "payment_device_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIRestrictions"
        ],
        "x-section": "Restrictions",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.restriction_sets:read"
        ]
      },
      "post": {
        "summary": "Creates a restriction set for the provided parameters.",
        "operationId": ".core_api.v1.restrictions.RestrictionSet|CreateRestrictionSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1restrictionsRestrictionSet"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIRestrictions"
        ],
        "x-section": "Restrictions",
        "x-permission-scopes": [
          "core:write",
          "core.restriction_sets:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1restrictionsCreateRestrictionSetRequest"
        }
      }
    },
    "/v1/restriction-sets/{restriction_set.id}": {
      "put": {
        "summary": "Updates a restriction set.",
        "operationId": ".core_api.v1.restrictions.RestrictionSet|UpdateRestrictionSet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1restrictionsRestrictionSet"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The unique identifier for this restriction set.",
            "name": "restriction_set.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIRestrictions"
        ],
        "x-section": "Restrictions",
        "x-permission-scopes": [
          "core:write",
          "core.restriction_sets:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1restrictionsUpdateRestrictionSetRequest"
        }
      }
    },
    "/v1/restriction-sets:batchGet": {
      "get": {
        "summary": "Retrieves one or more restriction sets using the restriction set IDs.",
        "operationId": ".core_api.v1.restrictions.BatchGetRestrictionSetsResponse|BatchGetRestrictionSets",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1restrictionsBatchGetRestrictionSetsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of the IDs of restriction sets that are to be retrieved. Required; must be non-empty. The 6.0 release will enforce a maximum number of IDs of 50.\n\nRequired.\nMin count: 1.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIRestrictions"
        ],
        "x-section": "Restrictions",
        "x-release-info": {
          "releaseVersion": {
            "major": 1,
            "minor": 10
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:read",
          "core.restriction_sets:read"
        ]
      }
    },
    "/v1/restrictions": {
      "get": {
        "summary": "Lists all the restrictions for the provided parameters. This does not require pagination, as we only expect this to return a small number of restrictions. You must provide at least one ID in the request.",
        "operationId": ".core_api.v1.restrictions.ListRestrictionsResponse|ListRestrictions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1restrictionsListRestrictionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The time at which restrictions apply. Any restrictions that are not yet active or have already expired at this time will be excluded. Optional; default is current time. Must be formatted as an RFC3339 timestamp.",
            "name": "effective_timestamp",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The IDs of customers that restrictions are applied to. Optional; Boolean OR interaction with other fields.",
            "name": "customer_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The IDs of accounts that restrictions are applied to. Optional; Boolean OR interaction with other fields.",
            "name": "account_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The IDs of payment devices that restrictions are applied to. Optional; Boolean OR interaction with other fields.",
            "name": "payment_device_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIRestrictions"
        ],
        "x-section": "Restrictions",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.restrictions:read"
        ]
      }
    },
    "/v1/jobs": {
      "get": {
        "summary": "Returns a list of Jobs based on a combination of filters including schedule IDs, Status, and Scheduled Timestamp window.",
        "operationId": ".core_api.v1.scheduler.ListJobsResponse|ListJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1schedulerListJobsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Schedule used to filter for associated Jobs. At least one of the schedule_id or status fields must be populated.",
            "name": "schedule_id",
            "in": "query",
            "required": false,
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 5
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "This field is deprecated in favour of the schedule_ids field.",
              "featureFlag": "TM_96469_LIST_JOBS_EXPANSION"
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of Schedule IDs used to filter for associated jobs. At least one of the schedule_ids or status fields must be populated.\n\nMax length: 50 characters.",
            "name": "schedule_ids",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "ListJobs accepts a list of schedule_ids",
              "featureFlag": "TM_96469_LIST_JOBS_EXPANSION"
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Filter for jobs that have this status. At least one of the schedule_ids or status fields must be populated.",
            "name": "status",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "ListJobs accepts a status filter",
              "featureFlag": "TM_96469_LIST_JOBS_EXPANSION"
            },
            "x-enum-value-release-info": {
              "JOB_STATUS_OVERRIDDEN": {
                "releaseVersion": {
                  "major": 5,
                  "minor": 5
                },
                "changeType": "ADD_ENUM_VALUE",
                "description": "Adds a new status value: Overridden",
                "featureFlag": "TM_96471_OVERRIDE_JOBS_STATUS"
              }
            },
            "x-enum-value-descriptions": {
              "JOB_STATUS_FAILED": "A Job has failed to complete.",
              "JOB_STATUS_OVERRIDDEN": "A Job has been overridden. A failed Job has been manually overridden to unblock the schedule. Behaviour identical to a succeeded Job. Can only be set by calling the BatchRepublishJobs endpoint.",
              "JOB_STATUS_PUBLISHED": "A Job has been published but not executed.",
              "JOB_STATUS_SKIPPED": "A Job has been skipped.",
              "JOB_STATUS_SUCCEEDED": "A Job has completed sucessfully.",
              "JOB_STATUS_UNKNOWN": "Default Value."
            },
            "schema": {
              "type": "string",
              "enum": [
                "JOB_STATUS_UNKNOWN",
                "JOB_STATUS_PUBLISHED",
                "JOB_STATUS_SUCCEEDED",
                "JOB_STATUS_FAILED",
                "JOB_STATUS_SKIPPED",
                "JOB_STATUS_OVERRIDDEN"
              ],
              "default": "JOB_STATUS_UNKNOWN"
            }
          },
          {
            "description": "Scheduled_timestamp used to list all Jobs with a scheduled_timestamp equal to or after this time. Optional.",
            "name": "from_timestamp",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "ListJobs accepts a scheduled_timestamp window",
              "featureFlag": "TM_96469_LIST_JOBS_EXPANSION"
            },
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "Scheduled_timestamp used to list all Jobs with a scheduled_timestamp equal to or before this time. Optional.",
            "name": "to_timestamp",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "ListJobs accepts a scheduled_timestamp window",
              "featureFlag": "TM_96469_LIST_JOBS_EXPANSION"
            },
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "description": "The number of results to be listed.\n\nRequired.\nMin value: 1.\nMax value: 500.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the results based on the other parameters. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIScheduler"
        ],
        "x-section": "Scheduler",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.jobs:read"
        ]
      }
    },
    "/v1/jobs/{id}:republish": {
      "post": {
        "summary": "Republishes a Job.",
        "operationId": ".google.protobuf.Empty|RepublishJob",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Job to be republished.",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIScheduler"
        ],
        "x-section": "Scheduler",
        "x-release-info": {
          "noticeVersion": {
            "major": 5,
            "minor": 3
          },
          "releaseVersion": {
            "major": 7
          },
          "changeType": "REMOVE_METHOD",
          "description": "This method is deprecated in favour of /v1/jobs:batchRepublish"
        },
        "x-permission-scopes": [
          "core:execute",
          "core.jobs:execute"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1schedulerRepublishJobRequest"
        }
      }
    },
    "/v1/jobs:batchGet": {
      "get": {
        "summary": "Returns one or more Jobs.",
        "operationId": ".core_api.v1.scheduler.BatchGetJobsResponse|BatchGetJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1schedulerBatchGetJobsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Job or Jobs to be retrieved using their Job IDs.\n\nRequired.\nMin count: 1.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIScheduler"
        ],
        "x-section": "Scheduler",
        "x-permission-scopes": [
          "core:read",
          "core.jobs:read"
        ]
      }
    },
    "/v1/jobs:batchRepublish": {
      "post": {
        "summary": "Republishes multiple Jobs.",
        "operationId": ".google.protobuf.Empty|BatchRepublishJobs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIScheduler"
        ],
        "x-section": "Scheduler",
        "x-release-info": {
          "releaseVersion": {
            "major": 5,
            "minor": 3
          },
          "changeType": "ADD_METHOD",
          "description": "This endpoint republishes multiple Jobs",
          "featureFlag": "TM_94865_REPUBLISH_JOBS"
        },
        "x-permission-scopes": [
          "core:execute",
          "core.jobs:execute"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1schedulerRepublishJobsRequest"
        }
      }
    },
    "/v1/schedule-tags": {
      "post": {
        "summary": "Creates a ScheduleTag.",
        "operationId": ".core_api.v1.scheduler.ScheduleTag|CreateScheduleTag",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1schedulerScheduleTag"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIScheduler"
        ],
        "x-section": "Scheduler",
        "x-release-info": {
          "noticeVersion": {
            "major": 4,
            "minor": 6
          },
          "releaseVersion": {
            "major": 6
          },
          "changeType": "REMOVE_METHOD",
          "description": "The Schedule Tags API is deprecated, see the AccountScheduleTag API which provides schedule tag functionality for account schedules."
        },
        "x-permission-scopes": [
          "core:write",
          "core.schedule_tags:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1schedulerCreateScheduleTagRequest"
        }
      }
    },
    "/v1/schedules": {
      "get": {
        "summary": "Lists and filters Schedules.",
        "operationId": ".core_api.v1.scheduler.ListSchedulesResponse|ListSchedules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1schedulerListSchedulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of results to be listed. Required; must be non-zero.\n\nRequired.\nMin value: 1.\nMax value: 500.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "x-enum-value-release-info": {
              "SCHEDULE_STATUS_DELAYED": {
                "noticeVersion": {
                  "major": 5,
                  "minor": 6
                },
                "releaseVersion": {
                  "major": 7
                },
                "changeType": "REMOVE_ENUM_VALUE",
                "description": "This status is now deprecated."
              },
              "SCHEDULE_STATUS_SKIPPED": {
                "noticeVersion": {
                  "major": 3,
                  "minor": 1
                },
                "releaseVersion": {
                  "major": 5
                },
                "changeType": "REMOVE_ENUM_VALUE",
                "description": "This field's functionality is to be replaced by skip_start_timestamp/skip_end_timestamp"
              }
            },
            "x-enum-value-descriptions": {
              "SCHEDULE_STATUS_COMPLETED": "The Schedule has completed and is inactive.",
              "SCHEDULE_STATUS_DELAYED": "A Schedule is in a DELAYED State.",
              "SCHEDULE_STATUS_DISABLED": "The Schedule is disabled and inactive.",
              "SCHEDULE_STATUS_ENABLED": "The Schedule is enabled and active.",
              "SCHEDULE_STATUS_FAILED": "The Schedule has failed and is inactive.",
              "SCHEDULE_STATUS_PENDING": "The Schedule is in a PENDING State.",
              "SCHEDULE_STATUS_UNKNOWN": "When selected, a filter is applied to ScheduleStatus. Default is unselected."
            },
            "schema": {
              "type": "string",
              "enum": [
                "SCHEDULE_STATUS_UNKNOWN",
                "SCHEDULE_STATUS_ENABLED",
                "SCHEDULE_STATUS_DISABLED",
                "SCHEDULE_STATUS_COMPLETED",
                "SCHEDULE_STATUS_FAILED",
                "SCHEDULE_STATUS_PENDING",
                "SCHEDULE_STATUS_DELAYED"
              ],
              "default": "SCHEDULE_STATUS_UNKNOWN"
            }
          },
          {
            "description": "Token of the page the results are to be retrieved from. If empty, returns the results based on the other parameters. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter schedules by those whose name starts with this prefix. Cannot be used with resource filter. Optional.",
            "name": "name_filter",
            "in": "query",
            "required": false,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 12
              },
              "changeType": "ADD_FIELD",
              "description": "ListSchedules accepts a name filter"
            },
            "schema": {
              "type": "string"
            }
          },
          {
            "schema": {
              "$ref": "#/components/schemas/v1schedulerResource",
              "description": "Filter schedules by an associated resource. Cannot be used with status or name_filter. Optional.",
              "x-release-info": {
                "releaseVersion": {
                  "major": 5,
                  "minor": 4
                },
                "changeType": "ADD_FIELD",
                "description": "Add a new field: resource",
                "featureFlag": "TM_85152_LIST_SCHEDULES_BY_RESOURCE"
              }
            },
            "name": "resource",
            "in": "query",
            "required": false
          }
        ],
        "tags": [
          "CoreAPIScheduler"
        ],
        "x-section": "Scheduler",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.schedules:read"
        ]
      }
    },
    "/v1/schedules:batchGet": {
      "get": {
        "summary": "Retrieves one or more Schedules.",
        "operationId": ".core_api.v1.scheduler.BatchGetSchedulesResponse|BatchGetSchedules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1schedulerBatchGetSchedulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerINVALID_ARGUMENT_0",
                  "description": "Returned on receipt of invalid input regardless of the state of the system",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPISchedulerNOT_FOUND_1",
                  "description": "Returned on the resource being retrieved or mutated not being found",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "Maps the Schedule ID to the requested Schedules.\n\nRequired.\nMin count: 1.",
            "name": "ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIScheduler"
        ],
        "x-section": "Scheduler",
        "x-permission-scopes": [
          "core:read",
          "core.schedules:read"
        ]
      }
    },
    "/v1/supervisor-contract-versions": {
      "get": {
        "summary": "Lists Supervisor Contract Versions.",
        "operationId": ".core_api.v1.supervisor_contracts.ListSupervisorContractVersionsResponse|ListSupervisorContractVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1supervisor_contractsListSupervisorContractVersionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The Supervisor Contract ID to retrieve values for.\n\nRequired.",
            "name": "supervisor_contract_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional fields to return; optional. Some Supervisor Contract Version fields are omitted by default as they are bulky or costly; if those fields are specified here, they will be populated in the response.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_DETAILS_API_VERSION",
                  "INCLUDE_FIELD_DETAILS_NOTIFICATION_TYPES"
                ]
              }
            }
          },
          {
            "description": "The number of Supervisor Contract Versions to be retrieved.\n\nRequired.\nMin value: 1.\nMax value: 50.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, this returns the first page of results.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPISupervisorContracts"
        ],
        "x-section": "Supervisor Contracts",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.supervisor_contract_versions:read"
        ]
      },
      "post": {
        "summary": "Creates a Supervisor Contract Version.",
        "operationId": ".core_api.v1.supervisor_contracts.SupervisorContractVersion|CreateSupervisorContractVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1supervisor_contractsSupervisorContractVersion"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPISupervisorContracts"
        ],
        "x-section": "Supervisor Contracts",
        "x-permission-scopes": [
          "core:write",
          "core.supervisor_contract_versions:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1supervisor_contractsCreateSupervisorContractVersionRequest"
        }
      }
    },
    "/v1/supervisor-contract-versions:batchGet": {
      "get": {
        "summary": "Retrieves one or more Supervisor Contract Versions using the Supervisor Contract Version ID.",
        "operationId": ".core_api.v1.supervisor_contracts.BatchGetSupervisorContractVersionsResponse|BatchGetSupervisorContractVersions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1supervisor_contractsBatchGetSupervisorContractVersionsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "List of IDs of the Supervisor Contract Versions to retrieve.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "Additional fields to return; optional. Some Supervisor Contract Version fields are omitted by default as they are bulky or costly; if those fields are specified here, they will be populated in the response.",
            "name": "fields_to_include",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "INCLUDE_FIELD_CODE",
                  "INCLUDE_FIELD_DETAILS_API_VERSION",
                  "INCLUDE_FIELD_DETAILS_NOTIFICATION_TYPES"
                ]
              }
            }
          }
        ],
        "tags": [
          "CoreAPISupervisorContracts"
        ],
        "x-section": "Supervisor Contracts",
        "x-permission-scopes": [
          "core:read",
          "core.supervisor_contract_versions:read"
        ]
      }
    },
    "/v1/supervisor-contracts": {
      "get": {
        "summary": "Lists Supervisor Contracts.",
        "operationId": ".core_api.v1.supervisor_contracts.ListSupervisorContractsResponse|ListSupervisorContracts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1supervisor_contractsListSupervisorContractsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of Supervisor Contracts to be retrieved.\n\nRequired.\nMin value: 1.\nMax value: 50.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The token of the page the results are to be retrieved from. If empty, this returns the first page of results.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPISupervisorContracts"
        ],
        "x-section": "Supervisor Contracts",
        "x-list-consistency-level": "BEST_EFFORT",
        "x-permission-scopes": [
          "core:read",
          "core.supervisor_contracts:read"
        ]
      },
      "post": {
        "summary": "Creates a Supervisor Contract.",
        "operationId": ".core_api.v1.supervisor_contracts.SupervisorContract|CreateSupervisorContract",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1supervisor_contractsSupervisorContract"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPISupervisorContracts"
        ],
        "x-section": "Supervisor Contracts",
        "x-permission-scopes": [
          "core:write",
          "core.supervisor_contracts:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v1supervisor_contractsCreateSupervisorContractRequest"
        }
      }
    },
    "/v1/supervisor-contracts:batchGet": {
      "get": {
        "summary": "Retrieves one or more Supervisor Contracts using the Supervisor Contract ID.",
        "operationId": ".core_api.v1.supervisor_contracts.BatchGetSupervisorContractsResponse|BatchGetSupervisorContracts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1supervisor_contractsBatchGetSupervisorContractsResponse"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "List of IDs of the Supervisor Contracts to retrieve.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPISupervisorContracts"
        ],
        "x-section": "Supervisor Contracts",
        "x-permission-scopes": [
          "core:read",
          "core.supervisor_contracts:read"
        ]
      }
    },
    "/v1/vault-version": {
      "get": {
        "summary": "Get Vault Version",
        "operationId": ".core_api.v1.vaultversion.VaultVersion|GetVaultVersion",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v1vaultversionVaultVersion"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIVaultVersion"
        ],
        "x-section": "Vault Version",
        "x-release-info": {
          "releaseVersion": {
            "major": 3
          },
          "changeType": "ADD_METHOD"
        },
        "x-permission-scopes": [
          "core:read",
          "core.vault_versions:read"
        ]
      }
    },
    "/v2/accounts": {
      "get": {
        "summary": "Pages through an ordered list of Accounts based on filtering criteria. Every request must be filtered on either Customer or Internal Accounts. \\n [IMPORTANT]\\n =====\\n When using this endpoint, there will be a short interval between a mutation being made\\n to a given Account, and that mutation being reflected.\\n =====\\n \\n",
        "operationId": ".core_api.v2.accounts.ListAccountsResponse|ListAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2accountsListAccountsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIAccountsINVALID_ARGUMENT_0",
                  "description": "Returned when the request can never be fulfilled.",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The number of results to be listed. Required; must have an integer value in the range 1-100.\n\nRequired.\nMin value: 1.\nMax value: 100.",
            "name": "page_size",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "Token of the page to retrieve. If empty, returns the first page of results. Optional.",
            "name": "page_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The type of Account to filter on. Required.\n\nRequired.",
            "name": "type",
            "in": "query",
            "required": true,
            "x-enum-value-descriptions": {
              "ACCOUNT_TYPE_CUSTOMER": "An Account for a Customer of the bank. Customer Accounts are backed by Smart Contracts.",
              "ACCOUNT_TYPE_INTERNAL": "An Account where the bank is the (implicit) stakeholder. Internal Accounts are not backed by Smart Contracts.",
              "ACCOUNT_TYPE_UNKNOWN": "This status exists to avoid an empty request unintentionally setting an undesired type. An Account will never have this type."
            },
            "schema": {
              "type": "string",
              "enum": [
                "ACCOUNT_TYPE_UNKNOWN",
                "ACCOUNT_TYPE_CUSTOMER",
                "ACCOUNT_TYPE_INTERNAL"
              ],
              "default": "ACCOUNT_TYPE_UNKNOWN"
            }
          },
          {
            "description": "The ID of the stakeholder whose Accounts are to be listed. Optional.",
            "name": "stakeholder_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "List of inclusive OR Account status filters. Must be URL encoded. Optional.",
            "name": "statuses",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "ACCOUNT_STATUS_CANCELLED": "The Account is cancelled. No hooks are allowed. No postings are allowed. No schedules exist. This status can only be moved to from PENDING.",
              "ACCOUNT_STATUS_CLOSED": "The Account has been closed. Its balances are zero and new postings will be rejected. All schedules have been deactivated, although latent events may still occur (which cannot affect balances). This is a terminal status. Some notifications may not have been successful in the deactivation process if an error was returned. See [troubleshooting](/vault_v5/accounts_version_2/#troubleshooting_accounts) for more information.",
              "ACCOUNT_STATUS_CLOSING": "An Account is in the process of being closed. Its deactivation hook has been successfully executed but the resulting postings may not have been committed and schedules may not have been deactivated yet. This status is intended to be short-lived; if it persists for any length of time it may indicate that user intervention is required. Vault will continually attempt to move to CLOSED status asynchronously. Postings are accepted based on the presence of any Restrictions, and the Smart Contract behaviour. Schedules may continue to execute if not yet deactivated.",
              "ACCOUNT_STATUS_OPEN": "An Account has been activated. Postings are accepted based on the presence of any Restrictions, and the Smart Contract behaviour. Schedules have been created and commenced as of the activation time. In the event that Postings and/or notifications failed during the activation process, an error will be returned. For more information, see [troubleshooting](/vault_v5/accounts_version_2/#troubleshooting_accounts).",
              "ACCOUNT_STATUS_OPENING": "An Account in the process of being activated. Its activation hook has been successfully executed but the directives it produced may not have been committed yet. This status is intended to be short-lived; if it persists for any length of time it may indicate that user intervention is required. Vault will continually attempt to move to OPEN status asynchronously. Postings will be rejected unless they come from the activation hook. Any such Postings may have been committed. Schedules may have been created. Notifications may have been sent.",
              "ACCOUNT_STATUS_PENDING": "An Account that has not been activated. If this status was requested, the PENDING response means that no hook has yet been run, no schedules will exist, and Postings will be rejected. If the OPEN status was requested, a PENDING response means that manual remediation is required. For more information, see [troubleshooting](/vault_v5/accounts_version_2/#troubleshooting_accounts).",
              "ACCOUNT_STATUS_PENDING_CLOSURE": "The Account is in pending closure status. <br> DEPRECATED: This status exists to support v1 endpoints on v2 and will be removed no earlier than Vault Core 7.0. The closure Account update is created. The closure hook is run. The Account remains in this state until manually updated to closed. Balances are checked when transitioning to CLOSED.",
              "ACCOUNT_STATUS_PENDING_OPENING": "The Account is in pending open status. <br> Postings will be rejected unless they come from the activation hook. Any such Postings may have been committed. Schedules may have been created. Notifications may have been sent. Once in this status an Account can only move to OPEN. <br> DEPRECATED: This status exists to support v1 endpoints on v2 and will be removed no earlier than Vault Core 7.0. The Account is represented as OPEN on v1 endpoints. In v2, the Account may or may not be activated. Activation Account Updates are created which will activate the Account and update it to OPEN once complete.",
              "ACCOUNT_STATUS_UNKNOWN": "This status exists to avoid an empty request unintentionally setting an undesired status. An Account will never have this status."
            },
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCOUNT_STATUS_UNKNOWN",
                  "ACCOUNT_STATUS_PENDING",
                  "ACCOUNT_STATUS_OPENING",
                  "ACCOUNT_STATUS_OPEN",
                  "ACCOUNT_STATUS_CLOSING",
                  "ACCOUNT_STATUS_CLOSED",
                  "ACCOUNT_STATUS_CANCELLED",
                  "ACCOUNT_STATUS_PENDING_OPENING",
                  "ACCOUNT_STATUS_PENDING_CLOSURE"
                ]
              }
            }
          },
          {
            "description": "List of inclusive OR Smart Contract Version ID filters. Must be URL encoded. Optional.",
            "name": "smart_contract_version_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "description": "The ID of the Parameter Value Hierarchy Node associated with the Accounts to be listed. This will match all Accounts with a matching `parameter_value_hierarchy_node_id`. Optional. If present, cannot be empty. Cannot be used in conjunction with `parameter_value_hierarchy_node_id_include_subtree` or `empty_parameter_value_hierarchy_node_id`.",
            "name": "parameter_value_hierarchy_node_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The ID of the Parameter Value Hierarchy Node whose subtree (and itself) the Accounts to be listed are associated with. This will match all accounts whose  `parameter_value_hierarchy_node_id` references the requested node or any of its descendants. Optional. If present, cannot be empty. Cannot be used in conjunction with `parameter_value_hierarchy_node_id` or `empty_parameter_value_hierarchy_node_id`.",
            "name": "parameter_value_hierarchy_node_id_include_subtree",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Boolean filter to list Accounts not associated with the Parameter Value Hierarchy. Optional. If present, cannot be false. Cannot be used in conjunction with `parameter_value_hierarchy_node_id` or `parameter_value_hierarchy_node_id_include_subtree`.",
            "name": "empty_parameter_value_hierarchy_node_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The Processing Group ID of the accounts to be listed. Optional.",
            "name": "processing_group_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The processing label of the accounts to be listed. Can only be used with  `type` set to `ACCOUNT_TYPE_INTERNAL`. Optional.",
            "name": "processing_label",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The direction and field to order the results of the request by.",
            "name": "order_by",
            "in": "query",
            "required": false,
            "x-enum-value-descriptions": {
              "ORDER_BY_ACCOUNT_ID_ASC": "Order results by Account ID in ascending order - the default.",
              "ORDER_BY_ACCOUNT_ID_DESC": "Order results by Account ID in descending order.",
              "ORDER_BY_SOURCE_CREATE_TIMESTAMP_ASC": "Order results by source_create_timestamp in ascending order.",
              "ORDER_BY_SOURCE_CREATE_TIMESTAMP_DESC": "Order results by source_create_timestamp in descending order."
            },
            "schema": {
              "type": "string",
              "enum": [
                "ORDER_BY_ACCOUNT_ID_ASC",
                "ORDER_BY_ACCOUNT_ID_DESC",
                "ORDER_BY_SOURCE_CREATE_TIMESTAMP_ASC",
                "ORDER_BY_SOURCE_CREATE_TIMESTAMP_DESC"
              ],
              "default": "ORDER_BY_ACCOUNT_ID_ASC"
            }
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "source_open_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the Account's source_open_timestamp must belong to. This range is from source_open_timestamp_range.from up to and not including source_open_timestamp_range.to. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "source_open_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the Account's source_open_timestamp must belong to. This range is from source_open_timestamp_range.from up to and not including source_open_timestamp_range.to. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "source_close_timestamp_range.from",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the Account's source_close_timestamp must belong to. This range is from source_close_timestamp_range.from up to and not including source_close_timestamp_range.to. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "name": "source_close_timestamp_range.to",
            "in": "query",
            "required": false,
            "description": "The timestamp range that the Account's source_close_timestamp must belong to. This range is from source_close_timestamp_range.from up to and not including source_close_timestamp_range.to. Optional. This is an auto generated field to make the swagger compatible with the third party codegen tool."
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts-v2",
        "x-list-consistency-level": "PAGE_LEVEL",
        "x-permission-scopes": [
          "core:read",
          "core.accounts:read",
          "core.internal_accounts:read"
        ]
      },
      "post": {
        "summary": "Creates an Internal or Customer Account. Customer Accounts can be created in PENDING or OPEN status. <br> *NOTE: Any restriction_type can be applied to Customer Accounts; however, [Restrictions](/api/core_api/#Restrictions) cannot be overridden in /v2/accounts.*",
        "operationId": ".core_api.v2.accounts.Account|CreateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2accountsAccount"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_2",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_3",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_4",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_5",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_6",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_7",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_8",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_9",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_10",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_11",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_12",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_13",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_14",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_15",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_16",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_17",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_18",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_19",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_20",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_21",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_22",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_23",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_24",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_25",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CreateAccountFAILED_PRECONDITION_26",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIAccountsINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "409": {
            "description": "The error response for 409",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountALREADY_EXISTS_0",
                  "description": "Returned when an Account with the requested ID already exists.",
                  "title": "ALREADY_EXISTS"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts-v2",
        "x-permission-scopes": [
          "core:write",
          "core.accounts:write",
          "core.internal_accounts:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v2accountsCreateAccountRequest"
        }
      }
    },
    "/v2/accounts/{account.id}": {
      "put": {
        "summary": "Updates an existing Internal or Customer Account. This can be used to move a Customer Account from PENDING to OPEN, or from OPEN to CLOSED. It can also be used to convert a Customer Account to a new Smart Contract Version. See the update_mask field documentation for more details of what can be updated. <br><br> *NOTES: - Any restriction_type can be applied to Customer Accounts; however, [Restrictions](/api/core_api/#Restrictions) cannot be overridden in /v2/accounts. <br> - For legacy Instance Parameters, any `default_value` specified in the Smart Contract will not be used on Account conversions.*",
        "operationId": ".core_api.v2.accounts.Account|UpdateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2accountsAccount"
                }
              }
            }
          },
          "400": {
            "description": "The potential error responses for 400",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_2",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_3",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_4",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_5",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_6",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_7",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_8",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_9",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_10",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_11",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_12",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_13",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_14",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_15",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_16",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_17",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_18",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_19",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_20",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_21",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_22",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_23",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_24",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_25",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_26",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_27",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_28",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_29",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_30",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_31",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_32",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_33",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/UpdateAccountFAILED_PRECONDITION_34",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/CoreAPIAccountsINVALID_ARGUMENT_0",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAccountNOT_FOUND_0",
                  "description": "Returned when an Account with the supplied ID could not be found.",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "The ID of the Account. When creating a customer Account this field is optional and will default to a UUID if not provided. When creating an internal Account this field is required. Max length: 36 characters.",
            "name": "account.id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts-v2",
        "x-permission-scopes": [
          "core:write",
          "core.accounts:write",
          "core.internal_accounts:write"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/v2accountsUpdateAccountRequest"
        }
      }
    },
    "/v2/accounts:batchGet": {
      "get": {
        "summary": "Retrieves a set of Customer and/or Internal Accounts by their IDs.",
        "operationId": ".core_api.v2.accounts.BatchGetAccountsResponse|BatchGetAccounts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/v2accountsBatchGetAccountsResponse"
                }
              }
            }
          },
          "400": {
            "description": "The error response for 400",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CoreAPIAccountsINVALID_ARGUMENT_0",
                  "description": "Returned when the request can never be fulfilled.",
                  "title": "INVALID_ARGUMENT"
                }
              }
            }
          },
          "401": {
            "description": "The error response for 401",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsUNAUTHENTICATED_1",
                  "description": "Returned when the request could not be authenticated",
                  "title": "UNAUTHENTICATED"
                }
              }
            }
          },
          "403": {
            "description": "The error response for 403",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicAPIErrorsPERMISSION_DENIED_0",
                  "description": "Returned when the client does not have permission to perform the request",
                  "title": "PERMISSION_DENIED"
                }
              }
            }
          },
          "404": {
            "description": "The error response for 404",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchGetAccountsNOT_FOUND_0",
                  "description": "Returned if any of the IDs do not match existing Accounts",
                  "title": "NOT_FOUND"
                }
              }
            }
          },
          "429": {
            "description": "The error response for 429",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsRESOURCE_EXHAUSTED_2",
                  "description": "Returned when too many requests are sent within a time period",
                  "title": "RESOURCE_EXHAUSTED"
                }
              }
            }
          },
          "500": {
            "description": "The potential error responses for 500",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/GlobalErrorsINTERNAL_1",
                      "required": false
                    },
                    {
                      "$ref": "#/components/schemas/GlobalErrorsUNKNOWN_4",
                      "required": false
                    }
                  ]
                }
              }
            }
          },
          "503": {
            "description": "The error response for 503",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsUNAVAILABLE_3",
                  "description": "Returned when the service is currently unavailable. Can be safely retried",
                  "title": "UNAVAILABLE"
                }
              }
            }
          },
          "504": {
            "description": "The error response for 504",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GlobalErrorsDEADLINE_EXCEEDED_0",
                  "description": "Returned when a complete request was not received within the allowed time. Can be safely retried. May be returned even if the operation has completed successfully",
                  "title": "DEADLINE_EXCEEDED"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "description": "A list of Account IDs.",
            "name": "ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "tags": [
          "CoreAPIAccounts"
        ],
        "x-section": "Accounts-v2",
        "x-permission-scopes": [
          "core:read",
          "core.accounts:read",
          "core.internal_accounts:read"
        ]
      }
    }
  },
  "x-sections": {
    "Account schedule tags": {},
    "Accounts": {},
    "Account Attributes": {
      "releaseNotes": {
        "changeType": "ADD_SERVICE",
        "featureFlag": "IMP_1017_ACCOUNT_ATTRIBUTE_HOOK"
      }
    },
    "Auth": {},
    "Balances": {},
    "Calendar": {},
    "Contract Events": {
      "releaseNotes": {
        "changeType": "ADD_SERVICE",
        "featureFlag": "IMP_55_AEP_COL_SCHEDULE_HOOK_INTEGRATION"
      }
    },
    "Contract Modules": {
      "releaseNotes": {
        "changeType": "ADD_SERVICE"
      }
    },
    "Contracts": {},
    "Customers": {},
    "Derived Parameters": {
      "releaseNotes": {
        "changeType": "ADD_SERVICE",
        "featureFlag": "IMP_1017_ACCOUNT_ATTRIBUTE_HOOK"
      }
    },
    "Journal Events": {},
    "Flags": {},
    "Global parameters": {},
    "Internal accounts": {},
    "LedgerBalances": {},
    "Parameters": {},
    "Payment devices": {},
    "Plans": {},
    "Policy Management": {},
    "Post Posting Republisher": {
      "releaseNotes": {
        "releaseVersion": {
          "major": 4,
          "minor": 2
        },
        "changeType": "ADD_SERVICE",
        "featureFlag": "TM_69579_POST_POSTING_RETRYABILITY"
      }
    },
    "Posting instruction batches": {},
    "Postings API clients": {},
    "ProcessingGroups": {
      "releaseNotes": {
        "releaseVersion": {
          "major": 5
        },
        "changeType": "ADD_SERVICE"
      }
    },
    "Products": {},
    "Restrictions": {},
    "Scheduler": {},
    "Supervisor Contracts": {},
    "Vault Version": {
      "releaseNotes": {
        "releaseVersion": {
          "major": 3
        },
        "changeType": "ADD_SERVICE"
      }
    },
    "Accounts-v2": {}
  },
  "openapi": "3.0.1",
  "components": {
    "schemas": {
      "tmachineprotobufFieldMask": {
        "type": "object",
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The set of field mask paths."
          }
        },
        "description": "\"paths\": [\"f.a\", \"f.b.d\"]\n\nHere `f` represents a field in some root message, `a` and `b` fields in the message found in `f`, and `d` a field found in the message in `f.b`.\n\nFields are represented by their JSON field names.\n\n   \"paths\": [\"f.field1\", \"f.field_on_f.some_field_name\"]\n\nField masks are used to specify a subset of fields that should be, or have been, modified by an update operation.",
        "title": "FieldMask represents a set of symbolic field paths, for example:"
      },
      "v1account_schedule_tagsAccountScheduleTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the AccountScheduleTag; it is used to tag schedules in a Smart Contract or Supervisor Contract.\n\nRequired.\nMax length: 256 characters."
          },
          "description": {
            "type": "string",
            "description": "The description of the AccountScheduleTag.\n"
          },
          "sends_scheduled_operation_reports": {
            "type": "boolean",
            "description": "Indicates if the AccountScheduleTag is set to produce execution notifications."
          },
          "schedule_status_override": {
            "$ref": "#/components/schemas/v1account_schedule_tagsAccountScheduleTagScheduleStatusOverride",
            "description": "The status applied to schedules tagged with this AccountScheduleTag.",
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 5
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "Scheduler tag status overrides are deprecated because its use cases are no longer valid."
            }
          },
          "schedule_status_override_start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp, in UTC, indicating when to start overriding the status on account/plan schedules with this tag. Formatted as an RFC3339 timestamp."
          },
          "schedule_status_override_end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp, in UTC, indicating when to stop overriding the status on account/plan schedules with this tag. Formatted as an RFC3339 timestamp."
          },
          "test_pause_at_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp, in UTC, indicating when an account/plan schedule with this tag will pause; the pause will occur when `next_run_timestamp` is equal to or greater than `test_pause_at_timestamp`. Only for testing purposes. Formatted as an RFC3339 timestamp."
          },
          "processing_group_id": {
            "type": "string",
            "title": "The ID of the Processing Group for the AccountScheduleTag.  If omitted, it defaults to the default Processing Group. Create only. Optional. <br><br>*Multiple Processing Groups are only available as an optional add-on.*",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 3
              },
              "changeType": "ADD_FIELD"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "v1account_schedule_tagsAccountScheduleTagScheduleStatusOverride": {
        "type": "string",
        "enum": [
          "ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_UNKNOWN",
          "ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_NO_OVERRIDE",
          "ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_TO_ENABLED",
          "ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_TO_FAST_FORWARDED",
          "ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_TO_SKIPPED"
        ],
        "default": "ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_UNKNOWN",
        "x-enum-value-descriptions": {
          "ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_NO_OVERRIDE": "Indicates that the AccountScheduleTag is inactive; it will not apply any status effects on its tagged account/plan schedules. `schedule_status_override_start_timestamp` and `schedule_status_override_end_timestamp` must not be provided for this status override.",
          "ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_TO_ENABLED": "An AccountScheduleTag with this status override will temporarily override the status of all tagged schedules to `SCHEDULE_STATUS_ENABLED`. The change will be effective between `schedule_status_override_start_timestamp` and `schedule_status_override_end_timestamp`. Both `schedule_status_override_start_timestamp` and `schedule_status_override_end_timestamp` are required for this status override.",
          "ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_TO_FAST_FORWARDED": "An AccountScheduleTag with this status override will temporarily fast-forward tagged account/plan schedules. <br> All jobs associated with tagged schedules that have a:<br> - `schedule_timestamp` between the current time and `schedule_status_override_end_timestamp` are triggered immediately<br> - `schedule_timestamp` after `schedule_status_override_end_timestamp` are unaffected and are triggered at their `schedule_timestamp`<br><br> For this status override,`schedule_status_override_start_timestamp` must not be provided, but `schedule_status_override_end_timestamp` must be provided.<br><br> Note: For tags with a value in `test_pause_at_timestamp`:<br> - This schedule status override setting will prioritise the schedule status override behaviour (over the `test_pause_at_timestamp`)<br> - Any other schedule status override setting will prioritise `test_pause_at_timestamp` (over the schedule status override)",
          "ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_TO_SKIPPED": "An AccountScheduleTag with this status override will temporarily override the status of all tagged schedules to `SCHEDULE_STATUS_SKIPPED`. The change will be effective between `schedule_status_override_start_timestamp` and `schedule_status_override_end_timestamp`. `schedule_status_override_start_timestamp` is optional for this status override and defaults to the current time if it is not provided. `schedule_status_override_end_timestamp` is required for this status override.",
          "ACCOUNT_SCHEDULE_TAG_SCHEDULE_STATUS_OVERRIDE_UNKNOWN": "Default value."
        }
      },
      "v1account_schedule_tagsBatchGetAccountScheduleTagsResponse": {
        "type": "object",
        "properties": {
          "account_schedule_tags": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1account_schedule_tagsAccountScheduleTag"
            },
            "description": "A map of the AccountScheduleTag ID to the AccountScheduleTag."
          }
        }
      },
      "v1account_schedule_tagsCreateAccountScheduleTagRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 256 characters."
          },
          "account_schedule_tag": {
            "$ref": "#/components/schemas/v1account_schedule_tagsAccountScheduleTag",
            "description": "The AccountScheduleTag that is to be created. Required."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1account_schedule_tagsListAccountScheduleTagsResponse": {
        "type": "object",
        "properties": {
          "account_schedule_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1account_schedule_tagsAccountScheduleTag"
            },
            "description": "A list of matching AccountScheduleTags, ordered by ascending ID."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1account_schedule_tagsUpdateAccountScheduleTagRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 256 characters."
          },
          "account_schedule_tag": {
            "$ref": "#/components/schemas/v1account_schedule_tagsAccountScheduleTag",
            "description": "The AccountScheduleTag that is to be updated. Required.",
            "x-excluded-fields": [
              "description",
              "sends_scheduled_operation_reports"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "title": "Field mask used to indicate which fields of the resource are to be updated. Required. Valid update mask paths are: - `schedule_status_override` which will update the `schedule_status_override` of an AccountScheduleTag - `schedule_status_override_status_start_timestamp` which will update the `schedule_status_override_status_start_timestamp` of an AccountScheduleTag. A `schedule_status_override` is required when updating this field - `schedule_status_override_status_end_timestamp` which will update the `schedule_status_override_status_end_timestamp` of an AccountScheduleTag. A `schedule_status_override` is required when updating this field - `test_pause_at_timestamp` which will update the `test_pause_at_timestamp` value of an AccountScheduleTag"
          }
        },
        "required": [
          "request_id"
        ]
      },
      "accountsGetAccountRequestIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_DERIVED_INSTANCE_PARAM_VALS"
        ],
        "default": "INCLUDE_FIELD_DERIVED_INSTANCE_PARAM_VALS"
      },
      "rangesTimestampRange": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time",
            "description": "Lower end of the range. The range is inclusive of its lower end.",
            "x-example-override": "2024-01-01T01:00:00.00Z"
          },
          "to": {
            "type": "string",
            "format": "date-time",
            "description": "Upper end of the range. The range is exclusive of its upper end.",
            "x-example-override": "2024-01-01T01:12:00.00Z"
          }
        },
        "description": "Describes a half-open range of timestamps."
      },
      "v1accountingTside": {
        "type": "string",
        "enum": [
          "TSIDE_UNKNOWN",
          "TSIDE_ASSET",
          "TSIDE_LIABILITY"
        ],
        "default": "TSIDE_UNKNOWN",
        "description": "The side of the balance sheet where an account balance is counted. Determines the sign with which a credit/debit posting affects a balance.",
        "x-enum-value-descriptions": {
          "TSIDE_ASSET": "Debit postings increase balances for asset accounts.",
          "TSIDE_LIABILITY": "Credit postings increase balances for liability accounts.",
          "TSIDE_UNKNOWN": "Default Value, invalid."
        }
      },
      "v1accountsAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for an account. Optional for create requests.\n\nMax length: 36 characters."
          },
          "name": {
            "type": "string",
            "description": "The account name."
          },
          "product_id": {
            "type": "string",
            "description": "The ID of the product the account is associated with. Can be obtained using the /v1/products endpoint. Required for create requests if `product_version_id` is not provided."
          },
          "product_version_id": {
            "type": "string",
            "description": "The ID of the product version matching the product ID. Required for create requests if `product_id` is not provided. Product Versions that use Expected Parameter syntax are not supported; /v2/accounts must be used instead."
          },
          "permitted_denominations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of denominations accessible from within the Smart Contract:<br><br> - If the Product Version specifies supported denominations, then this set must be a subset of those (if none are specified here then the field will be set to the Product Version's supported denominations).<br> - If the Product Version does not specify denominations, then it will be set to the permitted_denominations defined in values.yaml<br><br> The permitted_denominations field on the account resource is not used when validating incoming posting instructions' denominations. To validate that the denominations used by incoming posting instructions are in this list, the check must be implemented in the pre_posting_hook of the Smart Contract of the customer account that the posting instruction is targeting. This field cannot be updated."
          },
          "status": {
            "$ref": "#/components/schemas/v1accounts_commonAccountStatus",
            "description": "The status of the account. Optional for creation. Valid updates are from ACCOUNT_STATUS_PENDING to ACCOUNT_STATUS_OPEN or ACCOUNT_STATUS_CANCELLED, ACCOUNT_STATUS_OPEN to ACCOUNT_STATUS_PENDING_CLOSURE or ACCOUNT_STATUS_CLOSED, ACCOUNT_STATUS_PENDING_CLOSURE to ACCOUNT_STATUS_CLOSED. Updating the status to ACCOUNT_STATUS_OPEN will trigger the creation of an account update with an `activation_update` field and run the contract activation code. Updating the status to ACCOUNT_STATUS_PENDING_CLOSURE will trigger the creation of an account update with a closure_update field and run the contract close code. Accounts with the status ACCOUNT_STATUS_PENDING_CLOSURE can only be updated to ACCOUNT_STATUS_CLOSED. Accounts can only be updated to ACCOUNT_STATUS_CLOSED once the `closure_update` account update had the status ACCOUNT_UPDATE_STATUS_COMPLETED and the account has a zero balance. The account status can be updated directly to CLOSED from OPEN if the closing timestamp is provided and is also updated in the same call."
          },
          "opening_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the account was opened, in UTC. Optional for create. Formatted as an RFC3339 timestamp . If supplied during account creation, the account must be created with status ACCOUNT_STATUS_OPEN and the opening_timestamp value must not be a time in the future."
          },
          "closing_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the account was closed, in UTC. Can be updated to a time in the past directly if the account status is updated to CLOSED in the same call. The account status must be OPEN or PENDING_CLOSURE to update the closing timestamp. Formatted as an RFC3339 timestamp."
          },
          "stakeholder_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The customer IDs that can access the account. Required for create requests."
          },
          "instance_param_vals": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The instance-level parameter name(s) and value(s) for the associated product, defined in the account's Smart Contract code. Any `default_value` specified in the Smart Contract is not used on Account creation requests; it is only used for Account conversions performed via `v1/account-migrations`. Optional for create requests."
          },
          "derived_instance_param_vals": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The derived instance-level parameters for the associated product that have been defined in the account's Smart Contract code.",
            "x-output-only": true
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map of unstructured fields that hold instance-specific account details, for example, the source of funds. Optional for create requests.<br> <br>The details must not include:<br> - Any image data, including any KYC collateral such as passport, licence or other images. These must be stored in a separate repository outside of Vault.<br> - Any data that is classified as PII data.<br> The details cannot be utilised by Smart Contracts to drive any type of product behaviour.<br><br> Max size: 1MB (but it is strongly recommended to keep below this size)."
          },
          "accounting": {
            "$ref": "#/components/schemas/v1accounts_commonAccounting",
            "description": "The accounting data that Vault supports as first-class fields."
          }
        }
      },
      "v1accountsAccountMigration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the account migration. Optional."
          },
          "status": {
            "$ref": "#/components/schemas/v1accountsAccountMigrationStatus",
            "description": "The status of account migration."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the account migration was created, in UTC. Formatted as an RFC3339 timestamp."
          },
          "last_status_update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the last update was performed, in UTC. Formatted as an RFC3339 timestamp."
          },
          "product_version_migration": {
            "$ref": "#/components/schemas/v1accountsProductVersionMigration",
            "required": true
          }
        },
        "description": "Representation of an account migration object. Account migrations are used for the bulk migration of accounts from specified product version IDs to one final specified product version ID."
      },
      "v1accountsAccountMigrationStatus": {
        "type": "string",
        "enum": [
          "ACCOUNT_MIGRATION_STATUS_UNKNOWN",
          "ACCOUNT_MIGRATION_STATUS_PENDING_EXECUTION",
          "ACCOUNT_MIGRATION_STATUS_PAUSED",
          "ACCOUNT_MIGRATION_STATUS_COMPLETED"
        ],
        "default": "ACCOUNT_MIGRATION_STATUS_UNKNOWN",
        "description": "The status of the account migration.",
        "x-enum-value-descriptions": {
          "ACCOUNT_MIGRATION_STATUS_COMPLETED": "Indicates that the account migration has been completed. This status implies that all of the requested Account Updates have been created and processed in Vault; it does not claim that all Updates have been successful.",
          "ACCOUNT_MIGRATION_STATUS_PAUSED": "Indicates that the account migration has been paused.",
          "ACCOUNT_MIGRATION_STATUS_PENDING_EXECUTION": "Indicates that the account migration is in progress.",
          "ACCOUNT_MIGRATION_STATUS_UNKNOWN": "Default value."
        }
      },
      "v1accountsAccountScheduleAssoc": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the Account Schedule association."
          },
          "account_id": {
            "type": "string",
            "description": "The ID of the account."
          },
          "schedule_id": {
            "type": "string",
            "description": "The Schedule ID associated with the account."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the Schedule was created, in UTC. Formatted as an RFC3339 timestamp."
          }
        }
      },
      "v1accountsAccountUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the account update. Optional."
          },
          "account_id": {
            "type": "string",
            "description": "The Account ID this update applies to. Required for create requests."
          },
          "status": {
            "$ref": "#/components/schemas/v1accountsAccountUpdateStatus",
            "description": "The status of the account update. This can be used to track the progress of the update.",
            "x-output-only": true
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the account update was created, in UTC. Formatted as an RFC3339 timestamp."
          },
          "last_status_update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the last update was performed, in UTC. Formatted as an RFC3339 timestamp."
          },
          "account_update_batch_id": {
            "type": "string",
            "description": "The ID of the AccountUpdateBatch if the AccountUpdate was created as part of a batch."
          },
          "failure_reason": {
            "type": "string",
            "description": "The reason an account update was not completed successfully. This will only be populated if the account update status is either ACCOUNT_UPDATE_STATUS_REJECTED or ACCOUNT_UPDATE_STATUS_ERRORED.",
            "x-output-only": true
          },
          "instance_param_vals_update": {
            "$ref": "#/components/schemas/v1accountsInstanceParamValsUpdate",
            "required": false
          },
          "product_version_update": {
            "$ref": "#/components/schemas/v1accountsProductVersionUpdate",
            "required": false
          },
          "activation_update": {
            "$ref": "#/components/schemas/core_apiv1accountsActivationUpdate",
            "required": false
          },
          "closure_update": {
            "$ref": "#/components/schemas/core_apiv1accountsClosureUpdate",
            "required": false
          }
        },
        "description": "Representation of an account update object. Account updates are used to facilitate various account mutations. Each account update is linked to one account ID and can be created to update the instance parameter values or the product version of an account. Updating an account status from ACCOUNT_STATUS_PENDING to ACCOUNT_STATUS_OPEN, or from ACCOUNT_STATUS_OPEN to ACCOUNT_STATUS_CLOSED will implicitly create account updates. Account Updates are executed serially in order of creation. The status of an account update indicates whether the asynchronous execution of the account update was successful or not."
      },
      "v1accountsAccountUpdateBatch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the account update batch. Optional."
          },
          "account_updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1accountsAccountUpdate"
            },
            "description": "The AccountUpdates that will be created as part of this batch. The maximum number of AccountUpdates per batch is 50."
          },
          "status": {
            "$ref": "#/components/schemas/v1accountsAccountUpdateBatchStatus",
            "description": "The status of AccountUpdateBatch. This is inferred from the status of AccountUpdates."
          },
          "account_migration_id": {
            "type": "string",
            "description": "The ID of the AccountMigration if the AccountUpdateBatch was created as part of a migration."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when this AccountUpdateBatch was created in UTC. Formatted as an RFC3339 timestamp."
          }
        }
      },
      "v1accountsAccountUpdateBatchCreateOptions": {
        "type": "object",
        "properties": {
          "invalid_account_update_handling_type": {
            "$ref": "#/components/schemas/v1accountsInvalidAccountUpdateHandlingType",
            "description": "Determines how invalid updates in the batch are handled."
          }
        }
      },
      "v1accountsAccountUpdateBatchStatus": {
        "type": "string",
        "enum": [
          "ACCOUNT_UPDATE_BATCH_STATUS_UNKNOWN",
          "ACCOUNT_UPDATE_BATCH_STATUS_PENDING_EXECUTION",
          "ACCOUNT_UPDATE_BATCH_STATUS_COMPLETED"
        ],
        "default": "ACCOUNT_UPDATE_BATCH_STATUS_UNKNOWN",
        "description": "The status of the account update batch.",
        "x-enum-value-descriptions": {
          "ACCOUNT_UPDATE_BATCH_STATUS_COMPLETED": "Indicates that none of the  AccountUpdates in the AccountUpdateBatch are still pending execution i.e all of account updates in the account update batch have the status ACCOUNT_UPDATE_STATUS_COMPLETED, ACCOUNT_UPDATE_STATUS_REJECTED or ACCOUNT_UPDATE_STATUS_ERRORED.",
          "ACCOUNT_UPDATE_BATCH_STATUS_PENDING_EXECUTION": "The AccountUpdateBatch is in progress.",
          "ACCOUNT_UPDATE_BATCH_STATUS_UNKNOWN": "The default value."
        }
      },
      "v1accountsAccountUpdateStatus": {
        "type": "string",
        "enum": [
          "ACCOUNT_UPDATE_STATUS_UNKNOWN",
          "ACCOUNT_UPDATE_STATUS_PENDING_EXECUTION",
          "ACCOUNT_UPDATE_STATUS_COMPLETED",
          "ACCOUNT_UPDATE_STATUS_REJECTED",
          "ACCOUNT_UPDATE_STATUS_ERRORED"
        ],
        "default": "ACCOUNT_UPDATE_STATUS_UNKNOWN",
        "description": "The status of the account update.",
        "x-enum-value-descriptions": {
          "ACCOUNT_UPDATE_STATUS_COMPLETED": "The AccountUpdate was successfully executed.",
          "ACCOUNT_UPDATE_STATUS_ERRORED": "The AccountUpdate errored.",
          "ACCOUNT_UPDATE_STATUS_PENDING_EXECUTION": "The AccountUpdate hasn't been picked up from the queue or is in progress.",
          "ACCOUNT_UPDATE_STATUS_REJECTED": "The AccountUpdate failed validation of a constraint in the async pipeline.",
          "ACCOUNT_UPDATE_STATUS_UNKNOWN": "Default value."
        }
      },
      "v1accountsActivationUpdate": {
        "type": "object",
        "description": "An ActivationUpdate is automatically queued when updating an account status from `ACCOUNT_STATUS_PENDING` to `ACCOUNT_STATUS_OPEN`. An ActivationUpdate can also be retried if the account status is `ACCOUNT_STATUS_OPEN` and the Account has no other ActivationUpdates with status `ACCOUNT_UPDATE_STATUS_PENDING_EXECUTION` or `ACCOUNT_UPDATE_STATUS_COMPLETED`. This account update triggers the product activation code and sets up custom schedules."
      },
      "v1accountsBatchGetAccountMigrationsResponse": {
        "type": "object",
        "properties": {
          "account_migrations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1accountsAccountMigration"
            },
            "description": "Map of account migration IDs to their value."
          }
        }
      },
      "v1accountsBatchGetAccountUpdateBatchesResponse": {
        "type": "object",
        "properties": {
          "account_update_batches": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1accountsAccountUpdateBatch"
            },
            "description": "A map of the account update batch ID to the account update batch."
          }
        }
      },
      "v1accountsBatchGetAccountUpdatesResponse": {
        "type": "object",
        "properties": {
          "account_updates": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1accountsAccountUpdate"
            },
            "description": "A map of the account update ID to the account update."
          }
        }
      },
      "v1accountsClosureUpdate": {
        "type": "object",
        "description": "A ClosureUpdate is automatically queued when updating an account status from ACCOUNT_STATUS_OPEN to ACCOUNT_STATUS_PENDING_CLOSURE. A ClosureUpdate can also be retried if the account status is ACCOUNT_STATUS_PENDING_CLOSURE. This account update triggers the product close code, but it does not disable schedules."
      },
      "v1accountsCreateAccountMigrationRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters."
          },
          "account_migration": {
            "$ref": "#/components/schemas/v1accountsAccountMigration",
            "description": "The account migration to be created. Required.",
            "x-excluded-fields": [
              "status",
              "create_timestamp",
              "last_status_update_timestamp"
            ]
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1accountsCreateAccountRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters."
          },
          "account": {
            "$ref": "#/components/schemas/v1accountsAccount",
            "description": "The account object to be created. Required. If a product version is provided that makes use of contract modules, each named contract module must have a corresponding smart contract module versions link.",
            "x-excluded-fields": [
              "name",
              "closing_timestamp",
              "derived_instance_param_vals",
              "accounting"
            ]
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1accountsCreateAccountUpdateBatchRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent. Required.\n\nRequired.\nMax length: 512 characters."
          },
          "account_update_batch": {
            "$ref": "#/components/schemas/v1accountsAccountUpdateBatch",
            "description": "The account update batch to create. Required.",
            "x-excluded-fields": [
              "status",
              "account_migration_id",
              "create_timestamp"
            ]
          },
          "create_options": {
            "$ref": "#/components/schemas/v1accountsAccountUpdateBatchCreateOptions",
            "description": "Options for the creation of the account update batch.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 2
              },
              "changeType": "ADD_FIELD",
              "description": "Allows creation options for account update batches."
            }
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1accountsCreateAccountUpdateRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent. Required.\n\nRequired.\nMax length: 512 characters."
          },
          "account_update": {
            "$ref": "#/components/schemas/v1accountsAccountUpdate",
            "description": "The account update to create. Required.",
            "x-excluded-fields": [
              "status",
              "create_timestamp",
              "last_status_update_timestamp",
              "account_update_batch_id",
              "failure_reason"
            ]
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1accountsInstanceParamValsUpdate": {
        "type": "object",
        "properties": {
          "instance_param_vals": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The new instance parameter values that are to be applied to the account. The parameters must be non-derived instance-level parameters that have been defined in the account's Smart Contract code.<br><br> Note: The pre/post_parameter_change hooks are only executed when instance-level parameters are updated."
          }
        }
      },
      "v1accountsInvalidAccountUpdateHandlingType": {
        "type": "string",
        "enum": [
          "INVALID_ACCOUNT_UPDATE_HANDLING_TYPE_FAIL_BATCH",
          "INVALID_ACCOUNT_UPDATE_HANDLING_TYPE_FAIL_INVALID_UPDATES_ONLY",
          "INVALID_ACCOUNT_UPDATE_HANDLING_TYPE_IGNORE_INVALID_UPDATES"
        ],
        "default": "INVALID_ACCOUNT_UPDATE_HANDLING_TYPE_FAIL_BATCH",
        "x-enum-value-descriptions": {
          "INVALID_ACCOUNT_UPDATE_HANDLING_TYPE_FAIL_BATCH": "Default value. Returns an error if any update is invalid.",
          "INVALID_ACCOUNT_UPDATE_HANDLING_TYPE_FAIL_INVALID_UPDATES_ONLY": "Invalid updates are created with REJECTED status.",
          "INVALID_ACCOUNT_UPDATE_HANDLING_TYPE_IGNORE_INVALID_UPDATES": "Invalid updates are ignored."
        }
      },
      "v1accountsListAccountMigrationsResponse": {
        "type": "object",
        "properties": {
          "account_migrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1accountsAccountMigration"
            },
            "description": "A list of matching account migrations, ordered by ascending `create_timestamp`."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1accountsListAccountParamTimeseriesResponse": {
        "type": "object",
        "properties": {
          "account_param_timeseries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1accountsParameterTimeseries"
            },
            "description": "The account parameter timeseries retrieved for the specified account ID. The order of the elements is arbitrary and is not guaranteed to remain the same."
          },
          "product_version_param_timeseries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1accountsParameterTimeseries"
            },
            "description": "The retrieved product version parameter timeseries for the specified account ID. The order of the elements is arbitrary and is not guaranteed to remain the same."
          }
        }
      },
      "v1accountsListAccountScheduleAssocsResponse": {
        "type": "object",
        "properties": {
          "account_schedule_assocs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1accountsAccountScheduleAssoc"
            },
            "description": "A list of matching Account Schedule associations, ordered by ascending `create_timestamp`. In cases of matching timestamps, ordering is by ascending `id`. Note: Account Schedule Assoc is an Association resource where each Assoc holds a reference to an Account and a Schedule related to that Account. This will include Associations to previous Product Versions and disabled Schedules."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1accountsListAccountUpdateBatchesResponse": {
        "type": "object",
        "properties": {
          "account_update_batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1accountsAccountUpdateBatch"
            },
            "description": "A list of matching account update batches, ordered by descending `create_timestamp`."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1accountsListAccountUpdatesResponse": {
        "type": "object",
        "properties": {
          "account_updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1accountsAccountUpdate"
            },
            "description": "A list of matching account updates, ordered by ascending `create_timestamp`."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1accountsListAccountsResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1accountsAccount"
            },
            "description": "A list of matching accounts, ordered by ascending `id`."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1accountsParamValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The value of a parameter."
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the parameter value is effective from, in UTC. Formatted as an RFC3339 timestamp."
          }
        }
      },
      "v1accountsParameterTimeseries": {
        "type": "object",
        "properties": {
          "param_name": {
            "type": "string",
            "description": "The parameter the value changes apply to."
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1accountsParamValue"
            },
            "description": "The values of the parameter and the timestamp indicating when the parameter values became active, ordered by ascending `effective_timestamp`."
          }
        }
      },
      "v1accountsProductVersionMigration": {
        "type": "object",
        "properties": {
          "from_product_version_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The product version IDs of the accounts that are to be migrated."
          },
          "to_product_version_id": {
            "type": "string",
            "description": "The product version ID that accounts will be migrated to. For migrations to product versions that make use of contract modules, each named contract module in the target product version must have a corresponding smart contract module versions link. The product behind this product version ID must have the same tside as the products the accounts are to be migrated from."
          },
          "schedule_migration_type": {
            "$ref": "#/components/schemas/v1accountsScheduleMigrationType",
            "title": "Specifies how existing schedules should be migrated.<br><br> Note: This field has no effect on migrations to a product version on Contracts Language API version 4.<br> [See Account migrations.](/reference/accounts/overview/#account_migrations)",
            "x-release-info": {
              "noticeVersion": {
                "major": 4,
                "minor": 6
              },
              "releaseVersion": {
                "major": 6
              },
              "changeType": "REMOVE_FIELD",
              "description": "This field is not used on updates to Contracts Language API version 4 and will be removed alongside Contracts Language API version 3."
            }
          }
        },
        "title": "Holds the information required to execute a product version migration. To be part of a product version migration an account needs to be in one of the following statuses: ACCOUNT_STATUS_PENDING, ACCOUNT_STATUS_OPEN, ACCOUNT_STATUS_PENDING_CLOSURE"
      },
      "v1accountsProductVersionUpdate": {
        "type": "object",
        "properties": {
          "product_version_id": {
            "type": "string",
            "title": "The product version ID of the product that the account is to be updated to. The product version ID can be for any type of product provided it supports all the denominations and has the same tside as the current product. For updates to product versions that make use of contract modules, each named contract module in the target product version must have a corresponding Smart Contract module versions link. <br><br>_Note:<br>- Updating an Account to a new product version will mean that the Account can only retrieve the Template Parameter history of the new product version<br>- Product Versions that use Expected Parameter syntax are not supported; /v2/accounts must be used instead._"
          },
          "instance_param_vals_to_add": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "A map from the new instance parameter name to its value, which will get added when updating the product version. All of the parameters provided must be new instance parameters defined in the product version.<br> *Note: Any `default_value` for Instance Parameters specified in the Smart Contract will only be used in Account conversions performed via `v1/account-migrations`, and only for Instance Parameters introduced in the new Smart Contract version.*",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 10
              },
              "changeType": "ADD_FIELD",
              "description": "Allows instance parameter addition during a product version update."
            }
          },
          "schedule_migration_type": {
            "$ref": "#/components/schemas/core_apiv1accountsScheduleMigrationType",
            "title": "Specifies how existing schedules should be migrated.<br><br> Note: This field has no effect on migrations to a product version on Contracts Language API version 4.<br> [See Account migrations.](/reference/accounts/overview/#account_migrations)",
            "x-release-info": {
              "noticeVersion": {
                "major": 4,
                "minor": 6
              },
              "releaseVersion": {
                "major": 6
              },
              "changeType": "REMOVE_FIELD",
              "description": "This field is not used on updates to Contracts Language API version 4 and will be removed alongside Contracts Language API version 3."
            }
          }
        }
      },
      "v1accountsScheduleMigrationType": {
        "type": "string",
        "enum": [
          "SCHEDULE_MIGRATION_TYPE_RECREATE_ALL_SCHEDULES_AND_GROUPS",
          "SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES"
        ],
        "default": "SCHEDULE_MIGRATION_TYPE_RECREATE_ALL_SCHEDULES_AND_GROUPS",
        "x-enum-value-descriptions": {
          "SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES": "When updating the product version of an account, existing schedules are preserved if either: - They are not part of a group and a schedule of the same event type is defined in the new Smart Contract code; or<br> - They are part of a group and a group of the same name, size and order is defined in the new Smart Contract code. New schedules are only created if they are defined in the new Smart Contract code.",
          "SCHEDULE_MIGRATION_TYPE_RECREATE_ALL_SCHEDULES_AND_GROUPS": "When updating the product version of an account, all existing schedules will be disabled. New schedules will then be created according to the Smart Contract code of the new product version. Any updates previously made to existing schedules will not be preserved. This is the default behaviour."
        }
      },
      "v1accountsUpdateAccountDetailsRequest": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The account that is to be updated. Required."
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters."
          },
          "items_to_add": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map of key to value to add to the account `details` field. If the key already exists, the value will be updated. If the key already exists and the value is set to empty, the key will be removed. Optional."
          },
          "items_to_remove": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of the keys that are to be removed from the account details; removing the key also removes its value. Optional."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1accountsUpdateAccountMigrationRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters."
          },
          "account_migration": {
            "$ref": "#/components/schemas/v1accountsAccountMigration",
            "description": "The account migration that is to be updated. Required.",
            "x-excluded-fields": [
              "id",
              "create_timestamp",
              "last_status_update_timestamp",
              "product_version_migration"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "Field mask used to indicate which fields of the resource are to be updated. Required. Valid update mask is status which updates an account migration status from PENDING_EXECUTION to PAUSED and back."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1accountsUpdateAccountRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters."
          },
          "account": {
            "$ref": "#/components/schemas/v1accountsAccount",
            "description": "The account object to be updated. Required.",
            "x-excluded-fields": [
              "name",
              "product_id",
              "product_version_id",
              "permitted_denominations",
              "opening_timestamp",
              "instance_param_vals",
              "derived_instance_param_vals",
              "details",
              "accounting"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "Field mask that indicates which fields of the resource are to be updated. Required. Valid update masks are: stakeholder_ids which updates an account's stakeholders with the new stakeholder IDs. status which updates the status of an account from PENDING to OPEN or CANCELLED status, from OPEN to PENDING_CLOSURE and from PENDING_CLOSURE or OPEN to CLOSED. The status cannot be updated at the same time as any other fields except the closing timestamp. The closing timestamp can only be updated when updating the status to CLOSED from PENDING_CLOSURE or OPEN."
          },
          "overrides": {
            "$ref": "#/components/schemas/v1commonOverrides",
            "description": "This lets the caller override PREVENT_CLOSURE restrictions on an account; no other restriction types can be overridden."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1accounts_commonAccountStatus": {
        "type": "string",
        "enum": [
          "ACCOUNT_STATUS_UNKNOWN",
          "ACCOUNT_STATUS_OPEN",
          "ACCOUNT_STATUS_CLOSED",
          "ACCOUNT_STATUS_CANCELLED",
          "ACCOUNT_STATUS_PENDING_CLOSURE",
          "ACCOUNT_STATUS_PENDING"
        ],
        "default": "ACCOUNT_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "ACCOUNT_STATUS_CANCELLED": "Account was requested but was never approved, it is now permanently closed.",
          "ACCOUNT_STATUS_CLOSED": "Account was previously open but is now permanently closed.",
          "ACCOUNT_STATUS_OPEN": "Account has been approved and transactions are allowed.",
          "ACCOUNT_STATUS_PENDING": "Account and contract record has been created, it is waiting for another call to be made open.",
          "ACCOUNT_STATUS_PENDING_CLOSURE": "Account was requested closure but contract and account closure are not finished.",
          "ACCOUNT_STATUS_UNKNOWN": "Default value."
        }
      },
      "v1accounts_commonAccounting": {
        "type": "object",
        "properties": {
          "tside": {
            "$ref": "#/components/schemas/v1accountingTside",
            "description": "The side of the balance sheet where the account balance is counted. Can be optionally provided when creating Internal Accounts. Has no effect if provided when creating Customer Accounts."
          }
        }
      },
      "v1commonOverrideRestrictions": {
        "type": "object",
        "properties": {
          "all": {
            "type": "boolean",
            "description": "The caller can override all restriction checks for a call by setting this field to true."
          },
          "restriction_set_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The caller can override restrictions based on restriction sets by passing the restriction set IDs here."
          },
          "restriction_set_definition_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The caller can override restrictions based on restriction set definitions by passing the restriction set definition IDs here."
          },
          "restriction_set_definition_version_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The caller can override restrictions based on restriction set definition versions by passing the restriction set definition version IDs here."
          }
        },
        "description": "OverrideRestrictions lets a caller override some or all restriction checks on a call by setting the relevant field or fields."
      },
      "v1commonOverrides": {
        "type": "object",
        "properties": {
          "override_restrictions": {
            "$ref": "#/components/schemas/v1commonOverrideRestrictions",
            "description": "Restrictions to override."
          }
        },
        "description": "Overrides are used to override certain checks for a request."
      },
      "BatchGetAdjustmentsNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "BulkRetryAdjustmentsFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureBulkRetryAdjustmentsFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "BulkRetryAdjustmentsNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CoreAPIAdjustmentsINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "GlobalErrorsDEADLINE_EXCEEDED_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "DEADLINE_EXCEEDED"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "GlobalErrorsINTERNAL_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INTERNAL"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "GlobalErrorsRESOURCE_EXHAUSTED_2": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "RESOURCE_EXHAUSTED"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "GlobalErrorsUNAVAILABLE_3": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "UNAVAILABLE"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "GlobalErrorsUNKNOWN_4": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "UNKNOWN"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "PublicAPIErrorsPERMISSION_DENIED_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "PERMISSION_DENIED"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "PublicAPIErrorsUNAUTHENTICATED_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "UNAUTHENTICATED"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "api_error_codeCode": {
        "type": "string",
        "enum": [
          "OK",
          "CANCELLED",
          "UNKNOWN",
          "INVALID_ARGUMENT",
          "DEADLINE_EXCEEDED",
          "NOT_FOUND",
          "ALREADY_EXISTS",
          "PERMISSION_DENIED",
          "UNAUTHENTICATED",
          "RESOURCE_EXHAUSTED",
          "FAILED_PRECONDITION",
          "ABORTED",
          "OUT_OF_RANGE",
          "UNIMPLEMENTED",
          "INTERNAL",
          "UNAVAILABLE",
          "DATA_LOSS"
        ],
        "default": "OK",
        "title": "Error Codes",
        "x-enum-value-descriptions": {
          "ABORTED": "The operation was aborted, typically due to a concurrency issue.",
          "ALREADY_EXISTS": "The resource was request to create already exists.",
          "CANCELLED": "The operation was cancelled, typically by the caller.",
          "DATA_LOSS": "Unrecoverable data loss or corruption.",
          "DEADLINE_EXCEEDED": "The deadline expired before the operation could complete.",
          "FAILED_PRECONDITION": "The operation was rejected because the system is not in a state required for the operation's execution.",
          "INTERNAL": "Internal error. An unexpected error has occurred within the service.",
          "INVALID_ARGUMENT": "Invalid arguments were present in the request.",
          "NOT_FOUND": "The requested resource could not be found.",
          "OK": "Not an error; returned on success",
          "OUT_OF_RANGE": "The operation was attempted past the valid range.",
          "PERMISSION_DENIED": "The caller does not have permission to execute the specified operation.",
          "RESOURCE_EXHAUSTED": "Some resource has been exhausted, perhaps a per-user quota.",
          "UNAUTHENTICATED": "The request does not have valid authentication credentials for the operation.",
          "UNAVAILABLE": "The service is currently unavailable.  This is most likely a transient condition, which can be corrected by retrying with a backoff.",
          "UNIMPLEMENTED": "The operation is not implemented or is not supported/enabled in this service.",
          "UNKNOWN": "Unknown error. The error could not be classified."
        }
      },
      "errorsBadRequest": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.BadRequest"
          },
          "field_violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsBadRequestFieldViolation"
            },
            "description": "Describes all violations in a request."
          }
        },
        "description": "Describes violations in a client request. This error type pertains to problems that can only be fixed by changing the request."
      },
      "errorsBadRequestFieldViolation": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string",
            "description": "A path leading to a field in the request body. Formatted in JSONPath, so that a 'resource' with field 'x' would return 'resource.x'."
          },
          "violation_type": {
            "$ref": "#/components/schemas/errorsBadRequestViolationType",
            "description": "Type of violation."
          },
          "description": {
            "type": "string",
            "description": "A description of why the request field is invalid."
          }
        },
        "description": "A message type used to describe a single bad request field."
      },
      "errorsBadRequestViolationType": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "INVALID_FORMAT",
          "INVALID_VALUE",
          "ABOVE_MAX_VALUE",
          "BELOW_MIN_VALUE",
          "ABOVE_MAX_LENGTH",
          "BELOW_MIN_LENGTH",
          "PATTERN_MISMATCH",
          "PREFIX_MISMATCH",
          "SUFFIX_MISMATCH",
          "REQUIRED_FIELD",
          "DUPLICATE_VALUE"
        ],
        "default": "UNKNOWN",
        "title": "A global list of field violation types",
        "x-enum-value-descriptions": {
          "ABOVE_MAX_LENGTH": "Length is larger than a maximum specified size.",
          "ABOVE_MAX_VALUE": "Field exceeds a maximum specified value.",
          "BELOW_MIN_LENGTH": "Length is smaller than a minimum specified size.",
          "BELOW_MIN_VALUE": "Field is smaller than a minimum specified value.",
          "DUPLICATE_VALUE": "All elements in this field must be unique but a duplicate value has been provided. Applies to repeated scalar fields.",
          "INVALID_FORMAT": "Field is not a valid format e.g. email address, UUID, IP Address, URI etc.",
          "INVALID_VALUE": "Indicates that a provided field is not equal to one of the specified values.",
          "PATTERN_MISMATCH": "Field value does not match the specified regex pattern.",
          "PREFIX_MISMATCH": "Field value does not match the specified prefix.",
          "REQUIRED_FIELD": "Field value was not populated but is required to be.",
          "SUFFIX_MISMATCH": "Field value does not match the specified suffix.",
          "UNKNOWN": "Default value."
        }
      },
      "errorsError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The main error message (mandatory) to be used solely for human readers and logging. Must not contain PII. Must not be used for programmatic interpretation on the client-side."
          },
          "code": {
            "$ref": "#/components/schemas/api_error_codeCode",
            "description": "Product level error code."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/googleprotobufAny"
            },
            "description": "An optional list of arbitrary payload type messages that carry the error details."
          }
        },
        "description": "Error represents a wire encodable format of the API Error. This object is typically attached onto the 'details' field of the gRPC status error via interceptors. However, it may also be directly referenced by API response protos e.g. when partial failure mechanisms are needed."
      },
      "errorsPreconditionFailure": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolation"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureBulkRetryAdjustmentsFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationBulkRetryAdjustmentsFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureViolation": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\"."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error."
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationBulkRetryAdjustmentsFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "ADJUSTMENT_IN_PROGRESS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"adjustment.state\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "adjustment.state",
                "description": "The state of the adjustment."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsResourceInfo": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.ResourceInfo"
          },
          "resource_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The identifier of the resources being accessed."
          }
        },
        "description": "Describes the resources being accessed."
      },
      "googleprotobufAny": {
        "type": "object",
        "properties": {
          "type_url": {
            "type": "string",
            "description": "A URL/resource name that uniquely identifies the type of the serialized protocol buffer message. This string must contain at least one \"/\" character. The last segment of the URL's path must represent the fully qualified name of the type (as in `path/google.protobuf.Duration`). The name should be in a canonical form (e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they expect it to use in the context of Any. However, for URLs which use the scheme `http`, `https`, or no scheme, one can optionally set up a type server that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed. * An HTTP GET on the URL must yield a [google.protobuf.Type][]   value in binary format, or produce an error. * Applications are allowed to cache lookup results based on the   URL, or have them precompiled into a binary to avoid any   lookup. Therefore, binary compatibility needs to be preserved   on changes to types. (Use versioned type names to manage   breaking changes.)\n\nNote: this functionality is not currently available in the official protobuf release, and it is not used for type URLs beginning with type.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be used with implementation specific semantics."
          },
          "value": {
            "type": "string",
            "format": "byte",
            "description": "Must be a valid serialized protocol buffer of the above specified type."
          }
        },
        "description": "`Any` contains an arbitrary serialized protocol buffer message along with a URL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form of utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;     Any any;     any.PackFrom(foo);     ...     if (any.UnpackTo(&foo)) {       ...     }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;     Any any = Any.pack(foo);     ...     if (any.is(Foo.class)) {       foo = any.unpack(Foo.class);     }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)     any = Any()     any.Pack(foo)     ...     if any.Is(Foo.DESCRIPTOR):       any.Unpack(foo)       ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}      any, err := anypb.New(foo)      if err != nil {        ...      }      ...      foo := &pb.Foo{}      if err := any.UnmarshalTo(foo); err != nil {        ...      }\n\nThe pack methods provided by protobuf library will by default use 'type.googleapis.com/full.type.name' as the type URL and the unpack methods only use the fully qualified type name after the last '/' in the type URL, for example \"foo.bar.com/x/y.z\" will yield type name \"y.z\".\n\n\nJSON ==== The JSON representation of an `Any` value uses the regular representation of the deserialized, embedded message, with an additional field `@type` which contains the type URL. Example:\n\n    package google.profile;     message Person {       string first_name = 1;       string last_name = 2;     }\n\n    {       \"@type\": \"type.googleapis.com/google.profile.Person\",       \"firstName\": <string>,       \"lastName\": <string>     }\n\nIf the embedded message type is well-known and has a custom JSON representation, that representation will be embedded adding a field `value` which holds the custom JSON in addition to the `@type` field. Example (for message [google.protobuf.Duration][]):\n\n    {       \"@type\": \"type.googleapis.com/google.protobuf.Duration\",       \"value\": \"1.212s\"     }"
      },
      "v1adjustmentsAdjustment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "This is a UUID that uniquely identifies this Adjustment. It is randomly generated by Vault and any value provided in a creation request will be ignored."
          },
          "request_id": {
            "type": "string",
            "description": "The ID of the request which created this Adjustment resource."
          },
          "schedule_job_id": {
            "type": "string",
            "description": "The ID schedule job which created this Adjustment resource."
          },
          "resource_adjustment_count": {
            "type": "integer",
            "format": "int32",
            "description": "An incremental counter of Adjustments which relate to this resource."
          },
          "account_id": {
            "type": "string",
            "description": "The ID of the account being adjusted."
          },
          "status": {
            "$ref": "#/components/schemas/v1adjustmentsStatus",
            "description": "The status reflects how far through the process this Adjustment is, and whether it has failed due to an error, been discarded as unnecessary, or completed successfully."
          },
          "error": {
            "$ref": "#/components/schemas/errorsError",
            "description": "If the Adjustment is in a failed status, then this will be populated with an error describing why it failed."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which this Adjustment was created."
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of the most recent status update of this Adjustment."
          },
          "previous_watermark_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Monotonically increasing timestamps recording the adjusted timeline of the resource. Previous watermark indicates the lower bound of time a resource is adjusted for."
          },
          "timeline_start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The lower time boundary for which events related to this resource need to be fetched to calculate this Adjustment."
          },
          "timeline_end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The upper time boundary for which events related to this resource need to be fetched to calculate this Adjustment."
          },
          "correction_posting_instruction_batch_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the PIBs that were created as a result of this Adjustment."
          }
        }
      },
      "v1adjustmentsBatchGetAdjustmentsResponse": {
        "type": "object",
        "properties": {
          "adjustments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1adjustmentsAdjustment"
            },
            "description": "The retrieved Adjustments. This is a map of Adjustments keyed on ID."
          }
        }
      },
      "v1adjustmentsBulkRetryAdjustmentsResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/errorsError"
            },
            "description": "Any retry requests which could not be completed will have an error here against its request ID. If a request succeeded it will not be in this map."
          }
        }
      },
      "v1adjustmentsListAdjustmentsResponse": {
        "type": "object",
        "properties": {
          "adjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1adjustmentsAdjustment"
            },
            "description": "A list of matching Adjustments, sorted by create_timestamp descending, then by resource ID."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v1adjustmentsRetryAdjustmentRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID used to ensure this request is idempotent."
          },
          "id": {
            "type": "string",
            "description": "The ID of the adjustment."
          }
        }
      },
      "v1adjustmentsStatus": {
        "type": "string",
        "enum": [
          "STATUS_UNKNOWN",
          "STATUS_PENDING",
          "STATUS_RUNNING",
          "STATUS_COMPLETED",
          "STATUS_NO_ADJUSTMENT_REQUIRED",
          "STATUS_ERROR"
        ],
        "default": "STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "STATUS_COMPLETED": "The Adjustment has been applied successfully; terminal state.",
          "STATUS_ERROR": "The Adjustment has encountered an error.",
          "STATUS_NO_ADJUSTMENT_REQUIRED": "The Adjustment does not require calculation; terminal state.",
          "STATUS_PENDING": "The Adjustment is waiting to be processed by the compute layer.",
          "STATUS_RUNNING": "The Adjustment is being processed by the compute layer.",
          "STATUS_UNKNOWN": "This is a default value and will not appear in any responses."
        }
      },
      "CoreAPIAccountAttributesINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "ListAccountAttributeValuesFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureListAccountAttributeValuesFAILED_PRECONDITION_0",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "errorsPreconditionFailureListAccountAttributeValuesFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationListAccountAttributeValuesFAILED_PRECONDITION_0"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureViolationListAccountAttributeValuesFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "EXCEPTION_RAISED_BY_SMART_CONTRACT"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"exception_args\":\"value\",\"exception_type\":\"value\",\"smart_contract_version.id\":\"value\",\"stack_trace\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.id",
                "description": "The ID of the Account."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The ID of the Smart Contract version."
              },
              {
                "key": "exception_type",
                "description": "The Python type of the exception raised."
              },
              {
                "key": "exception_args",
                "description": "The arguments of the Exception object."
              },
              {
                "key": "stack_trace",
                "description": "The stack trace that describes the execution stack that led to the exception being raised."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "v1account_attributesAccountAttributeValue": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The ID of the Account for which this is an Attribute."
          },
          "attribute_name": {
            "type": "string",
            "description": "The name of the Attribute for which this is a calculated value."
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The effective time at which the Attribute value is calculated, in UTC. Formatted as an RFC3339 timestamp."
          },
          "value": {
            "$ref": "#/components/schemas/v1account_attributesAttributeValue",
            "description": "The value of the Account Attribute, which must match the Attribute data type defined in the Smart Contract."
          }
        }
      },
      "v1account_attributesAttributeValue": {
        "type": "object",
        "properties": {
          "string_value": {
            "$ref": "#/components/schemas/core_apiv1account_attributesStringValue",
            "required": false
          },
          "decimal_value": {
            "$ref": "#/components/schemas/v1account_attributesDecimalValue",
            "required": false
          },
          "date_time_value": {
            "$ref": "#/components/schemas/v1account_attributesDateTimeValue",
            "required": false
          }
        }
      },
      "v1account_attributesDateTimeValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "format": "date-time",
            "description": "The value of a date-time Attribute, in UTC. Formatted as an RFC3339 timestamp."
          }
        },
        "description": "DateTimeValue is a wrapper object, allowing for Optional[DateTime] declaration of the value, or absense of the value."
      },
      "v1account_attributesDecimalValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of the decimal attribute."
          }
        },
        "description": "DecimalValue is a wrapper object, allowing for Optional[Decimal] declaration of the primitive value, or absense of the primitive value."
      },
      "v1account_attributesListAccountAttributeValuesResponse": {
        "type": "object",
        "properties": {
          "account_attribute_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1account_attributesAccountAttributeValue"
            },
            "description": "The Account Attributes and their values matching the specified filtering options. Account Attributes are sorted by ascending `account_id`, `attribute_name`, `effective_timestamp`."
          },
          "next_page_token": {
            "type": "string",
            "description": "The page token which can be used to retrieve the next page of Account Attributes. If empty, the given page is the last page."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The page token which can be used to retrieve the previous page of Account Attributes. If empty, the given page is the first page."
          }
        }
      },
      "v1account_attributesStringValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of the string attribute."
          }
        },
        "description": "StringValue is a wrapper object, allowing for Optional[String] declaration of the primitive value, or absense of the primitive value."
      },
      "v1authBatchGetServiceAccountsResponse": {
        "type": "object",
        "properties": {
          "service_accounts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1authServiceAccount"
            },
            "description": "A map of requested IDs to their service accounts."
          }
        }
      },
      "v1authCreateServiceAccountRequest": {
        "type": "object",
        "properties": {
          "service_account": {
            "$ref": "#/components/schemas/v1authServiceAccount",
            "description": "The service account to be created. Only the service account name is required for service account creation.",
            "x-excluded-fields": [
              "id",
              "token",
              "status"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent. Retries work as normal but lead to new random tokens being generated.\n\nRequired.\nMax length: 256 characters."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1authListServiceAccountsResponse": {
        "type": "object",
        "properties": {
          "service_accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1authServiceAccount"
            },
            "description": "The list of service accounts which match the parameters of the request. Service accounts are ordered by ascending ID."
          },
          "next_page_token": {
            "type": "string",
            "description": "Pagination token. This can be used as the page_token in subsequent requests to retrieve the next page of results. The next_page_token is empty when the final page of results has been reached."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Pagination token. This can be used as the page_token in subsequent requests to retrieve the previous page of results. The previous_page_token is empty when the first page of results has been reached."
          }
        }
      },
      "v1authServiceAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique string ID for a service account. Output only."
          },
          "name": {
            "type": "string",
            "description": "The name of the service account. Must be unique for each service account. Required for service account creation."
          },
          "token": {
            "type": "string",
            "description": "A service account access token. Output only; only returned on service account creation and token refresh. The token will not expire."
          },
          "status": {
            "$ref": "#/components/schemas/v1authServiceAccountStatus",
            "description": "The status of the service account."
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The names of the endpoints this service account is permitted to access."
          }
        },
        "title": "Representation of a service account"
      },
      "v1authServiceAccountStatus": {
        "type": "string",
        "enum": [
          "SERVICE_ACCOUNT_STATUS_UNKNOWN",
          "SERVICE_ACCOUNT_STATUS_ACTIVE",
          "SERVICE_ACCOUNT_STATUS_INACTIVE",
          "SERVICE_ACCOUNT_STATUS_FROZEN"
        ],
        "default": "SERVICE_ACCOUNT_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "SERVICE_ACCOUNT_STATUS_ACTIVE": "The service account is active and can authenticate.",
          "SERVICE_ACCOUNT_STATUS_FROZEN": "The service account has been frozen and transactions are temporarily prohibited.",
          "SERVICE_ACCOUNT_STATUS_INACTIVE": "The service account has been deactivated and is no longer visible to users.",
          "SERVICE_ACCOUNT_STATUS_UNKNOWN": "The service account status is unknown."
        }
      },
      "v1authServiceAccountTokenUpdateOptions": {
        "type": "object",
        "properties": {
          "refresh_token": {
            "type": "boolean",
            "description": "Replaces the existing service account token with a new service account token. A service account token can only be refreshed for an active service account. Token refresh cannot be performed at the same time as a status change."
          }
        }
      },
      "v1authUpdateServiceAccountPermissionsRequest": {
        "type": "object",
        "properties": {
          "service_account_id": {
            "type": "string",
            "description": "The ID of the service account that is to be updated. Required."
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent. Required.\n\nRequired."
          },
          "items_to_add": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of items to be added to the list of service account permissions. Optional."
          },
          "items_to_remove": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of items to be removed from the list of service account permissions. Optional."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1authUpdateServiceAccountRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters."
          },
          "service_account": {
            "$ref": "#/components/schemas/v1authServiceAccount",
            "description": "The service_account to be updated. Required.",
            "x-excluded-fields": [
              "id",
              "token",
              "name",
              "permissions"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "A field mask used to indicate which fields on the resource are to be updated. Required if there are no token_update_options. Required for updating service account status. The service account status cannot be updated at the same time as a token refresh."
          },
          "token_update_options": {
            "$ref": "#/components/schemas/v1authServiceAccountTokenUpdateOptions",
            "description": "The type of update required for the service account token. Optional."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1authValidateTokenResponse": {
        "type": "object",
        "properties": {
          "is_valid": {
            "type": "boolean",
            "description": "Indicates if the token attached to the metadata is valid."
          }
        }
      },
      "posting_phasePostingPhase": {
        "type": "string",
        "enum": [
          "POSTING_PHASE_UNKNOWN",
          "POSTING_PHASE_PENDING_INCOMING",
          "POSTING_PHASE_PENDING_OUTGOING",
          "POSTING_PHASE_COMMITTED"
        ],
        "default": "POSTING_PHASE_UNKNOWN",
        "description": "* PostingPhase characterises the phase of a Posting.",
        "x-enum-value-descriptions": {
          "POSTING_PHASE_COMMITTED": "The posting is committed (hard posting).",
          "POSTING_PHASE_PENDING_INCOMING": "The posting is pending incoming (soft posting).",
          "POSTING_PHASE_PENDING_OUTGOING": "The posting is pending outgoing (soft posting).",
          "POSTING_PHASE_UNKNOWN": "The posting phase is not set which will result in a validation error."
        }
      },
      "v1balancesBalance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the balance. Output only.",
            "x-release-info": {
              "noticeVersion": {
                "major": 4,
                "minor": 7
              },
              "releaseVersion": {
                "major": 6
              },
              "changeType": "REMOVE_FIELD",
              "description": "Prior to V5.0, balance calculations were executed asynchronously and maintained in a time series after a posting was accepted. From Vault Core 5.0, balances will be calculated on request. This ensures that balances are always in sync with postings, and delivers significant performance improvements.\nBalance.id value will be unique but different from the value that would have been generated prior to 5.0 for the same balance."
            },
            "x-example-override": "b2d26233-9438-43b3-abe5-cda0db5dfcae"
          },
          "account_id": {
            "type": "string",
            "description": "The ID of the associated account.",
            "x-example-override": "bebbe4e5-fdcc-4247-a71d-8b02ba3d3b90"
          },
          "account_address": {
            "type": "string",
            "description": "The account address represents one partition of the total balances held on the account.",
            "x-example-override": "DEFAULT"
          },
          "phase": {
            "$ref": "#/components/schemas/posting_phasePostingPhase",
            "description": "The posting phase the balance applies to."
          },
          "asset": {
            "type": "string",
            "description": "The asset in which the balance is held.",
            "x-example-override": "COMMERCIAL_BANK_MONEY"
          },
          "denomination": {
            "type": "string",
            "description": "The denomination in which the balance is held for the given asset.",
            "x-example-override": "GBP"
          },
          "posting_instruction_batch_id": {
            "type": "string",
            "description": "The ID of the logical posting instruction batch which yielded this balance.",
            "x-example-override": "76c0ea2b-57df-4314-af28-63c3cf49d7da"
          },
          "value_time": {
            "type": "string",
            "format": "date-time",
            "description": "The value time corresponding to the balance change, in UTC. Formatted as an RFC3339 timestamp.",
            "x-example-override": "2020-01-13T19:13:23.898Z"
          },
          "amount": {
            "type": "string",
            "description": "The amount is the net value of the balance.",
            "x-example-override": "90.90"
          },
          "total_debit": {
            "type": "string",
            "description": "The total sum of debits.",
            "x-example-override": "132.22"
          },
          "total_credit": {
            "type": "string",
            "description": "The total sum of credits.",
            "x-example-override": "223.12"
          }
        }
      },
      "v1balancesListBalancesLiveResponse": {
        "type": "object",
        "properties": {
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1balancesBalance"
            },
            "description": "A list of matching balances."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results.",
            "x-example-override": "JSlaAnS"
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results.",
            "x-example-override": "ASDllspa"
          }
        }
      },
      "v1balancesListBalancesTimeRangeResponse": {
        "type": "object",
        "properties": {
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1balancesBalance"
            },
            "description": "A list of matching balances."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results.",
            "x-example-override": "gdeSSJDn"
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results.",
            "x-example-override": "sdSAksad"
          }
        }
      },
      "CoreAPICalendarINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "CoreAPICalendarNOT_FOUND_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CreateCalendarALREADY_EXISTS_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "ALREADY_EXISTS"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CreateCalendarEventALREADY_EXISTS_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "ALREADY_EXISTS"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CreateCalendarPeriodDescriptorALREADY_EXISTS_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "ALREADY_EXISTS"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "ListCalendarsUNIMPLEMENTED_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "UNIMPLEMENTED"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "boolean_filterNullableBooleanFilter": {
        "type": "string",
        "enum": [
          "BOTH",
          "ONLY_TRUE",
          "ONLY_FALSE"
        ],
        "default": "BOTH"
      },
      "calendarChangeCurrentCalendarPeriodRequestAction": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "HOLD",
          "ROLL"
        ],
        "default": "UNKNOWN"
      },
      "calendarListCalendarsRequestOrderBy": {
        "type": "string",
        "enum": [
          "ORDER_BY_CREATE_TIMESTAMP_ASC",
          "ORDER_BY_CREATE_TIMESTAMP_DESC"
        ],
        "default": "ORDER_BY_CREATE_TIMESTAMP_ASC"
      },
      "calendarNamePatternMatchMatchType": {
        "type": "string",
        "enum": [
          "MATCH_TYPE_UNKNOWN",
          "MATCH_TYPE_TEXT_REGEX",
          "MATCH_TYPE_TEXT_EXACT_CASE_SENSITIVE",
          "MATCH_TYPE_TEXT_EXACT_CASE_INSENSITIVE",
          "MATCH_TYPE_TEXT_SUBSTRING_CASE_SENSITIVE",
          "MATCH_TYPE_TEXT_SUBSTRING_CASE_INSENSITIVE",
          "MATCH_TYPE_TEXT_PREFIX_CASE_SENSITIVE",
          "MATCH_TYPE_TEXT_PREFIX_CASE_INSENSITIVE"
        ],
        "default": "MATCH_TYPE_UNKNOWN",
        "x-enum-value-descriptions": {
          "MATCH_TYPE_TEXT_EXACT_CASE_SENSITIVE": "issues."
        }
      },
      "v1calendarBatchGetCalendarEventsResponse": {
        "type": "object",
        "properties": {
          "calendar_events": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1calendarCalendarEvent"
            },
            "description": "Maps the Calendar Event IDs to the requested Calendar Events."
          }
        }
      },
      "v1calendarBookkeepingDate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Calendar to which the Bookkeeping Date belongs."
          },
          "date": {
            "type": "string",
            "description": "Specifies the date for the Bookkeeping Date. Must be in the ISO-8601 extended date format: YYYY-MM-DD, or empty. This date string would be used to annotate the next Calendar Period that will be emitted for the corresponding Calendar."
          }
        }
      },
      "v1calendarCalendar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Calendar ID can be specified by the user when creating the Calendar, otherwise it will be generated by the service. Must be unique."
          },
          "calendar_period_descriptor_id": {
            "type": "string",
            "description": "ID of the Calendar Period Descriptor associated with the Calendar.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 6
              },
              "changeType": "ADD_FIELD"
            }
          },
          "is_active": {
            "type": "boolean",
            "description": "Defaults to false. Note that when is_active is set to false, calendar periods (if a Calendar Period Descriptor has been assigned) will not be produced. When is_active is later set to true, Calendar Period production will resume."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Calendar was created, in UTC. Formatted as an RFC3339 timestamp. Cannot be specified by the user."
          },
          "display_name": {
            "type": "string",
            "description": "Human-readable name of the calendar. Optional.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 4
              },
              "changeType": "ADD_FIELD"
            }
          },
          "description": {
            "type": "string",
            "description": "Description of the calendar. Optional.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 4
              },
              "changeType": "ADD_FIELD"
            }
          }
        }
      },
      "v1calendarCalendarEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Calendar Event ID can be specified by the user when creating the Calendar Event, otherwise it will be generated by the service. Must be unique."
          },
          "calendar_id": {
            "type": "string",
            "description": "The Calendar this resource belongs to. Required for create requests."
          },
          "name": {
            "type": "string",
            "description": "The name of the Calendar Event displayed on the UI."
          },
          "is_active": {
            "type": "boolean",
            "description": "The current effective state of the Calendar Event."
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the Calendar Event will be effective from (inclusive), in UTC. Required for create requests. Formatted as an RFC3339 timestamp."
          },
          "end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the Calendar Event will be effective to (exclusive) in UTC. Required for create requests. Formatted as an RFC3339 timestamp."
          }
        }
      },
      "v1calendarCalendarPeriod": {
        "type": "object",
        "properties": {
          "expected_end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "End of the period, in UTC. Formatted as an RFC3339 timestamp."
          },
          "actual_end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "This timestamp will be updated when holding (pausing of given calendar) or rolling (advancing the period forward), for operational/accounting purposes. Formatted as an RFC3339 timestamp in UTC."
          },
          "period": {
            "type": "integer",
            "format": "int64",
            "description": "A monotonically increasing value derived from the date and start_period_epoch timestamp.\n\nRequired."
          },
          "expected_start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Start of current period, unmodified by hold/roll changes. Formatted as an RFC3339 timestamp in UTC.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "This field describes the unmodified start time of a period."
            }
          },
          "actual_start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Start of current period, affected by hold/roll of previous period. Formatted as an RFC3339 timestamp in UTC.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "This field describes the start time of a period after applying hold/roll adjustments."
            }
          },
          "calendar_id": {
            "type": "string",
            "description": "References the Calendar that the period belongs to.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "This field describes the Calendar that this Calendar Period belongs to."
            }
          },
          "calendar_period_descriptor_id": {
            "type": "string",
            "description": "References the Calendar Period Descriptor that was used to generate the period.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "This field describes the Calendar Period Descriptor that this period was generated with."
            }
          },
          "bookkeeping_label": {
            "type": "string",
            "description": "Bookkeeping label, in the ISO-8601 extended date format YYYY-MM-DD. This field is populated using the date from the most recently associated UpdateBookkeepingDate call.",
            "x-release-info": {
              "releaseVersion": {
                "major": 3,
                "minor": 1
              },
              "changeType": "ADD_FIELD",
              "description": "This field describes the Bookkeeping label, in the ISO-8601 date format YYYY-MM-DD."
            }
          }
        },
        "required": [
          "period"
        ]
      },
      "v1calendarCalendarPeriodDescriptor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The Calendar Period Descriptor ID can be specified by the user when creating the Calendar Period Descriptor, otherwise it will be generated by the service. Must be unique."
          },
          "name": {
            "type": "string",
            "description": "Name of the period descriptor."
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Calendar Period is measured from, in UTC. Defaults to the current time. Formatted as an RFC3339 timestamp."
          },
          "resolution": {
            "$ref": "#/components/schemas/v1calendarPeriodResolution",
            "description": "The Period Resolution determines the size of each period. This is fixed to 1 day. Read only."
          }
        }
      },
      "v1calendarChangeCurrentCalendarPeriodRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "Unique ID that is used to identify the request.\n\nRequired."
          },
          "calendar_id": {
            "type": "string",
            "description": "ID of the calendar.\n\nRequired."
          },
          "action": {
            "$ref": "#/components/schemas/calendarChangeCurrentCalendarPeriodRequestAction",
            "description": "Action to perform on the current calendar period.\n\nRequired."
          },
          "action_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When to Roll to/Until when to Hold. Cannot be in the past. Defaults to the current system timestamp in UTC. Must be formatted as an RFC3339 timestamp."
          }
        },
        "required": [
          "request_id",
          "calendar_id",
          "action"
        ]
      },
      "v1calendarCreateCalendarEventRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID that is used to identify the request.\n\nRequired."
          },
          "calendar_event": {
            "$ref": "#/components/schemas/v1calendarCalendarEvent",
            "description": "The new Calendar Event resource that is to be created.\n\nRequired."
          }
        },
        "description": "A request to create a Calendar Event.",
        "required": [
          "request_id",
          "calendar_event"
        ]
      },
      "v1calendarCreateCalendarPeriodDescriptorRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The ID of the request used for idempotency.\n\nRequired."
          },
          "calendar_period_descriptor": {
            "$ref": "#/components/schemas/v1calendarCalendarPeriodDescriptor",
            "description": "The Calendar Period Descriptor.\n\nRequired."
          }
        },
        "required": [
          "request_id",
          "calendar_period_descriptor"
        ]
      },
      "v1calendarCreateCalendarRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID that is used to identify the request.\n\nRequired."
          },
          "calendar": {
            "$ref": "#/components/schemas/v1calendarCalendar",
            "description": "The new Calendar resource that is to be created.\n\nRequired.",
            "x-excluded-fields": [
              "create_timestamp"
            ]
          }
        },
        "title": "A request to create a new Calendar",
        "required": [
          "request_id",
          "calendar"
        ]
      },
      "v1calendarListCalendarEventsResponse": {
        "type": "object",
        "properties": {
          "calendar_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1calendarCalendarEvent"
            }
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v1calendarListCalendarsResponse": {
        "type": "object",
        "properties": {
          "calendars": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1calendarCalendar"
            },
            "description": "Contains the list of requested Calendars."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v1calendarNamePatternMatch": {
        "type": "object",
        "properties": {
          "pattern": {
            "type": "string"
          },
          "match_type": {
            "$ref": "#/components/schemas/calendarNamePatternMatchMatchType"
          }
        }
      },
      "v1calendarPeriodResolution": {
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/v1calendarTimeUnit",
            "description": "Defines the granularity of a time period.\n\nRequired."
          },
          "value": {
            "type": "integer",
            "format": "int64",
            "description": "Defines the quantity of the Unit specified in the Unit field.\n\nRequired."
          }
        },
        "required": [
          "unit",
          "value"
        ]
      },
      "v1calendarTimeUnit": {
        "type": "string",
        "enum": [
          "TIME_UNIT_UNKNOWN",
          "TIME_UNIT_HOURS",
          "TIME_UNIT_DAYS",
          "TIME_UNIT_WEEKS",
          "TIME_UNIT_MONTHS",
          "TIME_UNIT_YEARS"
        ],
        "default": "TIME_UNIT_UNKNOWN"
      },
      "v1calendarUpdateBookkeepingDateRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The ID of the request, for idempotency.\n\nRequired."
          },
          "id": {
            "type": "string",
            "description": "The ID of the Calendar to be updated.\n\nRequired."
          },
          "bookkeeping_date": {
            "$ref": "#/components/schemas/v1calendarBookkeepingDate",
            "description": "The data to be updated to.\n\nRequired.",
            "x-excluded-fields": [
              "id"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "\n\nRequired.",
            "title": "A mask of fields to be updated. This should only be \"date\""
          }
        },
        "required": [
          "request_id",
          "id",
          "bookkeeping_date",
          "update_mask"
        ]
      },
      "v1calendarUpdateCalendarEventRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The ID of the request used for idempotency.\n\nRequired."
          },
          "calendar_event_id": {
            "type": "string",
            "description": "The ID of the calendar event that is to be updated.\n\nRequired."
          },
          "calendar_event": {
            "$ref": "#/components/schemas/v1calendarCalendarEvent",
            "description": "The calendar event fields that are to be updated.\n\nRequired.",
            "x-excluded-fields": [
              "id",
              "calendar_id",
              "start_timestamp",
              "end_timestamp"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "A mask of calendar event fields that are to be updated.\n\nRequired."
          }
        },
        "required": [
          "request_id",
          "calendar_event_id",
          "calendar_event",
          "update_mask"
        ]
      },
      "v1calendarUpdateCalendarRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The ID of the request used for idempotency.\n\nRequired."
          },
          "calendar_id": {
            "type": "string",
            "description": "The ID of the calendar that is to be updated.\n\nRequired."
          },
          "calendar": {
            "$ref": "#/components/schemas/v1calendarCalendar",
            "description": "The calendar fields that are to be updated.\n\nRequired.",
            "x-excluded-fields": [
              "id",
              "create_timestamp",
              "calendar_period_descriptor_id"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "A mask of calendar fields that are to be updated.\n\nRequired."
          }
        },
        "required": [
          "request_id",
          "calendar_id",
          "calendar",
          "update_mask"
        ]
      },
      "CoreAPIContractEventsINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "contract_eventsListContractExecutionsRequestOrField": {
        "type": "string",
        "enum": [
          "OR_FIELD_ACCOUNT_IDS",
          "OR_FIELD_PLAN_IDS"
        ],
        "default": "OR_FIELD_ACCOUNT_IDS"
      },
      "v1commonContractHook": {
        "type": "string",
        "enum": [
          "UNKNOWN_HOOK",
          "ACTIVATION_HOOK",
          "ATTRIBUTE_HOOK",
          "CONVERSION_HOOK",
          "DEACTIVATION_HOOK",
          "DERIVED_PARAMETER_HOOK",
          "POST_PARAMETER_CHANGE_HOOK",
          "POST_POSTING_HOOK",
          "PRE_PARAMETER_CHANGE_HOOK",
          "PRE_POSTING_HOOK",
          "SCHEDULED_EVENT_HOOK"
        ],
        "default": "UNKNOWN_HOOK",
        "description": "ContractHook is an enum type with values for hooks available in Contracts Language Major Version 4.",
        "x-enum-value-descriptions": {
          "ACTIVATION_HOOK": "activation_hook",
          "ATTRIBUTE_HOOK": "attribute_hook",
          "CONVERSION_HOOK": "conversion_hook",
          "DEACTIVATION_HOOK": "deactivation_hook",
          "DERIVED_PARAMETER_HOOK": "derived_parameter_hook",
          "POST_PARAMETER_CHANGE_HOOK": "post_parameter_change_hook",
          "POST_POSTING_HOOK": "post_posting_hook",
          "PRE_PARAMETER_CHANGE_HOOK": "pre_parameter_change_hook",
          "PRE_POSTING_HOOK": "pre_posting_hook",
          "SCHEDULED_EVENT_HOOK": "scheduled_event_hook",
          "UNKNOWN_HOOK": "Default value."
        }
      },
      "v1contract_eventsAccountResource": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The ID of the Account for which a Smart Contract Version (Product Version) was executed."
          },
          "smart_contract_version_id": {
            "type": "string",
            "description": "The ID of the associated Smart Contract Version (Product Version) that was executed."
          }
        }
      },
      "v1contract_eventsContractExecution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the ContractExecution. UUID."
          },
          "contract_event_id": {
            "type": "string",
            "description": "The unique identifier of the ContractEvent to which this execution belongs. UUID."
          },
          "execution_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The system wall-clock time when the ContractExecution occurred."
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The effective time of the Contract Event."
          },
          "invoking_resource": {
            "$ref": "#/components/schemas/v1contract_eventsInvokingResource",
            "description": "InvokingResource is set if this ContractExecution was invoked by a parent resource, so results of this execution were not committed to Vault Core, but instead provided as input to the invoking execution. For example, an Account Smart Contract execution that was invoked by a supervising Plan Supervisor ContractExecution."
          },
          "hook_name": {
            "$ref": "#/components/schemas/v1commonContractHook",
            "description": "The Contract hook that was executed."
          },
          "status": {
            "$ref": "#/components/schemas/v1contract_eventsStatus",
            "description": "The status of the execution."
          },
          "error": {
            "$ref": "#/components/schemas/errorsError",
            "description": "The error message, if any."
          },
          "account_resource": {
            "$ref": "#/components/schemas/v1contract_eventsAccountResource",
            "required": false
          },
          "plan_resource": {
            "$ref": "#/components/schemas/v1contract_eventsPlanResource",
            "required": false
          }
        }
      },
      "v1contract_eventsInvokingResource": {
        "type": "object",
        "properties": {
          "invoking_plan": {
            "$ref": "#/components/schemas/v1contract_eventsPlanResource",
            "description": "Set if there was a supervisee account Smart Contract hook that was executed because it was invoked by a plan Supervisor Contract hook."
          },
          "invoking_contract_execution_id": {
            "type": "string",
            "description": "The ContractExecution ID of the invoking hook, which received as input the outputs of the invoked hook."
          }
        }
      },
      "v1contract_eventsListContractExecutionsResponse": {
        "type": "object",
        "properties": {
          "contract_executions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contract_eventsContractExecution"
            },
            "description": "A list of ContractExecutions, ordered by `execution_timestamp`, then resource type (ContractExecutions for Account IDs appear before ContractExecutions associated to Plan IDs), and then by the `account_id` or `plan_id`, in ascending order."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v1contract_eventsPlanResource": {
        "type": "object",
        "properties": {
          "plan_id": {
            "type": "string",
            "description": "The ID of the Plan for which a Supervisor Contract Version was executed."
          },
          "supervisor_contract_version_id": {
            "type": "string",
            "description": "The ID of the associated Supervisor Contract Version that was executed."
          }
        }
      },
      "v1contract_eventsStatus": {
        "type": "string",
        "enum": [
          "STATUS_UNKNOWN",
          "STATUS_SUCCESS",
          "STATUS_SUCCESS_NO_HOOK",
          "STATUS_RETRYABLE_EXECUTION_ERROR",
          "STATUS_EXECUTION_ERROR",
          "STATUS_HOOK_RESULT_RETURNED_TO_PARENT",
          "STATUS_REJECTED",
          "STATUS_RETRYABLE_HOOK_RESULT_ERROR",
          "STATUS_HOOK_RESULT_ERROR",
          "STATUS_RETRYABLE_HOOK_RESULT_PARTIAL_ERROR",
          "STATUS_HOOK_RESULT_PARTIAL_ERROR"
        ],
        "default": "STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "STATUS_EXECUTION_ERROR": "The ContractExecution encountered a non-retryable execution error, such as contract syntax error.",
          "STATUS_HOOK_RESULT_ERROR": "The ContractExecution has successfully produced hook results, but none are committed to Vault due to encountering a non-retryable error.",
          "STATUS_HOOK_RESULT_PARTIAL_ERROR": "The ContractExecution successfully produced hook results, then some hook results were successfully committed to Vault and have taken effect, but others have failed with a non-retryable error.",
          "STATUS_HOOK_RESULT_RETURNED_TO_PARENT": "The ContractExecution successfully produced hook results, which were returned to the parent contract hook execution, i.e. a supervisor contract hook execution. The hook results of this ContractExecution have no effects on Vault, only parent ContractExecution hook results are committed to Vault.",
          "STATUS_REJECTED": "The contract code returned a Rejection result, indicating that the Contract Event should not proceed. This is not a failure (error).",
          "STATUS_RETRYABLE_EXECUTION_ERROR": "The ContractExecution encountered a transient error when attempting to execute contract code.",
          "STATUS_RETRYABLE_HOOK_RESULT_ERROR": "The ContractExecution has successfully produced hook results, but none are committed to Vault due to encountering a transient error. This Contract Event will be retried automatically by Vault.",
          "STATUS_RETRYABLE_HOOK_RESULT_PARTIAL_ERROR": "The ContractExecution successfully produced hook results, then some hook results were successfully committed to Vault and have taken effect, but others have failed with a transient error. The Contract Event will be retried automatically by Vault.",
          "STATUS_SUCCESS": "The ContractExecution succeeded, including the processing of any hook results.",
          "STATUS_SUCCESS_NO_HOOK": "The contract defined no hook for the contract event.",
          "STATUS_UNKNOWN": "The status of the ContractExecution is unknown. This is invalid."
        }
      },
      "contract_modulesBatchGetContractModuleVersionsRequestIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_CODE",
          "INCLUDE_FIELD_DETAILS_API_VERSION",
          "INCLUDE_FIELD_DETAILS_CALLABLE_DETAILS"
        ],
        "default": "INCLUDE_FIELD_CODE"
      },
      "v1contract_modulesBatchGetContractModuleVersionsResponse": {
        "type": "object",
        "properties": {
          "contract_module_versions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1contract_modulesContractModuleVersion"
            },
            "description": "Map of ID to Contract Module Version."
          }
        }
      },
      "v1contract_modulesBatchGetContractModulesResponse": {
        "type": "object",
        "properties": {
          "contract_modules": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1contract_modulesContractModule"
            },
            "description": "Map of ID to Contract Module."
          }
        }
      },
      "v1contract_modulesBatchGetSmartContractModuleVersionsLinksResponse": {
        "type": "object",
        "properties": {
          "smart_contract_module_versions_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1contract_modulesSmartContractModuleVersionsLink"
            },
            "description": "Map of ID to Smart Contract Module Versions Link."
          }
        }
      },
      "v1contract_modulesContractModule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID. Can be provided by the client, otherwise it will be a service-generated UUID.\n"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when it was created in UTC. Formatted as an RFC3339 timestamp.",
            "x-output-only": true
          },
          "display_name": {
            "type": "string",
            "description": "The human-readable name. Required for create requests."
          },
          "description": {
            "type": "string",
            "description": "The human-readable description.\n"
          }
        }
      },
      "v1contract_modulesContractModuleCodeDetails": {
        "type": "object",
        "properties": {
          "api_version": {
            "$ref": "#/components/schemas/versionSemVer",
            "description": "The Contracts language library version of the Contract Module."
          },
          "shared_function_details": {
            "$ref": "#/components/schemas/v1contract_modulesSharedFunctionDetails",
            "description": "The shared function details of the Contract Module."
          }
        }
      },
      "v1contract_modulesContractModuleVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID. Can be provided by the client, otherwise it will be a service-generated UUID.\n"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when it was created in UTC. Formatted as an RFC3339 timestamp.",
            "x-output-only": true
          },
          "contract_module_id": {
            "type": "string",
            "description": "The ID of the Contract Module of which this is a version."
          },
          "display_name": {
            "type": "string",
            "description": "The human-readable name. Required for create requests."
          },
          "description": {
            "type": "string",
            "description": "The human-readable description.\n"
          },
          "code": {
            "type": "string",
            "description": "The source code."
          },
          "contract_module_code_details": {
            "$ref": "#/components/schemas/v1contract_modulesContractModuleCodeDetails",
            "description": "Additional information about the Contract Module derived from the code."
          }
        }
      },
      "v1contract_modulesCreateContractModuleRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID that is used to ensure the request is idempotent."
          },
          "contract_module": {
            "$ref": "#/components/schemas/v1contract_modulesContractModule",
            "description": "The Contract Module to be created.\n\nRequired.",
            "x-excluded-fields": [
              "create_timestamp"
            ]
          }
        },
        "required": [
          "contract_module"
        ]
      },
      "v1contract_modulesCreateContractModuleVersionRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID that is used to ensure the request is idempotent."
          },
          "contract_module_version": {
            "$ref": "#/components/schemas/v1contract_modulesContractModuleVersion",
            "description": "The Contract Module Version to be created.\n\nRequired.",
            "x-excluded-fields": [
              "create_timestamp",
              "contract_module_code_details"
            ]
          }
        },
        "required": [
          "contract_module_version"
        ]
      },
      "v1contract_modulesCreateSmartContractModuleVersionsLinkRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID that is used to ensure the request is idempotent."
          },
          "smart_contract_module_versions_link": {
            "$ref": "#/components/schemas/v1contract_modulesSmartContractModuleVersionsLink",
            "description": "The Smart Contract Module Versions Link to be created.\n\nRequired.",
            "x-excluded-fields": [
              "create_timestamp"
            ]
          }
        },
        "required": [
          "smart_contract_module_versions_link"
        ]
      },
      "v1contract_modulesListContractModuleVersionsResponse": {
        "type": "object",
        "properties": {
          "contract_module_versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contract_modulesContractModuleVersion"
            },
            "description": "A list of Contract Module Versions, ordered by descending creation timestamp.",
            "x-excluded-fields": [
              "code",
              "contract_module_code_details"
            ]
          },
          "next_page_token": {
            "type": "string",
            "description": "The token used to retrieve the next page. If empty, this returns the last page of results."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The token used to retrieve the previous page. If empty, this returns the first page of results."
          }
        }
      },
      "v1contract_modulesListContractModulesResponse": {
        "type": "object",
        "properties": {
          "contract_modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contract_modulesContractModule"
            },
            "description": "A list of Contract Modules, ordered by descending creation timestamp."
          },
          "next_page_token": {
            "type": "string",
            "description": "The token used to retrieve the next page. If empty, this returns the last page of results."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The token used to retrieve the previous page. If empty, this returns the first page of results."
          }
        }
      },
      "v1contract_modulesListSmartContractModuleVersionsLinksResponse": {
        "type": "object",
        "properties": {
          "smart_contract_module_versions_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contract_modulesSmartContractModuleVersionsLink"
            },
            "description": "A list of Smart Contract Module Versions Links, ordered by descending creation timestamp."
          },
          "next_page_token": {
            "type": "string",
            "description": "The token used to retrieve the next page. If empty, this returns the last page of results."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The token used to retrieve the previous page. If empty, this returns the first page of results."
          }
        }
      },
      "v1contract_modulesSharedFunction": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Contract Module function.\n\nRequired."
          },
          "args": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contract_modulesSharedFunctionArg"
            },
            "description": "The arguments of the Contract Module function."
          },
          "return_type": {
            "type": "string",
            "description": "The return type of the Contract Module function."
          }
        },
        "required": [
          "name"
        ]
      },
      "v1contract_modulesSharedFunctionArg": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the Contract Module function argument.\n\nRequired."
          },
          "type": {
            "type": "string",
            "description": "The type of the Contract Module function argument."
          }
        },
        "required": [
          "name"
        ]
      },
      "v1contract_modulesSharedFunctionDetails": {
        "type": "object",
        "properties": {
          "shared_functions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contract_modulesSharedFunction"
            },
            "description": "The shared functions that are implemented in the Contract Module."
          }
        }
      },
      "v1contract_modulesSmartContractModuleVersionsLink": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID. Can be provided by the client, otherwise it will be a service-generated UUID.\n"
          },
          "smart_contract_version_id": {
            "type": "string",
            "description": "The ID of the Smart Contract Version this link relates to. Required for create requests."
          },
          "alias_to_contract_module_version_id": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map of alias to ContractModuleVersionID containing all Contract Module Versions that are linked to the Smart Contract Version ID. The alias is defined by the Smart Contract code. A link must provide Contract Module Version IDs for all aliases defined in the Smart Contract. Required for create requests."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when it was created in UTC. Formatted as an RFC3339 timestamp.",
            "x-output-only": true
          }
        }
      },
      "versionSemVer": {
        "type": "object",
        "properties": {
          "major": {
            "type": "integer",
            "format": "int32",
            "description": "The major version number."
          },
          "minor": {
            "type": "integer",
            "format": "int32",
            "description": "The minor version number."
          },
          "patch": {
            "type": "integer",
            "format": "int32",
            "description": "The patch version number."
          },
          "label": {
            "type": "string",
            "description": "The version label. Example: \"-beta\"."
          }
        },
        "description": "Minimal representation of a Semantic Versioning Specification (SemVer) version. For more information go to http://semver.org. If you require a Semantic Versioning representation in your proto you MUST use this common proto."
      },
      "contractsExistingProductDataBehaviourDataType": {
        "type": "string",
        "enum": [
          "UNKNOWN",
          "GLOBAL_PARAMETERS",
          "TEMPLATE_PARAMETERS",
          "CALENDARS"
        ],
        "default": "UNKNOWN"
      },
      "core_apiv1account_attributesStringValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of the string attribute."
          }
        },
        "description": "StringValue is a wrapper object, allowing for Optional[String] declaration of the primitive value, or absense of the primitive value."
      },
      "core_apiv1accountsAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for an account. Optional for create requests.\n\nMax length: 36 characters."
          },
          "name": {
            "type": "string",
            "description": "The account name."
          },
          "product_id": {
            "type": "string",
            "description": "The ID of the product the account is associated with. Can be obtained using the /v1/products endpoint. Required for create requests if `product_version_id` is not provided."
          },
          "product_version_id": {
            "type": "string",
            "description": "The ID of the product version matching the product ID. Required for create requests if `product_id` is not provided. Product Versions that use Expected Parameter syntax are not supported; /v2/accounts must be used instead."
          },
          "permitted_denominations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of denominations accessible from within the Smart Contract:<br><br> - If the Product Version specifies supported denominations, then this set must be a subset of those (if none are specified here then the field will be set to the Product Version's supported denominations).<br> - If the Product Version does not specify denominations, then it will be set to the permitted_denominations defined in values.yaml<br><br> The permitted_denominations field on the account resource is not used when validating incoming posting instructions' denominations. To validate that the denominations used by incoming posting instructions are in this list, the check must be implemented in the pre_posting_hook of the Smart Contract of the customer account that the posting instruction is targeting. This field cannot be updated."
          },
          "status": {
            "$ref": "#/components/schemas/core_apiv1accounts_commonAccountStatus",
            "description": "The status of the account. Optional for creation. Valid updates are from ACCOUNT_STATUS_PENDING to ACCOUNT_STATUS_OPEN or ACCOUNT_STATUS_CANCELLED, ACCOUNT_STATUS_OPEN to ACCOUNT_STATUS_PENDING_CLOSURE or ACCOUNT_STATUS_CLOSED, ACCOUNT_STATUS_PENDING_CLOSURE to ACCOUNT_STATUS_CLOSED. Updating the status to ACCOUNT_STATUS_OPEN will trigger the creation of an account update with an `activation_update` field and run the contract activation code. Updating the status to ACCOUNT_STATUS_PENDING_CLOSURE will trigger the creation of an account update with a closure_update field and run the contract close code. Accounts with the status ACCOUNT_STATUS_PENDING_CLOSURE can only be updated to ACCOUNT_STATUS_CLOSED. Accounts can only be updated to ACCOUNT_STATUS_CLOSED once the `closure_update` account update had the status ACCOUNT_UPDATE_STATUS_COMPLETED and the account has a zero balance. The account status can be updated directly to CLOSED from OPEN if the closing timestamp is provided and is also updated in the same call."
          },
          "opening_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the account was opened, in UTC. Optional for create. Formatted as an RFC3339 timestamp . If supplied during account creation, the account must be created with status ACCOUNT_STATUS_OPEN and the opening_timestamp value must not be a time in the future."
          },
          "closing_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the account was closed, in UTC. Can be updated to a time in the past directly if the account status is updated to CLOSED in the same call. The account status must be OPEN or PENDING_CLOSURE to update the closing timestamp. Formatted as an RFC3339 timestamp."
          },
          "stakeholder_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The customer IDs that can access the account. Required for create requests."
          },
          "instance_param_vals": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The instance-level parameter name(s) and value(s) for the associated product, defined in the account's Smart Contract code. Any `default_value` specified in the Smart Contract is not used on Account creation requests; it is only used for Account conversions performed via `v1/account-migrations`. Optional for create requests."
          },
          "derived_instance_param_vals": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The derived instance-level parameters for the associated product that have been defined in the account's Smart Contract code.",
            "x-output-only": true
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map of unstructured fields that hold instance-specific account details, for example, the source of funds. Optional for create requests.<br> <br>The details must not include:<br> - Any image data, including any KYC collateral such as passport, licence or other images. These must be stored in a separate repository outside of Vault.<br> - Any data that is classified as PII data.<br> The details cannot be utilised by Smart Contracts to drive any type of product behaviour.<br><br> Max size: 1MB (but it is strongly recommended to keep below this size)."
          },
          "accounting": {
            "$ref": "#/components/schemas/v1accounts_commonAccounting",
            "description": "The accounting data that Vault supports as first-class fields."
          }
        }
      },
      "core_apiv1accountsActivationUpdate": {
        "type": "object",
        "description": "An ActivationUpdate is automatically queued when updating an account status from `ACCOUNT_STATUS_PENDING` to `ACCOUNT_STATUS_OPEN`. An ActivationUpdate can also be retried if the account status is `ACCOUNT_STATUS_OPEN` and the Account has no other ActivationUpdates with status `ACCOUNT_UPDATE_STATUS_PENDING_EXECUTION` or `ACCOUNT_UPDATE_STATUS_COMPLETED`. This account update triggers the product activation code and sets up custom schedules."
      },
      "core_apiv1accountsClosureUpdate": {
        "type": "object",
        "description": "A ClosureUpdate is automatically queued when updating an account status from ACCOUNT_STATUS_OPEN to ACCOUNT_STATUS_PENDING_CLOSURE. A ClosureUpdate can also be retried if the account status is ACCOUNT_STATUS_PENDING_CLOSURE. This account update triggers the product close code, but it does not disable schedules."
      },
      "core_apiv1accountsScheduleMigrationType": {
        "type": "string",
        "enum": [
          "SCHEDULE_MIGRATION_TYPE_RECREATE_ALL_SCHEDULES_AND_GROUPS",
          "SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES"
        ],
        "default": "SCHEDULE_MIGRATION_TYPE_RECREATE_ALL_SCHEDULES_AND_GROUPS",
        "x-enum-value-descriptions": {
          "SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES": "When updating the product version of an account, existing schedules are preserved if either: - They are not part of a group and a schedule of the same event type is defined in the new Smart Contract code; or<br> - They are part of a group and a group of the same name, size and order is defined in the new Smart Contract code. New schedules are only created if they are defined in the new Smart Contract code.",
          "SCHEDULE_MIGRATION_TYPE_RECREATE_ALL_SCHEDULES_AND_GROUPS": "When updating the product version of an account, all existing schedules will be disabled. New schedules will then be created according to the Smart Contract code of the new product version. Any updates previously made to existing schedules will not be preserved. This is the default behaviour."
        }
      },
      "core_apiv1accounts_commonAccountStatus": {
        "type": "string",
        "enum": [
          "ACCOUNT_STATUS_UNKNOWN",
          "ACCOUNT_STATUS_OPEN",
          "ACCOUNT_STATUS_CLOSED",
          "ACCOUNT_STATUS_CANCELLED",
          "ACCOUNT_STATUS_PENDING_CLOSURE",
          "ACCOUNT_STATUS_PENDING"
        ],
        "default": "ACCOUNT_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "ACCOUNT_STATUS_CANCELLED": "Account was requested but was never approved, it is now permanently closed.",
          "ACCOUNT_STATUS_CLOSED": "Account was previously open but is now permanently closed.",
          "ACCOUNT_STATUS_OPEN": "Account has been approved and transactions are allowed.",
          "ACCOUNT_STATUS_PENDING": "Account and contract record has been created, it is waiting for another call to be made open.",
          "ACCOUNT_STATUS_PENDING_CLOSURE": "Account was requested closure but contract and account closure are not finished.",
          "ACCOUNT_STATUS_UNKNOWN": "Default value."
        }
      },
      "core_apiv1contractsContractModule": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Source code of the Contract Module that is to be simulated."
          },
          "contract_module_version_id": {
            "type": "string",
            "description": "The ID that will be used as the Contract Module version ID in the simulation. Can be referenced by the simulation instructions."
          }
        }
      },
      "core_apiv1contractsContractNotificationEvent": {
        "type": "object",
        "properties": {
          "notification_type": {
            "type": "string",
            "description": "An user defined identifier indicating how the payload should be processed externally."
          },
          "resource_id": {
            "type": "string",
            "description": "The id of the resource that triggered the notification."
          },
          "resource_type": {
            "$ref": "#/components/schemas/v1contract_notificationResource",
            "description": "The type of resource that triggered the notification."
          },
          "notification_details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Details passed to the external service as part of the notification."
          }
        }
      },
      "core_apiv1parametersValue": {
        "type": "object",
        "properties": {
          "string_value": {
            "$ref": "#/components/schemas/string_value",
            "required": false
          },
          "decimal_value": {
            "$ref": "#/components/schemas/decimal_value",
            "required": false
          },
          "enumeration_value": {
            "$ref": "#/components/schemas/enumeration_value",
            "required": false
          },
          "date_time_value": {
            "$ref": "#/components/schemas/date_time_value",
            "required": false
          },
          "account_id_value": {
            "$ref": "#/components/schemas/account_id_value",
            "required": false
          }
        }
      },
      "core_apiv2accountsAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Account. When creating a customer Account this field is optional and will default to a UUID if not provided. When creating an internal Account this field is required. Max length: 36 characters."
          },
          "type": {
            "$ref": "#/components/schemas/v2accountsAccountType",
            "description": "The type of the Account. Required."
          },
          "smart_contract_version_id": {
            "type": "string",
            "description": "The ID of the Smart Contract Version the Account is currently on.<br><br> _For create requests_: This must be set for Customer Accounts, but must be empty for Internal Accounts.<br><br> _For update requests_: This can be directly updated to request the converting of a Customer Account to a new Smart Contract version.<br><br> Only the hooks on this Smart Contract Version will be executed (supervisors and propagation delays notwithstanding) with the exception of the conversion hook which would be run for the pending Smart Contract Version."
          },
          "pending_smart_contract_version_id": {
            "type": "string",
            "description": "The ID of the Smart Contract Version the Account is converting to. A non-empty value indicates that the conversion hook has been successfully executed and that directives are being committed. Vault sets this field automatically while converting the Account to a new Smart Contract Version; if it remains populated for any length of time it may indicate that user intervention is required. Vault will continually attempt to move to this Smart Contract Version asynchronously. Until the Account is successfully moved to this Smart Contract Version, hooks from its current Smart Contract Version will be executed. Immediately following moving to this Smart Contract Version, there may be delay in propagating changes; in some cases the hooks on the previous Smart Contract Version are executed for postings, scheduled events and parameter changes."
          },
          "stakeholder_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of stakeholders on the Account. Empty for Internal Accounts."
          },
          "alias": {
            "type": "string",
            "description": "A user-provided alias for the Account. Optional."
          },
          "status": {
            "$ref": "#/components/schemas/core_apiv2accountsAccountStatus",
            "description": "The status of the Account. When creating an Internal Account this must be set to OPEN. When creating a Customer Account this must be set to either PENDING or OPEN. This can only be updated to OPEN, CLOSED or CANCELLED."
          },
          "vault_create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Account was created in Vault, in UTC. Output only. Formatted as an RFC3339 timestamp."
          },
          "source_create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Account was created, in UTC. Output only. This value may be backdated for Accounts migrated to Vault via the Data Loader API. Formatted as an RFC3339 timestamp."
          },
          "source_open_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Account finished moving to status OPEN, in UTC. Output only. This value may be earlier than the `vault_create_timestamp` for Accounts migrated to Vault via the Data Loader API. This value is always greater than or equal to `source_create_timestamp`. Formatted as an RFC3339 timestamp."
          },
          "source_close_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Account finished moving to status CLOSED, in UTC. Output only. This value may be earlier than the `vault_create_timestamp` for Accounts migrated to Vault via the Data Loader API. This value is always greater than or equal to `source_open_timestamp`. Formatted as an RFC3339 timestamp."
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Account was last updated, in UTC. Empty for Accounts that have not been updated. Output only. Formatted as an RFC3339 timestamp."
          },
          "activation_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The effective time that the Account's activation hook was run, in UTC. Output only. This value will be earlier than the `vault_create_timestamp` for Accounts created in OPEN, because the activation hook is executed before creating the Account. Formatted as an RFC3339 timestamp."
          },
          "permitted_denominations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of denominations, which is accessible from within the Smart Contract:<br><br> - If the Smart Contract Version specifies supported denominations, then this set must be a subset of those (if none are specified here then the field will be set to the Smart Contract Version's supported denominations).<br> - If the Smart Contract Version does not specify denominations, then at least one must be specified when creating the Account.<br><br> Incoming Postings are not required to specify a denomination contained in this list; if this validation is required then it must be implemented in the Smart Contract. This field cannot be updated, and cannot be populated for Internal Accounts, unless created via the v1/internal-accounts endpoint (deprecated)."
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "User-provided key/value Account details. Vault does not use data stored here, it is purely for use by downstream systems. Entries can be removed by specifying a key with an empty value. Keys with values will create new entries or replace existing ones. Any existing entries with keys not in the request will not be modified. Optional."
          },
          "t_side": {
            "$ref": "#/components/schemas/v2accountsTSide",
            "description": "The side of the balance sheet where the Account balance is counted. Can be optionally provided when creating Internal Accounts. If it is not provided, it will default to LIABILITY. For Customer Accounts, the t_side is defined in the Smart Contract. It cannot be provided in this request."
          },
          "contract_update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The most recent time at which the Smart Contract Version was updated on the Account, in UTC. Empty if it has never changed. Formatted as an RFC3339 timestamp."
          },
          "processing_group_id": {
            "type": "string",
            "title": "The ID of the Processing Group the Account is in. Can only be provided for create requests. If omitted, the Account will be assigned to the default Processing Group. <br><br>*Multiple Processing Groups are only available as an optional add-on.*"
          },
          "parameter_value_hierarchy_node_id": {
            "type": "string",
            "title": "The ID of the Parameter Value Hierarchy Node which the Account is associated with. Optional. <br><br>*The Parameter Value Hierarchy is only available as an optional add-on.*"
          },
          "processing_label": {
            "type": "string",
            "title": "The processing label, used in Posting Instructions to target a particular Internal Account for the Customer Account's Processing Group. Only one Internal Account can be assigned a specific label for each Processing Group. Can only be applied to Internal Accounts. Optional. <br><br>*Multiple Processing Groups are only available as an optional add-on.*"
          }
        }
      },
      "core_apiv2accountsAccountStatus": {
        "type": "string",
        "enum": [
          "ACCOUNT_STATUS_UNKNOWN",
          "ACCOUNT_STATUS_PENDING",
          "ACCOUNT_STATUS_OPENING",
          "ACCOUNT_STATUS_OPEN",
          "ACCOUNT_STATUS_CLOSING",
          "ACCOUNT_STATUS_CLOSED",
          "ACCOUNT_STATUS_CANCELLED",
          "ACCOUNT_STATUS_PENDING_OPENING",
          "ACCOUNT_STATUS_PENDING_CLOSURE"
        ],
        "default": "ACCOUNT_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "ACCOUNT_STATUS_CANCELLED": "The Account is cancelled. No hooks are allowed. No postings are allowed. No schedules exist. This status can only be moved to from PENDING.",
          "ACCOUNT_STATUS_CLOSED": "The Account has been closed. Its balances are zero and new postings will be rejected. All schedules have been deactivated, although latent events may still occur (which cannot affect balances). This is a terminal status. Some notifications may not have been successful in the deactivation process if an error was returned. See [troubleshooting](/vault_v5/accounts_version_2/#troubleshooting_accounts) for more information.",
          "ACCOUNT_STATUS_CLOSING": "An Account is in the process of being closed. Its deactivation hook has been successfully executed but the resulting postings may not have been committed and schedules may not have been deactivated yet. This status is intended to be short-lived; if it persists for any length of time it may indicate that user intervention is required. Vault will continually attempt to move to CLOSED status asynchronously. Postings are accepted based on the presence of any Restrictions, and the Smart Contract behaviour. Schedules may continue to execute if not yet deactivated.",
          "ACCOUNT_STATUS_OPEN": "An Account has been activated. Postings are accepted based on the presence of any Restrictions, and the Smart Contract behaviour. Schedules have been created and commenced as of the activation time. In the event that Postings and/or notifications failed during the activation process, an error will be returned. For more information, see [troubleshooting](/vault_v5/accounts_version_2/#troubleshooting_accounts).",
          "ACCOUNT_STATUS_OPENING": "An Account in the process of being activated. Its activation hook has been successfully executed but the directives it produced may not have been committed yet. This status is intended to be short-lived; if it persists for any length of time it may indicate that user intervention is required. Vault will continually attempt to move to OPEN status asynchronously. Postings will be rejected unless they come from the activation hook. Any such Postings may have been committed. Schedules may have been created. Notifications may have been sent.",
          "ACCOUNT_STATUS_PENDING": "An Account that has not been activated. If this status was requested, the PENDING response means that no hook has yet been run, no schedules will exist, and Postings will be rejected. If the OPEN status was requested, a PENDING response means that manual remediation is required. For more information, see [troubleshooting](/vault_v5/accounts_version_2/#troubleshooting_accounts).",
          "ACCOUNT_STATUS_PENDING_CLOSURE": "The Account is in pending closure status. <br> DEPRECATED: This status exists to support v1 endpoints on v2 and will be removed no earlier than Vault Core 7.0. The closure Account update is created. The closure hook is run. The Account remains in this state until manually updated to closed. Balances are checked when transitioning to CLOSED.",
          "ACCOUNT_STATUS_PENDING_OPENING": "The Account is in pending open status. <br> Postings will be rejected unless they come from the activation hook. Any such Postings may have been committed. Schedules may have been created. Notifications may have been sent. Once in this status an Account can only move to OPEN. <br> DEPRECATED: This status exists to support v1 endpoints on v2 and will be removed no earlier than Vault Core 7.0. The Account is represented as OPEN on v1 endpoints. In v2, the Account may or may not be activated. Activation Account Updates are created which will activate the Account and update it to OPEN once complete.",
          "ACCOUNT_STATUS_UNKNOWN": "This status exists to avoid an empty request unintentionally setting an undesired status. An Account will never have this status."
        }
      },
      "core_apiv2accountsCreateAccountRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID for the request. Used for idempotence."
          },
          "account": {
            "$ref": "#/components/schemas/core_apiv2accountsAccount",
            "description": "The Account to create.",
            "x-excluded-fields": [
              "smart_contract_id",
              "pending_smart_contract_version_id",
              "vault_create_timestamp",
              "source_create_timestamp",
              "source_open_timestamp",
              "source_close_timestamp",
              "update_timestamp",
              "contract_update_timestamp",
              "activation_timestamp",
              "tranche_id"
            ]
          },
          "create_options": {
            "$ref": "#/components/schemas/v2accountsAccountCreateOptions",
            "description": "The create options. Only applies to Customer Accounts."
          }
        }
      },
      "core_apiv2accountsUpdateAccountRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID for the request. Used for idempotence."
          },
          "account": {
            "$ref": "#/components/schemas/core_apiv2accountsAccount",
            "description": "The Account to update. Only the fields being updated need to be specified.",
            "x-excluded-fields": [
              "smart_contract_id",
              "pending_smart_contract_version_id",
              "vault_create_timestamp",
              "source_create_timestamp",
              "source_open_timestamp",
              "source_close_timestamp",
              "update_timestamp",
              "contract_update_timestamp",
              "activation_timestamp",
              "tranche_id",
              "type",
              "name",
              "permitted_denominations",
              "t_side",
              "processing_group_id"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "The fields to update. The only accepted fields are `stakeholder_ids`, `details`, `status`, `smart_contract_version_id`, `parameter_value_hierarchy_node_id` or `processing_label`. Only one field can be updated in a single request. See the documentation for the `details` field to understand how it can be updated.",
            "x-example-override": "{\"paths\": [\"status\"]}"
          }
        }
      },
      "parametersDateTimeConstraintPrecision": {
        "type": "string",
        "enum": [
          "MINUTE",
          "DAY"
        ],
        "default": "MINUTE",
        "x-enum-value-descriptions": {
          "DAY": "Up to YYYY-MM-DD can be specified.",
          "MINUTE": "Up to YYYY-MM-DD HH:mm can be specified. Default."
        }
      },
      "posting_apiv1AccountViolation": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The ID of the account affected by the violation."
          },
          "payment_device_token": {
            "type": "string",
            "description": "The payment device token affected by the violation."
          },
          "type": {
            "$ref": "#/components/schemas/posting_apiv1AccountViolationType",
            "description": "The type of violation."
          },
          "internal_account_processing_label": {
            "type": "string",
            "description": "The internal account processing label affected by the violation."
          }
        },
        "description": "* AccountViolation describes a violation related to an account targeted by a PostingInstruction."
      },
      "posting_apiv1AccountViolationType": {
        "type": "string",
        "enum": [
          "ACCOUNT_VIOLATION_ACCOUNT_NOT_PRESENT",
          "ACCOUNT_VIOLATION_ACCOUNT_STATUS_INVALID",
          "ACCOUNT_VIOLATION_UNSUPPORTED_DENOMINATION",
          "ACCOUNT_VIOLATION_PAYMENT_DEVICE_INVALID",
          "ACCOUNT_VIOLATION_MULTIPLE_PROCESSING_GROUPS",
          "ACCOUNT_VIOLATION_INTERNAL_ACCOUNT_PROCESSING_LABEL_NOT_PRESENT"
        ],
        "default": "ACCOUNT_VIOLATION_ACCOUNT_NOT_PRESENT",
        "description": "* AccountViolation type characterises an account violations.",
        "x-enum-value-descriptions": {
          "ACCOUNT_VIOLATION_ACCOUNT_NOT_PRESENT": "The instruction's target account is not present.",
          "ACCOUNT_VIOLATION_ACCOUNT_STATUS_INVALID": "The instruction's target account is in a status that doesn't allow postings (for example, CLOSED or PENDING_OPENING).",
          "ACCOUNT_VIOLATION_INTERNAL_ACCOUNT_PROCESSING_LABEL_NOT_PRESENT": "The instruction's internal account processing label is not present.",
          "ACCOUNT_VIOLATION_MULTIPLE_PROCESSING_GROUPS": "The instruction affects multiple accounts that do not all share the same processing group.",
          "ACCOUNT_VIOLATION_PAYMENT_DEVICE_INVALID": "The instruction's payment device token resolved to a payment device that has an invalid status as of this batch's value_timestamp.",
          "ACCOUNT_VIOLATION_UNSUPPORTED_DENOMINATION": "The instruction's target account does not support the posted denomination."
        }
      },
      "posting_apiv1AuthorisationAdjustment": {
        "type": "object",
        "properties": {
          "denomination": {
            "type": "string",
            "description": "The instruction denomination.",
            "x-output-only": true
          },
          "advice": {
            "type": "boolean",
            "description": "Can be set to true to ensure that funds are ringfenced regardless of the outcome of balance checks. To ensure that posting instructions with `advice` set to true are excluded from the contract balance check, the flag `exclude_advice` must also be set to true. See [Balance check](/reference/contracts/contracts_api_4xx/common_examples/#generic-balance_check)."
          },
          "target_account_id": {
            "type": "string",
            "description": "The `account_id` of the `target_account` for this `client_transaction`.",
            "x-output-only": true
          },
          "internal_account_id": {
            "type": "string",
            "description": "The `account_id` of the `internal_account` for this `client_transaction`. This is an alternative to `internal_account_processing_label` and cannot be used in conjunction with it but one of these two fields must be specified.",
            "x-output-only": true
          },
          "authorised_amount": {
            "type": "string",
            "description": "The total amount authorised for this client transaction after the accepted instruction was accepted. This field is not returned if the instruction is rejected.",
            "x-output-only": true
          },
          "delta_amount": {
            "type": "string",
            "description": "The change the accepted instruction has made to the amount authorised for this client transaction. This field is not returned if the instruction is rejected.",
            "x-output-only": true
          },
          "internal_account_processing_label": {
            "type": "string",
            "title": "A processing label for specifying an Internal Account, which can be used instead of directly specifying an Internal Account ID. The Processing Group of the target Account determines which Internal Account this label will resolve to. This is an alternative to `internal_account_id` and cannot be used in conjunction with it but one of these two fields must be specified. <br><br>*Multiple Processing Groups are only available as an optional add-on.*",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 3
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "IMP_4_MULTIPLE_PROCESSING_GROUPS"
            }
          },
          "target_account_address": {
            "type": "string",
            "description": "The target account address of the instruction.",
            "x-output-only": true
          },
          "asset": {
            "type": "string",
            "description": "The asset of the instruction.",
            "x-output-only": true
          },
          "amount": {
            "$ref": "#/components/schemas/amount",
            "required": false
          },
          "replacement_amount": {
            "$ref": "#/components/schemas/replacement_amount",
            "required": false
          }
        },
        "description": "* AuthorisationAdjustment can be used to change the amount that was ring-fenced by either: - A previously accepted OutboundAuthorisation or InboundAuthorisation; or - A previous AuthorisationAdjustment. The authorisation is identified by the PostingInstruction client_transaction_id.\n\nFor this instruction Vault will perform: - idempotency check - Posting logic checks (which verify that a previously accepted OutboundAuthorisation or   InboundAuthorisation exists and the client_transaction has not entered the   clearing/release state yet) - contract execution (only for positive ring-fenced amounts)\n\nResulting postings committed (if accepted):\n\nPostings for AuthorisationAdjustment of OutboundAuthorisation:  <> adjustment_amount = amount; amount > 0:   - Dr | amount | auth[target_account_id]   | PHASE_PENDING_OUTGOING   - Cr | amount | auth[internal_account_id] | PHASE_PENDING_OUTGOING  <> adjustment_amount = amount; amount < 0:   - Cr | amount | auth[target_account_id]   | PHASE_PENDING_OUTGOING   - Dr | amount | auth[internal_account_id] | PHASE_PENDING_OUTGOING  <> adjustment_amount = replacement_amount; replacement_amount > current amount   - Dr | delta_amount | auth[target_account_id]   | PHASE_PENDING_OUTGOING   - Cr | delta_amount | auth[internal_account_id] | PHASE_PENDING_OUTGOING  <> adjustment_amount = replacement_amount; replacement_amount < current amount   - Cr | delta_amount | auth[target_account_id]   | PHASE_PENDING_OUTGOING   - Dr | delta_amount | auth[internal_account_id] | PHASE_PENDING_OUTGOING\n\n--------------------------------------------------------------------------------------\n\n Postings for AuthorisationAdjustment of InboundAuthorisation:  <> adjustment_amount = amount; amount > 0:   - Cr | amount | auth[target_account_id]   | PHASE_PENDING_INCOMING   - Dr | amount | auth[internal_account_id] | PHASE_PENDING_INCOMING  <> adjustment_amount = amount; amount < 0:   - Dr | amount | auth[target_account_id]   | PHASE_PENDING_INCOMING   - Cr | amount | auth[internal_account_id] | PHASE_PENDING_INCOMING  <> adjustment_amount = replacement_amount; replacement_amount > current amount   - Cr | delta_amount | auth[target_account_id]   | PHASE_PENDING_INCOMING   - Dr | delta_amount | auth[internal_account_id] | PHASE_PENDING_INCOMING  <> adjustment_amount = replacement_amount; replacement_amount < current amount   - Dr | delta_amount | auth[target_account_id]   | PHASE_PENDING_INCOMING   - Cr | delta_amount | auth[internal_account_id] | PHASE_PENDING_INCOMING"
      },
      "posting_apiv1ContractExecutionViolationType": {
        "type": "string",
        "enum": [
          "CONTRACT_EXECUTION_VIOLATION_UNKNOWN",
          "CONTRACT_EXECUTION_VIOLATION_BREACH_TERMS_AND_CONDITIONS",
          "CONTRACT_EXECUTION_VIOLATION_INSUFFICIENT_FUNDS",
          "CONTRACT_EXECUTION_VIOLATION_WRONG_DENOMINATION",
          "CONTRACT_EXECUTION_VIOLATION_CLIENT_CUSTOM_REASON"
        ],
        "default": "CONTRACT_EXECUTION_VIOLATION_UNKNOWN",
        "description": "* ContractExecutionViolationType characterises a violation originating from contract code.",
        "x-enum-value-descriptions": {
          "CONTRACT_EXECUTION_VIOLATION_BREACH_TERMS_AND_CONDITIONS": "The instruction breaches the terms and conditions of the target account's contract.",
          "CONTRACT_EXECUTION_VIOLATION_CLIENT_CUSTOM_REASON": "The contract returned a custom reason for rejecting the instruction.",
          "CONTRACT_EXECUTION_VIOLATION_INSUFFICIENT_FUNDS": "The instruction cannot be applied due to insufficient funds.",
          "CONTRACT_EXECUTION_VIOLATION_UNKNOWN": "The contract execution violation type is unknown.",
          "CONTRACT_EXECUTION_VIOLATION_WRONG_DENOMINATION": "The instruction uses a denomination the contract code does not support."
        }
      },
      "posting_apiv1ContractViolation": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The ID of the account affected by the violation."
          },
          "type": {
            "$ref": "#/components/schemas/posting_apiv1ContractViolationType",
            "description": "The type of contract violation.",
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 4
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "A more accurate violation type is now provided in violation_type"
            }
          },
          "reason": {
            "type": "string",
            "description": "The reason for a contract violation."
          },
          "violation_type": {
            "$ref": "#/components/schemas/posting_apiv1ContractExecutionViolationType",
            "description": "The type of contract violation.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 4
              },
              "changeType": "ADD_FIELD"
            }
          }
        },
        "description": "* ContractViolation characterises a violation regarding contracts."
      },
      "posting_apiv1ContractViolationType": {
        "type": "string",
        "enum": [
          "CONTRACT_VIOLATION_BREACH_TERMS_AND_CONDITIONS",
          "CONTRACT_VIOLATION_INSUFFICIENT_FUNDS"
        ],
        "default": "CONTRACT_VIOLATION_BREACH_TERMS_AND_CONDITIONS",
        "description": "* ContractViolationType characterises a contract violation.",
        "x-enum-value-descriptions": {
          "CONTRACT_VIOLATION_BREACH_TERMS_AND_CONDITIONS": "The instruction breaches the terms and conditions of the target account's contract.",
          "CONTRACT_VIOLATION_INSUFFICIENT_FUNDS": "The Posting instruction cannot be applied due to insufficient funds."
        }
      },
      "posting_apiv1CustomInstruction": {
        "type": "object",
        "properties": {
          "postings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/posting_apiv1Posting"
            },
            "description": "A list of postings (credits and debits). The net sum of credit postings must equal the net sum of debit postings per asset/denomination/phase."
          }
        },
        "description": "* CustomInstruction specifies a list of credits and debits to be written to the ledger.\n\nFor this instruction Vault will perform the following checks: - There are 128 or fewer postings in the instruction - Net amounts credited and debited are equal - Idempotency - Account status - Account/customer/payment_device restrictions\n\n If they are accepted the resulting postings committed are specified by the postings field."
      },
      "posting_apiv1Enrichment": {
        "type": "object",
        "properties": {
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Metadata from pre-posting hook"
          }
        },
        "description": "* Instruction enrichment added by the Smart Contract through pre-posting."
      },
      "posting_apiv1InboundAuthorisation": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "The authorisation amount."
          },
          "denomination": {
            "type": "string",
            "description": "The instruction denomination."
          },
          "target_account": {
            "$ref": "#/components/schemas/posting_apiv1TargetAccount",
            "description": "The instruction `target_account`."
          },
          "internal_account_id": {
            "type": "string",
            "description": "The `internal_account_id` must be the ID of an internal account in Vault. This is an alternative to `internal_account_processing_label` and cannot be used in conjunction with it but one of these two fields must be specified."
          },
          "advice": {
            "type": "boolean",
            "description": "Can be set to true to ensure that funds are ringfenced regardless of the outcome of balance checks. To ensure that posting instructions with `advice` set to true are excluded from the contract balance check, the flag `exclude_advice` must also be set to true. See [Balance check](/reference/contracts/contracts_api_4xx/common_examples/#generic-balance_check)."
          },
          "target_account_id": {
            "type": "string",
            "description": "The `account_id` of the instruction's `target_account`.",
            "x-output-only": true
          },
          "internal_account_processing_label": {
            "type": "string",
            "title": "A processing label for specifying an Internal Account, which can be used instead of directly specifying an Internal Account ID. The Processing Group of the target Account determines which Internal Account this label will resolve to. This is an alternative to `internal_account_id` and cannot be used in conjunction with it but one of these two fields must be specified. <br><br>*Multiple Processing Groups are only available as an optional add-on.*",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 3
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "IMP_4_MULTIPLE_PROCESSING_GROUPS"
            }
          },
          "target_account_address": {
            "type": "string",
            "title": "The target account address of the instruction. Optional: if not supplied, it defaults to the DEFAULT address"
          },
          "asset": {
            "type": "string",
            "title": "The asset of the instruction. Optional: if not supplied, it defaults to the COMMERCIAL_BANK_MONEY asset"
          }
        },
        "description": "* InboundAuthorisation authorises incoming funds into the target_account.\n\nFor this instruction Vault will perform: - idempotency check - account resolution - account checks - account/customer/payment_device restrictions - contract execution\n\nResulting postings committed (if accepted):  - Dr | amount | internal_account_id | PHASE_PENDING_INCOMING  - Cr | amount | target_account_id   | PHASE_PENDING_INCOMING"
      },
      "posting_apiv1InboundHardSettlement": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "The instruction amount."
          },
          "denomination": {
            "type": "string",
            "description": "The instruction denomination."
          },
          "target_account": {
            "$ref": "#/components/schemas/posting_apiv1TargetAccount",
            "description": "The instruction `target_account`."
          },
          "internal_account_id": {
            "type": "string",
            "description": "The `internal_account_id` must be the ID of an internal account in Vault. This is an alternative to `internal_account_processing_label` and cannot be used in conjunction with it but one of these two fields must be specified."
          },
          "advice": {
            "type": "boolean",
            "description": "Can be set to true to ensure that funds are ringfenced regardless of the outcome of balance checks. To ensure that posting instructions with `advice` set to true are excluded from the contract balance check, the flag `exclude_advice` must also be set to true. See [Balance check](/reference/contracts/contracts_api_4xx/common_examples/#generic-balance_check)."
          },
          "target_account_id": {
            "type": "string",
            "description": "The `account_id` of the instruction's `target_account`.",
            "x-output-only": true
          },
          "internal_account_processing_label": {
            "type": "string",
            "title": "A processing label for specifying an Internal Account, which can be used instead of directly specifying an Internal Account ID. The Processing Group of the target Account determines which Internal Account this label will resolve to. This is an alternative to `internal_account_id` and cannot be used in conjunction with it but one of these two fields must be specified. <br><br>*Multiple Processing Groups are only available as an optional add-on.*",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 3
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "IMP_4_MULTIPLE_PROCESSING_GROUPS"
            }
          },
          "target_account_address": {
            "type": "string",
            "title": "The target account address of the instruction. Optional: if not supplied, it defaults to the DEFAULT address"
          },
          "asset": {
            "type": "string",
            "title": "The asset of the instruction. Optional: if not supplied, it defaults to the COMMERCIAL_BANK_MONEY asset"
          }
        },
        "description": "* InboundHardSettlement is an instruction that authorises and settles incoming funds into the target account.\n\nFor this instruction Vault will perform: - idempotency check - account resolution - account checks - account/customer/payment_device restrictions - contract execution\n\nResulting postings committed (if accepted): - Dr | amount | internal_account_id | PHASE_COMMITTED - Cr | amount | target_account_id   | PHASE_COMMITTED"
      },
      "posting_apiv1OutboundAuthorisation": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "The authorisation amount."
          },
          "denomination": {
            "type": "string",
            "description": "The instruction denomination."
          },
          "target_account": {
            "$ref": "#/components/schemas/posting_apiv1TargetAccount",
            "description": "The instruction `target_account`."
          },
          "internal_account_id": {
            "type": "string",
            "description": "The `internal_account_id` must be the ID of an internal account in Vault. This is an alternative to `internal_account_processing_label` and cannot be used in conjunction with it but one of these two fields must be specified."
          },
          "advice": {
            "type": "boolean",
            "description": "This can be set to true to ensure that funds are ringfenced regardless of the outcome of balance checks. To ensure that posting instructions with `advice` set to true are excluded from the contract balance check, the flag `exclude_advice` must also be set to true. See [Balance check](/reference/contracts/contracts_api_4xx/common_examples/#generic-balance_check)."
          },
          "target_account_id": {
            "type": "string",
            "description": "The `account_id` of the instruction's `target_account`.",
            "x-output-only": true
          },
          "internal_account_processing_label": {
            "type": "string",
            "title": "A processing label for specifying an Internal Account, which can be used instead of directly specifying an Internal Account ID. The Processing Group of the target Account determines which Internal Account this label will resolve to. This is an alternative to `internal_account_id` and cannot be used in conjunction with it but one of these two fields must be specified. <br><br>*Multiple Processing Groups are only available as an optional add-on.*",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 3
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "IMP_4_MULTIPLE_PROCESSING_GROUPS"
            }
          },
          "target_account_address": {
            "type": "string",
            "title": "The target account address of the instruction. Optional: if not supplied, it defaults to the DEFAULT address"
          },
          "asset": {
            "type": "string",
            "title": "The asset of the instruction. Optional: if not supplied, it defaults to the COMMERCIAL_BANK_MONEY asset"
          }
        },
        "description": "* OutboundAuthorisation creates a funds hold (ring-fence the funds) on the the target account.\n\nFor this instruction Vault will perform: - idempotency check - account resolution - account checks - account/customer/payment_device restrictions - contract execution\n\nResulting postings committed (if accepted):  - Dr | amount | target_account_id   | PHASE_PENDING_OUTGOING  - Cr | amount | internal_account_id | PHASE_PENDING_OUTGOING"
      },
      "posting_apiv1OutboundHardSettlement": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "The instruction amount."
          },
          "denomination": {
            "type": "string",
            "description": "The instruction denomination."
          },
          "target_account": {
            "$ref": "#/components/schemas/posting_apiv1TargetAccount",
            "description": "The instruction `target_account`."
          },
          "internal_account_id": {
            "type": "string",
            "description": "The `internal_account_id` must be the ID of an internal account in Vault. This is an alternative to `internal_account_processing_label` and cannot be used in conjunction with it but one of these two fields must be specified."
          },
          "advice": {
            "type": "boolean",
            "description": "Can be set to true to ensure that funds are ringfenced regardless of the outcome of balance checks. To ensure that posting instructions with `advice` set to true are excluded from the contract balance check, the flag `exclude_advice` must also be set to true. See [Balance check](/reference/contracts/contracts_api_4xx/common_examples/#generic-balance_check)."
          },
          "target_account_id": {
            "type": "string",
            "description": "The `account_id` of the instruction's `target_account`.",
            "x-output-only": true
          },
          "internal_account_processing_label": {
            "type": "string",
            "title": "A processing label for specifying an Internal Account, which can be used instead of directly specifying an Internal Account ID. The Processing Group of the target Account determines which Internal Account this label will resolve to. This is an alternative to `internal_account_id` and cannot be used in conjunction with it but one of these two fields must be specified. <br><br>*Multiple Processing Groups are only available as an optional add-on.*",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 3
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "IMP_4_MULTIPLE_PROCESSING_GROUPS"
            }
          },
          "target_account_address": {
            "type": "string",
            "title": "The target account address of the instruction. Optional: if not supplied, it defaults to the DEFAULT address"
          },
          "asset": {
            "type": "string",
            "title": "The asset of the instruction. Optional: if not supplied, it defaults to the COMMERCIAL_BANK_MONEY asset"
          }
        },
        "description": "* OutboundHardSettlement is an instruction that authorises and settles outgoing funds from the target account.\n\nFor this instruction Vault will perform: - idempotency check - account resolution - account checks - account/customer/payment_device restrictions - contract execution\n\nResulting postings committed (if accepted): - Dr | amount | target_account_id   | PHASE_COMMITTED - Cr | amount | internal_account_id | PHASE_COMMITTED"
      },
      "posting_apiv1Override": {
        "type": "object",
        "properties": {
          "restrictions": {
            "$ref": "#/components/schemas/posting_apiv1OverrideRestrictions",
            "description": "OverrideRestrictions is used to override restriction checks for a posting instruction."
          }
        },
        "description": "Override is used to override certain checks for a posting instruction."
      },
      "posting_apiv1OverrideRestrictions": {
        "type": "object",
        "properties": {
          "all": {
            "type": "boolean",
            "description": "The caller may choose to override all account restriction checks for a posting instruction by setting this field to true."
          },
          "restriction_set_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The caller may choose to override certain account restrictions by passing its restriction set ID here."
          }
        },
        "description": "OverrideRestrictions allows a caller to skip all or some restrictions from impacting a PostingInstruction. Caller may not set more than one field. As such, either the `all`, or the `restriction_set_ids` field may be set.\n\nNote that the restrictions specified here will be overridden for each account targeted by this PostingInstruction."
      },
      "posting_apiv1Posting": {
        "type": "object",
        "properties": {
          "credit": {
            "type": "boolean",
            "description": "Indicates whether the posting is a credit or debit."
          },
          "amount": {
            "type": "string",
            "description": "The posting amount."
          },
          "denomination": {
            "type": "string",
            "description": "The posting denomination."
          },
          "account_id": {
            "type": "string",
            "description": "The ID of the Vault account being posted to."
          },
          "account_address": {
            "type": "string",
            "description": "The address of the Vault account being posted to."
          },
          "asset": {
            "type": "string",
            "description": "The asset value of the posting."
          },
          "phase": {
            "$ref": "#/components/schemas/posting_phasePostingPhase",
            "description": "The posting phase."
          },
          "internal_account_processing_label": {
            "type": "string",
            "title": "You can use a processing label to specify an Internal Account as part of a Custom Instruction instead of directly referencing an account ID. If you use a processing label in a CustomInstruction, there must be at least one posting in the same instruction that does not use a label, using the account_id instead. The internal account then resolves using the processing group of the account identified by this account_id. If a posting of a CustomInstruction using a processing label does not contain an account_id, this request will fail. You also cannot instruct a CustomInstruction in which labels are used in all its postings. <br><br>*Multiple Processing Groups are only available as an optional add-on.*",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 3
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "IMP_4_MULTIPLE_PROCESSING_GROUPS"
            }
          }
        },
        "description": "* Posting represents a Credit/Debit of funds to an account_id/account_address."
      },
      "posting_apiv1PostingInstruction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Created by Vault. This uniquely identifies the posting instruction in Vault.",
            "x-output-only": true
          },
          "posting_instruction_batch_id": {
            "type": "string",
            "description": "The ID of the posting instruction batch that created this instruction.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "client_transaction_id": {
            "type": "string",
            "title": "Set by the client. This is the ID of the client transaction this posting instruction is creating or mutating. Required.<br><br>-For primary (initiating) posting instructions this must be unique for a given `client_id`<br>-For secondary (subsequent, chained) posting instructions this must refer to a previous `client_transaction_id`"
          },
          "pics": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Posting Identification Codes that can be associated to posting instruction, and consumed by downstream processes.",
            "x-release-info": {
              "noticeVersion": {
                "major": 1,
                "minor": 10
              },
              "releaseVersion": {
                "major": 6
              },
              "changeType": "REMOVE_FIELD",
              "description": "Metadata should instead be attached via the instruction details field"
            }
          },
          "instruction_details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Stores metadata related to the posting instruction. Contract execution will have access to these. If a restriction has exemption conditions and all the exemption conditions are present as key-value pairs, the restriction will not be applied to this posting instruction."
          },
          "committed_postings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/posting_apiv1Posting"
            },
            "description": "Contains the list of Postings written to the Posting ledger if the posting instruction was accepted.",
            "x-output-only": true
          },
          "posting_violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/posting_apiv1PostingViolation"
            },
            "description": "Captures rejection reasons caused by posting logic validity checks. For example: Cannot adjust an authorisation that has already been settled.",
            "x-output-only": true
          },
          "account_violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/posting_apiv1AccountViolation"
            },
            "description": "Captures rejection reasons and details caused by account checks. For example: Account closed.",
            "x-output-only": true
          },
          "restriction_violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/posting_apiv1RestrictionViolation"
            },
            "description": "Captures rejection reasons and rejection details caused by restrictions. For example: Restriction with ID 'xyz123' prevented this instruction.",
            "x-output-only": true
          },
          "contract_violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/posting_apiv1ContractViolation"
            },
            "description": "Captures rejection reasons and rejection details caused by contract execution. For example: Insufficient funds.",
            "x-output-only": true
          },
          "override": {
            "$ref": "#/components/schemas/posting_apiv1Override",
            "description": "Allows the caller to override certain checks for this PostingInstruction."
          },
          "transaction_code": {
            "$ref": "#/components/schemas/posting_apiv1TransactionCode",
            "description": "ISO20022 Bank Transaction Code field, a set of properties to identify underlying transaction."
          },
          "booking_localised_date_time": {
            "type": "string",
            "description": "An RFC 3339 compliant date/time string representing the `booking_timestamp` of the PostingInstructionBatch, localised into the time zone of the processing group associated with accounts referenced in this PostingInstruction. As the processing group may change over time, this field will not be populated for future-booked postings.",
            "x-output-only": true
          },
          "value_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Specifies the time at which all committed postings of this PostingInstruction will affect balances. For most cases, including real time payments or fund movements, this does not require setting and will default to the generated `insertion_timestamp`. Should only be set for backdated and future-dated instructions and must be between 1970-01-01T00:00:00Z and the current time + 90 calendar days, inclusive. Defaults to the `insertion_timestamp` in UTC.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "booking_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Specifies the time at which all committed postings of this PostingInstruction will be booked. For most cases, including real time payments or fund movements, this does not require setting and will default to the `insertion_timestamp`. Should only be set for back-booked and future-booked instructions and must be between 1970-01-01T00:00:00Z and the current time + 90 calendar days, inclusive. Defaults to the `insertion_timestamp` in UTC.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "insertion_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Specifies the time the posting instruction was inserted in Vault.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "source_insertion_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Specifies the time the posting instruction was inserted in the source core banking engine. Will always have the same value as `insertion_timestamp` unless posting instruction was migrated into Vault via the Posting Migration API.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "enrichments": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/posting_apiv1Enrichment"
            },
            "description": "Shows enrichment data for this Posting Instruction made by a Contract Pre-Posting Hook. Keyed by account ID. Output-only, except for Migration Postings API requests.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "IMP_1154_ENRICH_POSTING_INSTRUCTIONS"
            }
          },
          "outbound_authorisation": {
            "$ref": "#/components/schemas/posting_apiv1OutboundAuthorisation",
            "required": false
          },
          "inbound_authorisation": {
            "$ref": "#/components/schemas/posting_apiv1InboundAuthorisation",
            "required": false
          },
          "authorisation_adjustment": {
            "$ref": "#/components/schemas/posting_apiv1AuthorisationAdjustment",
            "required": false
          },
          "settlement": {
            "$ref": "#/components/schemas/posting_apiv1Settlement",
            "required": false
          },
          "release": {
            "$ref": "#/components/schemas/posting_apiv1Release",
            "required": false
          },
          "inbound_hard_settlement": {
            "$ref": "#/components/schemas/posting_apiv1InboundHardSettlement",
            "required": false
          },
          "outbound_hard_settlement": {
            "$ref": "#/components/schemas/posting_apiv1OutboundHardSettlement",
            "required": false
          },
          "transfer": {
            "$ref": "#/components/schemas/posting_apiv1Transfer",
            "required": false
          },
          "custom_instruction": {
            "$ref": "#/components/schemas/posting_apiv1CustomInstruction",
            "required": false
          }
        },
        "description": "* A PostingInstruction acts against a client transaction. Vault offers a set of predefined PostingInstruction types, which each following a specific set of execution rules. A PostingInstruction may result in a balanced set of committed Postings to the ledger. OutboundAuthorisations and InboundAuthorisations initiate a client transaction, which can then be acted upon, by the AuthorisationAdjustment, Settlement and Release instruction types. CustomInstruction, OutboundHardSettlement, InboundHardSettlement and Transfer instructions initiate and close a client transaction. As such, no other instructions can subsequently act on their client transactions. If accepted, a PostingInstruction is translated into a balanced set of Postings which are persisted atomically to the Posting Ledger."
      },
      "posting_apiv1PostingInstructionBatch": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Uniquely identifies a posting instruction batch in Vault.",
            "x-output-only": true
          },
          "create_request_id": {
            "type": "string",
            "description": "The `request_id` of the `create-posting-instruction-batch` request.",
            "x-output-only": true
          },
          "client_id": {
            "type": "string",
            "description": "Client Transactions must be unique for a given client ID. Required. <br>- Asynchronous API: Uniquely identifies a client of the Postings API. This must refer to an existing Postings API Client resource, which then determines the Kafka topic to which responses are published.<br> - Synchronous API: See the [Postings documentation](/api/postings_api/#sync-using_the_api) for information about chaining Posting Instruction Batch requests."
          },
          "client_batch_id": {
            "type": "string",
            "description": "A correlation ID across different posting instruction batches. This drives no direct behaviour in Vault, but may be used as a filter for listing posting instruction batches. It is also used as the Kafka partition key for responses and events. The suggested use is to set the same `client_batch_id` across batches that contain posting instructions for the same financial transaction. Required."
          },
          "posting_instructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/posting_apiv1PostingInstruction"
            },
            "description": "A non-empty list of posting instruction objects to be processed atomically. Required."
          },
          "batch_details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Stores metadata related to the posting instruction batch resource. These details can also be retrieved in the posting instruction resource. Optional."
          },
          "value_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Specifies the time at which all committed postings of this batch's posting instructions will affect balances. For most cases, including real time payments or fund movements, this does not require setting and will default to the generated `insertion_timestamp`. Only backdating of posting instruction batches is supported; this means that you cannot set them to be in the future, as determined by the clock of the ledger service. The earliest allowed value is 1970-01-01T00:00:00Z. Optional; defaults to the insertion timestamp in UTC.",
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 5
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "This field is replaced by the value_timestamp in the PostingInstruction. Deprecated only in the Postings API - not deprecated in the Postings Migration API."
            }
          },
          "booking_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Optional. Specifies the booking time of all committed postings of this batch's Posting Instructions. Defaults to `value_timestamp` (which, in turn, defaults to `insertion_timestamp`). Can only be used for back-booked Posting Instruction Batches (PIBs), and can only be set if `value_timestamp` is also passed in the request; in which case `booking_timestamp` must be later than `value_timestamp`.",
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 5
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "This field is replaced by the booking_timestamp in the PostingInstruction. Deprecated only in the Postings API - not deprecated in the Postings Migration API."
            }
          },
          "status": {
            "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatchStatus",
            "description": "The status of the processing of the posting instruction batch.",
            "x-output-only": true
          },
          "error": {
            "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatchError",
            "description": "Any errors generated while trying to process the posting instruction batch. If any errors are present, the batch errors and nothing is committed to the database.",
            "x-output-only": true
          },
          "insertion_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Specifies the time this posting instruction batch was inserted in Vault.",
            "x-output-only": true
          },
          "source_insertion_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Specifies the time this posting instruction batch was inserted in the source core banking engine. Will always have the same value as `insertion_timestamp` unless the posting instruction batch was migrated into Vault via the Posting Migration API.",
            "x-output-only": true
          },
          "dry_run": {
            "type": "boolean",
            "description": "If true, the `create-posting-instruction-batch` request did not have any side effects and no posting instruction batch resource was created. For more information, see [Emulating Postings operations](/api/postings_api/#postings_apis-emulating_postings_operations).",
            "x-output-only": true
          }
        },
        "description": "* PostingInstructionBatch is an atomic wrapper around PostingInstructions. All PostingInstruction within a PostingInstructionBatch are either all accepted, all rejected or all errored out."
      },
      "posting_apiv1PostingInstructionBatchError": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatchErrorType",
            "description": "The type of error returned."
          },
          "message": {
            "type": "string",
            "description": "Contains human-readable information about the error raised."
          }
        },
        "description": "* An InstructionBatchError holds information about an error encountered while trying to process an CreatePostingInstructionBatchRequest."
      },
      "posting_apiv1PostingInstructionBatchErrorType": {
        "type": "string",
        "enum": [
          "POSTING_INSTRUCTION_BATCH_ERROR_TYPE_INVALID_ARGUMENT",
          "POSTING_INSTRUCTION_BATCH_ERROR_TYPE_INTERNAL",
          "POSTING_INSTRUCTION_BATCH_ERROR_TYPE_TTL_EXPIRED"
        ],
        "default": "POSTING_INSTRUCTION_BATCH_ERROR_TYPE_INVALID_ARGUMENT",
        "description": "* A PostingInstructionBatchErrorType is the type a PostingInstructionBatchError. The Vault Postings API are idempotent, and where adviced, requests can be retried. Each error indicates whether it is retriable or non-retriable.",
        "x-enum-value-descriptions": {
          "POSTING_INSTRUCTION_BATCH_ERROR_TYPE_INTERNAL": "An internal error occurred due to unexpected condition while processing the request. Can Retry.",
          "POSTING_INSTRUCTION_BATCH_ERROR_TYPE_INVALID_ARGUMENT": "CreatePostingInstructionBatchRequest contains invalid arguments and the request cannot be processed. See the error message for more details. Cannot Retry.",
          "POSTING_INSTRUCTION_BATCH_ERROR_TYPE_TTL_EXPIRED": "A time to live expiry error occured because the requested `time_to_live` timestamp has expired. Cannot Retry."
        }
      },
      "posting_apiv1PostingInstructionBatchStatus": {
        "type": "string",
        "enum": [
          "POSTING_INSTRUCTION_BATCH_STATUS_UNKNOWN",
          "POSTING_INSTRUCTION_BATCH_STATUS_ACCEPTED",
          "POSTING_INSTRUCTION_BATCH_STATUS_REJECTED"
        ],
        "default": "POSTING_INSTRUCTION_BATCH_STATUS_UNKNOWN",
        "description": "* The status of the posting instruction batch.",
        "x-enum-value-descriptions": {
          "POSTING_INSTRUCTION_BATCH_STATUS_ACCEPTED": "The PostingInstructionBatch has been accepted and Postings have been committed to the ledger.",
          "POSTING_INSTRUCTION_BATCH_STATUS_REJECTED": "The PostingInstructionBatch has been rejected and no Postings have been committed to the ledger.",
          "POSTING_INSTRUCTION_BATCH_STATUS_UNKNOWN": "Default value."
        }
      },
      "posting_apiv1PostingViolation": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/posting_apiv1PostingViolationType",
            "description": "The type of violation."
          }
        },
        "description": "* PostingViolation describes a Posting API violation."
      },
      "posting_apiv1PostingViolationType": {
        "type": "string",
        "enum": [
          "POSTING_VIOLATION_CLIENT_TRANSACTION_ALREADY_EXISTS",
          "POSTING_VIOLATION_CLIENT_TRANSACTION_DOES_NOT_EXIST",
          "POSTING_VIOLATION_ADJUSTMENT_YIELDS_AUTHORISATION_WITH_NEGATIVE_AMOUNT",
          "POSTING_VIOLATION_CLIENT_TRANSACTION_CLOSED",
          "POSTING_VIOLATION_CLIENT_TRANSACTION_INVALID_OPERATION"
        ],
        "default": "POSTING_VIOLATION_CLIENT_TRANSACTION_ALREADY_EXISTS",
        "description": "* PostingViolationType characterises a Posting API violation.",
        "x-enum-value-descriptions": {
          "POSTING_VIOLATION_ADJUSTMENT_YIELDS_AUTHORISATION_WITH_NEGATIVE_AMOUNT": "An AuthorisationAdjustment yields an authorisation with a negative amount.",
          "POSTING_VIOLATION_CLIENT_TRANSACTION_ALREADY_EXISTS": "An OutboundAuthorisation, InboundAuthorisation, Transfer, OutboundHardSettlement or InboundHardSettlement specifies a `client_transaction_id` which already exists in the namespace of the `client_id`.",
          "POSTING_VIOLATION_CLIENT_TRANSACTION_CLOSED": "An instruction is attempting to mutate a client transaction that has been closed.",
          "POSTING_VIOLATION_CLIENT_TRANSACTION_DOES_NOT_EXIST": "An AuthorisationAdjustment, Settlement, Release is referring to a non existent client transaction.",
          "POSTING_VIOLATION_CLIENT_TRANSACTION_INVALID_OPERATION": "An instruction is being added to a client transaction where the `value_timestamp` is not strictly later than the current latest instruction, or the instruction being processed would create a client transaction which has a combination of CustomInstructions and other instruction types."
        }
      },
      "posting_apiv1Release": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "The amount released.",
            "x-output-only": true
          },
          "denomination": {
            "type": "string",
            "description": "The instruction release denomination.",
            "x-output-only": true
          },
          "target_account_id": {
            "type": "string",
            "description": "The instruction `target_account_id`.",
            "x-output-only": true
          },
          "internal_account_id": {
            "type": "string",
            "description": "The instruction `internal_account_id`. This is an alternative to `internal_account_processing_label` and cannot be used in conjunction with it but one of these two fields must be specified.",
            "x-output-only": true
          },
          "require_pre_posting_hook_execution": {
            "type": "boolean",
            "description": "If set to true, the pre-posting hook will be triggered for this instruction. Optional; if not supplied, the pre-posting hook may be triggered by other instructions within this batch, but this instruction will not be visible to the hook.",
            "x-release-info": {
              "releaseVersion": {
                "major": 3,
                "minor": 1
              },
              "changeType": "ADD_FIELD"
            }
          },
          "internal_account_processing_label": {
            "type": "string",
            "title": "A processing label for specifying an Internal Account, which can be used instead of directly specifying an Internal Account ID. The Processing Group of the target Account determines which Internal Account this label will resolve to. This is an alternative to `internal_account_id` and cannot be used in conjunction with it but one of these two fields must be specified. <br><br>*Multiple Processing Groups are only available as an optional add-on.*",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 3
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "IMP_4_MULTIPLE_PROCESSING_GROUPS"
            }
          },
          "target_account_address": {
            "type": "string",
            "description": "The target account address of the instruction.",
            "x-output-only": true
          },
          "asset": {
            "type": "string",
            "description": "The asset of the instruction.",
            "x-output-only": true
          }
        },
        "description": "* Release removes an authorisation hold. The client transaction being released is identified by the client_transaction_id in the parent PostingInstruction.\n\nNote: No other Posting Instructions will be accepted after the transaction has been released.\n\nFor this instruction Vault will perform: - idempotency check - Posting logic checks (was there an Inbound or Outbound authorisation for it? was accepted?) - check that underlying authorisation we are settling is still in a clearing state. (No Release   or final Settlement received). - if require_pre_posting_hook_execution is set to true, then the pre-posting hook will be   triggered for this instruction.\n\n Note  - ringfenced_amount = initial OutboundAuth/InboundAuth amount \t\t\t\t          + AuthAdjustment amounts (these can be +ve or -ve) \t\t\t\t          - Settlement amounts\n\nResulting postings committed (if accepted):\n\n <> Release of OutboundAuthorisation:   - Dr | ringfenced_amount | auth[internal_account_id] | PHASE_PENDING_OUTGOING   - Cr | ringfenced_amount | auth[target_account_id]   | PHASE_PENDING_OUTGOING  <> Release of InboundAuthorisation:   - Dr | ringfenced_amount | auth[target_account_id]   | PHASE_PENDING_INCOMING   - Cr | ringfenced_amount | auth[internal_account_id] | PHASE_PENDING_INCOMING"
      },
      "posting_apiv1RestrictionViolation": {
        "type": "object",
        "properties": {
          "restriction_set_id": {
            "type": "string",
            "description": "Uniquely identifies this restriction in Vault."
          },
          "account_id": {
            "type": "string",
            "description": "This is set if this restriction violation is applied at an account level."
          },
          "payment_device_id": {
            "type": "string",
            "description": "This is set if this restriction violation is applied at a payment device level."
          },
          "customer_id": {
            "type": "string",
            "description": "This is set if this restriction violation is applied at a customer level."
          },
          "requires_review": {
            "type": "boolean",
            "description": "If true, this restriction requires review. Otherwise it simply prevents it."
          },
          "type": {
            "$ref": "#/components/schemas/posting_apiv1RestrictionViolationType",
            "description": "The type of restriction violation. For instructions instructed prior to Vault version 5.4, this will be returned as `RESTRICTION_VIOLATION_TYPE_UNKNOWN`.",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 4
              },
              "changeType": "ADD_FIELD"
            }
          }
        },
        "description": "* RestrictionViolation characterises a violation regarding restriction."
      },
      "posting_apiv1RestrictionViolationType": {
        "type": "string",
        "enum": [
          "RESTRICTION_VIOLATION_TYPE_UNKNOWN",
          "RESTRICTION_VIOLATION_TYPE_PREVENT_CREDITS",
          "RESTRICTION_VIOLATION_TYPE_PREVENT_DEBITS",
          "RESTRICTION_VIOLATION_TYPE_REVIEW_CREDITS",
          "RESTRICTION_VIOLATION_TYPE_REVIEW_DEBITS",
          "RESTRICTION_VIOLATION_TYPE_LIMIT_CREDITS",
          "RESTRICTION_VIOLATION_TYPE_LIMIT_DEBITS"
        ],
        "default": "RESTRICTION_VIOLATION_TYPE_UNKNOWN",
        "description": "The restriction violation type.",
        "x-enum-value-descriptions": {
          "RESTRICTION_VIOLATION_TYPE_LIMIT_CREDITS": "A restriction violation type that was caused by a restriction which limits credits.",
          "RESTRICTION_VIOLATION_TYPE_LIMIT_DEBITS": "A restriction violation type that was caused by a restriction which limits debits.",
          "RESTRICTION_VIOLATION_TYPE_PREVENT_CREDITS": "A restriction violation type that was caused by a restriction which prevents credits.",
          "RESTRICTION_VIOLATION_TYPE_PREVENT_DEBITS": "A restriction violation type that was caused by a restriction which prevents debits.",
          "RESTRICTION_VIOLATION_TYPE_REVIEW_CREDITS": "A restriction violation type that was caused by a restriction which requires reviewing credits.",
          "RESTRICTION_VIOLATION_TYPE_REVIEW_DEBITS": "A restriction violation type that was caused by a restriction which requires reviewing debits.",
          "RESTRICTION_VIOLATION_TYPE_UNKNOWN": "An unknown restriction type."
        }
      },
      "posting_apiv1Settlement": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "The amount to be cleared. Optional: if not supplied it will be calculated as amount = total amount authorised for this client transaction - total amount cleared."
          },
          "final": {
            "type": "boolean",
            "description": "If set to true, any remaining amount authorised for this client transaction will be released. No instruction may mutate a client transaction once a final settlement has mutated it."
          },
          "denomination": {
            "type": "string",
            "description": "The instruction denomination.",
            "x-output-only": true
          },
          "target_account_id": {
            "type": "string",
            "description": "The instruction `target_account_id`.",
            "x-output-only": true
          },
          "internal_account_id": {
            "type": "string",
            "description": "The instruction `internal_account_id`. This is an alternative to `internal_account_processing_label` and cannot be used conjunction, but one of these two fields must be specified.",
            "x-output-only": true
          },
          "require_pre_posting_hook_execution": {
            "type": "boolean",
            "description": "If set to true, the pre-posting hook will be triggered for this instruction. Optional; if not supplied, the pre-posting hook may be triggered by other instructions within this batch, but this instruction will not be visible to the hook.",
            "x-release-info": {
              "releaseVersion": {
                "major": 3,
                "minor": 1
              },
              "changeType": "ADD_FIELD"
            }
          },
          "internal_account_processing_label": {
            "type": "string",
            "title": "A processing label for specifying an Internal Account, which can be used instead of directly specifying an Internal Account ID. The Processing Group of the target Account determines which Internal Account this label will resolve to. This is an alternative to `internal_account_id` and cannot be used in conjunction with it but one of these two fields must be specified. <br><br>*Multiple Processing Groups are only available as an optional add-on.*",
            "x-output-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 3
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "IMP_4_MULTIPLE_PROCESSING_GROUPS"
            }
          },
          "target_account_address": {
            "type": "string",
            "description": "The target account address of the instruction.",
            "x-output-only": true
          },
          "asset": {
            "type": "string",
            "description": "The asset of the instruction.",
            "x-output-only": true
          }
        },
        "description": "* Settlement clears funds that have previously been authorised.\n\nSettlements can only act on client transactions that have not been release or settled with the final flag set.\n\nFor this instruction Vault will perform: - idempotency check - Posting logic checks (whether or not there was an accepted InboundAuthorisation or   OutboundAuthorisation for the same client transaction) - check that underlying authorisation we are settling is still in a clearing state.   (No Release or final Settlement received). - if the amount is specified and it's different than the authorisation hold, then Vault will   create additional postings to reflect the change. Please note that this may bring the account   balance negative, as contract execution won't be performed. - if final is set to true, Vault will release any outstanding balance ring-fenced by the original   authorisation. - if require_pre_posting_hook_execution is set to true, then the pre-posting hook will be   triggered for this instruction.\n\nNote: in the below examples for a given client_transaction_id:  - ringfenced_amount = initial OutboundAuth/InboundAuth amount \t\t\t\t          + AuthAdjustment amounts (these can be +ve or -ve) \t\t\t\t          - Settlement amounts\n\nResulting postings committed (if accepted):\n\nPostings for Settlement of OutboundAuthorisation:  <> Settlement of OutboundAuthorisation and amount = ringfenced_amount and final = true/false:   - Cr | amount                  | auth[target_account_id]   | PHASE_PENDING_OUTGOING   - Dr | amount                  | auth[internal_account_id] | PHASE_PENDING_OUTGOING   - Dr | amount                  | auth[target_account_id]   | PHASE_COMMITTED   - Cr | amount                  | auth[internal_account_id] | PHASE_COMMITTED\n\n <> Settlement of OutboundAuthorisation and amount > ringfenced_amount and final = true/false:   - Cr | ringfenced_amount       | auth[target_account_id]   | PHASE_PENDING_OUTGOING   - Dr | ringfenced_amount       | auth[internal_account_id] | PHASE_PENDING_OUTGOING   - Dr | amount                  | auth[target_account_id]   | PHASE_COMMITTED   - Cr | amount                  | auth[internal_account_id] | PHASE_COMMITTED\n\n <> Settlement of OutboundAuthorisation and amount < ringfenced_amount and final = false:   - Cr | amount                  | auth[target_account_id]   | PHASE_PENDING_OUTGOING   - Dr | amount                  | auth[internal_account_id] | PHASE_PENDING_OUTGOING   - Dr | amount                  | auth[target_account_id]   | PHASE_COMMITTED   - Cr | amount                  | auth[internal_account_id] | PHASE_COMMITTED\n\n <> Settlement of OutboundAuthorisation and amount < ringfenced_amount and final = true:   - Cr | ringfenced_amount       | auth[target_account_id]   | PHASE_PENDING_OUTGOING   - Dr | ringfenced_amount       | auth[internal_account_id] | PHASE_PENDING_OUTGOING   - Dr | amount                  | auth[target_account_id]   | PHASE_COMMITTED   - Cr | amount                  | auth[internal_account_id] | PHASE_COMMITTED\n\n--------------------------------------------------------------------------------------\n\n Postings for Settlement of InboundAuthorisation:  <> Settlement of InboundAuthorisation and amount = ringfenced_amount and final = true/false:   - Dr | amount                  | auth[target_account_id]   | PHASE_PENDING_INCOMING   - Cr | amount                  | auth[internal_account_id] | PHASE_PENDING_INCOMING   - Cr | amount                  | auth[target_account_id]   | PHASE_COMMITTED   - Dr | amount                  | auth[internal_account_id] | PHASE_COMMITTED\n\n <> Settlement of InboundAuthorisation and amount > ringfenced_amount and final = true/false:   - Dr | ringfenced_amount       | auth[target_account_id]   | PHASE_PENDING_INCOMING   - Cr | ringfenced_amount       | auth[internal_account_id] | PHASE_PENDING_INCOMING   - Cr | amount                  | auth[target_account_id]   | PHASE_COMMITTED   - Dr | amount                  | auth[internal_account_id] | PHASE_COMMITTED\n\n <> Settlement of InboundAuthorisation and amount < ringfenced_amount and final = false:   - Dr | amount                  | auth[target_account_id]   | PHASE_PENDING_INCOMING   - Cr | amount                  | auth[internal_account_id] | PHASE_PENDING_INCOMING   - Cr | amount                  | auth[target_account_id]   | PHASE_COMMITTED   - Dr | amount                  | auth[internal_account_id] | PHASE_COMMITTED\n\n <> Settlement of InboundAuthorisation and amount < ringfenced_amount and final = true:   - Dr | ringfenced_amount       | auth[target_account_id]   | PHASE_PENDING_INCOMING   - Cr | ringfenced_amount       | auth[internal_account_id] | PHASE_PENDING_INCOMING   - Cr | amount                  | auth[target_account_id]   | PHASE_COMMITTED   - Dr | amount                  | auth[internal_account_id] | PHASE_COMMITTED"
      },
      "posting_apiv1TargetAccount": {
        "type": "object",
        "properties": {
          "payment_device_token": {
            "$ref": "#/components/schemas/payment_device_token",
            "required": false
          },
          "account_id": {
            "$ref": "#/components/schemas/account_id",
            "required": false
          }
        },
        "description": "* TargetAccount describes an account being targeted by a Posting instruction."
      },
      "posting_apiv1TransactionCode": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Business area of the transaction."
          },
          "family": {
            "type": "string",
            "description": "A family within the domain."
          },
          "subfamily": {
            "type": "string",
            "description": "Sub-product family within a specific family."
          }
        },
        "description": "ISO20022 Bank Transaction Code."
      },
      "posting_apiv1Transfer": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "The amount to transfer."
          },
          "denomination": {
            "type": "string",
            "description": "The instruction denomination."
          },
          "debtor_target_account": {
            "$ref": "#/components/schemas/posting_apiv1TargetAccount",
            "description": "The account being debited."
          },
          "debtor_target_account_id": {
            "type": "string",
            "description": "The `account_id` of the debtor.",
            "x-output-only": true
          },
          "creditor_target_account": {
            "$ref": "#/components/schemas/posting_apiv1TargetAccount",
            "description": "The account being credited."
          },
          "creditor_target_account_id": {
            "type": "string",
            "description": "The `account_id` of the creditor.",
            "x-output-only": true
          }
        },
        "description": "Transfer PostingInstruction models an atomic transaction, no Adjustments, Settlements or other instructions can be passed with the same client_transaction_id.\n\nFor this instruction Vault will perform: - idempotency check - account resolution - account checks on both debitor and creditor's accounts - account/customer/payment_device restrictions on both debitor and creditor's accounts - contract execution on both debitor and creditor's accounts\n\nResulting postings committed (if accepted): - Dr | amount | debtor_account_id   | PHASE_COMMITTED - Cr | amount | creditor_account_id | PHASE_COMMITTED",
        "title": "* Transfer is an instruction that moves funds from the debtor to the creditor target account"
      },
      "v1account_attributesListAccountAttributeValuesRequest": {
        "type": "object",
        "properties": {
          "page_size": {
            "type": "integer",
            "format": "int64",
            "description": "The page size of Account Attribute values to be returned. Maximum 100. Required."
          },
          "page_token": {
            "type": "string",
            "description": "Token of the page to retrieve. If empty, returns the first page of results. Optional."
          },
          "account_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Account IDs to filter values on. Required."
          },
          "attribute_names": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Attribute Names to filter values on. Required."
          },
          "effective_timestamps": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Effective timestamp values to filter on, each to be passed to the `attribute_hook` calculation as `effective_datetime`. Formatted as an RFC3339 timestamp. If unspecified, defaults to a single effective timestamp using the current system time."
          }
        }
      },
      "v1accounts_commonAccountNote": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the AccountNote."
          },
          "account_id": {
            "type": "string",
            "description": "The ID of the Account the AccountNote applies to."
          },
          "body": {
            "type": "string",
            "description": "The body of the AccountNote; see the type field for its meaning."
          },
          "type": {
            "$ref": "#/components/schemas/v1accounts_commonAccountNoteType",
            "description": "The \"type\" of the note, i.e. how to interpret the body field."
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The logical time the AccountNote was created at in UTC. Formatted as an RFC3339 timestamp."
          },
          "is_visible_to_customer": {
            "type": "boolean",
            "description": "Whether the AccountNote is visible to customers or internal only."
          }
        }
      },
      "v1accounts_commonAccountNoteType": {
        "type": "string",
        "enum": [
          "ACCOUNT_NOTE_TYPE_UNKNOWN",
          "ACCOUNT_NOTE_TYPE_RAW_TEXT",
          "ACCOUNT_NOTE_TYPE_REASON_CODE"
        ],
        "default": "ACCOUNT_NOTE_TYPE_UNKNOWN",
        "x-enum-value-descriptions": {
          "ACCOUNT_NOTE_TYPE_RAW_TEXT": "The body is a literal string containing plaintext.",
          "ACCOUNT_NOTE_TYPE_REASON_CODE": "The body contains a reason code.",
          "ACCOUNT_NOTE_TYPE_UNKNOWN": "Default value."
        }
      },
      "v1contract_notificationResource": {
        "type": "string",
        "enum": [
          "RESOURCE_UNKNOWN",
          "RESOURCE_ACCOUNT",
          "RESOURCE_PLAN",
          "RESOURCE_SERVICING_GROUP"
        ],
        "default": "RESOURCE_UNKNOWN",
        "description": "Resource is used to represent if a notification was generated by an account, plan, or servicing group resource (i.e. a smart, supervisor, or servicing contract respectively).",
        "x-enum-value-release-info": {
          "RESOURCE_SERVICING_GROUP": {
            "changeType": "ADD_ENUM_VALUE",
            "featureFlag": "IMP_681_SERVICING_GROUPS"
          }
        },
        "x-enum-value-descriptions": {
          "RESOURCE_ACCOUNT": "Indicates that the ContractNotificationEvent was generated for an Account resource.",
          "RESOURCE_PLAN": "Indicates that the ContractNotificationEvent was generated for a Plan resource.",
          "RESOURCE_SERVICING_GROUP": "Indicates that the ContractNotificationEvent was generated for a Servicing Group resource.",
          "RESOURCE_UNKNOWN": "Default value."
        }
      },
      "v1contractsAccountAttributeValues": {
        "type": "object",
        "properties": {
          "account_attribute_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1account_attributesAccountAttributeValue"
            },
            "description": "Account Attribute Values calculated for the account."
          }
        }
      },
      "v1contractsAccountNotes": {
        "type": "object",
        "properties": {
          "account_notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1accounts_commonAccountNote"
            },
            "description": "Account notes for the account."
          }
        }
      },
      "v1contractsBalances": {
        "type": "object",
        "properties": {
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1balancesBalance"
            },
            "description": "Balances for the account."
          }
        }
      },
      "v1contractsContractNotificationEvents": {
        "type": "object",
        "properties": {
          "contract_notification_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/core_apiv1contractsContractNotificationEvent"
            },
            "title": "Contract notification events for the plan or account"
          }
        }
      },
      "v1contractsCreateGlobalParameterInstruction": {
        "type": "object",
        "properties": {
          "global_parameter": {
            "$ref": "#/components/schemas/v1global_parametersGlobalParameter",
            "description": "The `GlobalParameter` to be created.",
            "x-excluded-fields": [
              "create_timestamp"
            ]
          },
          "initial_value": {
            "type": "string",
            "description": "This will be used to create a `GlobalParameterValue` associated with the newly created `GlobalParameter`."
          }
        }
      },
      "v1contractsDerivedParamsOutputRequest": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The account ID that derived parameters are to be retrieved for."
          }
        }
      },
      "v1contractsDerivedParamsVals": {
        "type": "object",
        "properties": {
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The values of the derived parameters."
          }
        }
      },
      "v1contractsExistingAccount": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "ID used to reference an existing Account from the Vault instance.\n\nRequired."
          },
          "is_internal": {
            "type": "boolean",
            "description": "Identifies whether the existing Account is an internal account or not. If unspecified, will default to being a non internal account."
          }
        },
        "required": [
          "account_id"
        ]
      },
      "v1contractsExistingContractModule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID used to reference an existing Contract Module Version from the Vault instance.\n\nRequired."
          }
        },
        "required": [
          "id"
        ]
      },
      "v1contractsExistingProductDataBehaviour": {
        "type": "object",
        "properties": {
          "include_all": {
            "type": "boolean",
            "description": "Specify one of fields `include_all` or `include_data_types`. Set `include_all` to include all DataType's. Specify `include_data_types` to include only the provided `DataType`s. Leave fields false or empty to include no existing product data in simulation.\n\nNote that if the simulated Smart Contracts specify that they require a particular data type, and it is neither specified here nor created as a simulation instruction, then the Simulation will likely encounter an error. Similarly, if the data type is specified here and required by a Smart Contract, but does not exist in Vault, then the Simulation will likely encounter an error."
          },
          "include_data_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/contractsExistingProductDataBehaviourDataType"
            },
            "description": "Specify `include_data_types` to include only the provided `DataType`s."
          }
        }
      },
      "v1contractsExistingSmartContract": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID used to reference an existing Smart Contract template from the Vault instance.\n\nRequired."
          }
        },
        "required": [
          "id"
        ]
      },
      "v1contractsExistingSupervisorContract": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID used to reference an existing Supervisor Contract Version from the Vault instance.\n\nRequired."
          }
        },
        "required": [
          "id"
        ]
      },
      "v1contractsInstantiateWorkflowRequest": {
        "type": "object",
        "properties": {
          "workflow_definition_id": {
            "type": "string",
            "description": "The ID of the Workflow Definition."
          },
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The initial data that was sent to the Workflow."
          }
        }
      },
      "v1contractsInstantiateWorkflowRequests": {
        "type": "object",
        "properties": {
          "instantiate_workflow_requests": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contractsInstantiateWorkflowRequest"
            },
            "description": "Workflow instantiation requests for the account."
          }
        }
      },
      "v1contractsSimulateContractsInstruction": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Time of the instruction. Its exact meaning depends on the type of instruction. Must be formatted as an RFC3339 timestamp.\n\nRequired."
          },
          "create_account": {
            "$ref": "#/components/schemas/core_apiv1accountsAccount",
            "required": false
          },
          "v2_create_account": {
            "$ref": "#/components/schemas/core_apiv2accountsCreateAccountRequest",
            "required": false
          },
          "create_posting_instruction_batch": {
            "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatch",
            "required": false
          },
          "create_global_parameter": {
            "$ref": "#/components/schemas/v1contractsCreateGlobalParameterInstruction",
            "required": false
          },
          "create_global_parameter_value": {
            "$ref": "#/components/schemas/v1global_parametersGlobalParameterValue",
            "required": false
          },
          "create_flag_definition": {
            "$ref": "#/components/schemas/v1flagsFlagDefinition",
            "required": false
          },
          "create_flag": {
            "$ref": "#/components/schemas/v1flagsFlag",
            "required": false
          },
          "create_plan": {
            "$ref": "#/components/schemas/v1plansPlan",
            "required": false
          },
          "create_account_plan_assoc": {
            "$ref": "#/components/schemas/v1plansAccountPlanAssoc",
            "required": false
          },
          "create_account_update": {
            "$ref": "#/components/schemas/v1accountsAccountUpdate",
            "required": false
          },
          "update_account": {
            "$ref": "#/components/schemas/core_apiv1accountsAccount",
            "required": false
          },
          "v2_update_account": {
            "$ref": "#/components/schemas/core_apiv2accountsUpdateAccountRequest",
            "required": false
          },
          "create_calendar": {
            "$ref": "#/components/schemas/v1calendarCalendar",
            "required": false
          },
          "create_calendar_event": {
            "$ref": "#/components/schemas/v1calendarCalendarEvent",
            "required": false
          },
          "create_smart_contract_module_versions_link": {
            "$ref": "#/components/schemas/v1contract_modulesSmartContractModuleVersionsLink",
            "required": false
          },
          "update_smart_contract_param": {
            "$ref": "#/components/schemas/v1contractsUpdateSmartContractParamInstruction",
            "required": false
          },
          "create_parameter": {
            "$ref": "#/components/schemas/v1parametersParameter",
            "required": false
          },
          "create_parameter_value": {
            "$ref": "#/components/schemas/v1parametersParameterValue",
            "required": false
          },
          "update_parameter_value": {
            "$ref": "#/components/schemas/v1parametersUpdateParameterValueRequest",
            "required": false
          },
          "create_processing_group": {
            "$ref": "#/components/schemas/v1processing_groupsCreateProcessingGroupRequest",
            "required": false
          },
          "update_processing_group": {
            "$ref": "#/components/schemas/v1processing_groupsUpdateProcessingGroupRequest",
            "required": false
          },
          "list_account_attribute_values": {
            "$ref": "#/components/schemas/v1account_attributesListAccountAttributeValuesRequest",
            "required": false
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "v1contractsSimulateContractsOutputRequest": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp used to calculate the output. Must be formatted as an RFC3339 timestamp.\n\nRequired."
          },
          "derived_params": {
            "$ref": "#/components/schemas/v1contractsDerivedParamsOutputRequest",
            "required": true
          }
        },
        "required": [
          "timestamp"
        ]
      },
      "v1contractsSimulateContractsRequest": {
        "type": "object",
        "properties": {
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Start time of the simulation. Must be formatted as an RFC3339 timestamp.\n\nRequired."
          },
          "end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "End time of the simulation. Instructions with a timestamp after this one will be rejected and the simulation will not start. Must be formatted as an RFC3339 timestamp.\n\nRequired."
          },
          "smart_contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contractsSmartContract"
            },
            "description": "A list of new Smart Contracts that can be used within simulation."
          },
          "existing_smart_contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contractsExistingSmartContract"
            },
            "description": "A list existing Smart Contracts within Vault that can be used within simulation.",
            "x-release-info": {
              "releaseVersion": {
                "major": 4,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "supervisor_contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contractsSupervisorContract"
            },
            "description": "A list of new Supervisor Contracts that can be used within simulation. Although this is a list field, only one Supervisor Contract can currently be simulated for each request."
          },
          "existing_supervisor_contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contractsExistingSupervisorContract"
            },
            "description": "A list of existing Supervisor Contracts that can be referenced within simulation.",
            "x-release-info": {
              "releaseVersion": {
                "major": 4,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "contract_modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/core_apiv1contractsContractModule"
            },
            "description": "A list of new Contract Modules that can be referenced within simulation."
          },
          "existing_contract_modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contractsExistingContractModule"
            },
            "description": "A list of existing Contract Modules that can be referenced within simulation.",
            "x-release-info": {
              "releaseVersion": {
                "major": 4,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "existing_accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contractsExistingAccount"
            },
            "description": "A list of existing accounts to simulate.\n\nNote that any accounts specified within this list will have their Smart Contract versions as of `start_timestamp` fetched automatically. The product data associated with these Smart Contracts will be included or not based on the `existing_product_data_behaviour` field. Any account associated data (parameters, postings, balances, etc.) required by _any_ hooks defined in their Smart Contracts will always be fetched from the Vault instance as of `start_timestamp` and included in simulation.",
            "x-release-info": {
              "releaseVersion": {
                "major": 4,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "existing_product_data_behaviour": {
            "$ref": "#/components/schemas/v1contractsExistingProductDataBehaviour",
            "description": "ExistingProductDataBehaviour is an optional field to control behaviour for whether or not simulation will fetch and include product data in simulation. Product data are data types available in contracts that are associated with products. That is, global parameters, template parameters, and calendar events.\n\nIf unspecified, the default behaviour is to fetch and include no product data.\n\nIf set, Simulation includes product data required by products specified in the request via: new or existing smart contracts, new or existing supervisor contracts, or existing smart contracts fetched due to specified existing accounts.",
            "x-release-info": {
              "releaseVersion": {
                "major": 4,
                "minor": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "instructions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contractsSimulateContractsInstruction"
            },
            "description": "A list of timestamped exogenous instructions for simulation. These instructions dictate external events, such as postings or parameter updates, which (alongside the actual contract code) shape the simulation scenario."
          },
          "outputs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1contractsSimulateContractsOutputRequest"
            },
            "description": "A list of requests for data that is to be returned."
          }
        },
        "required": [
          "start_timestamp",
          "end_timestamp"
        ]
      },
      "v1contractsSimulateContractsResponse": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when this response was generated, in UTC. Formatted as an RFC3339 timestamp."
          },
          "logs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A text log that can contain additional information about the simulation. It can include the information about schedule changes, the this response was generated, etc. The information in this log is unstructured and must not be relied upon, as it can change without notice from one Vault release to the other."
          },
          "posting_instruction_batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatch"
            },
            "description": "All Posting Instruction Batches created."
          },
          "balances": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1contractsBalances"
            },
            "description": "All balance changes created. Keyed on account ID."
          },
          "account_notes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1contractsAccountNotes"
            },
            "description": "All account notes created. Keyed on account ID."
          },
          "instantiate_workflow_requests": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1contractsInstantiateWorkflowRequests"
            },
            "description": "All Workflow instantiation requests created. Keyed on account ID."
          },
          "derived_params": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1contractsDerivedParamsVals"
            },
            "description": "All derived parameters. Keyed on account ID."
          },
          "contract_notification_events": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1contractsContractNotificationEvents"
            },
            "description": "All Contract notification events created. Keyed on resource ID."
          },
          "hook_execution_logs": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "All smart and supervisor contract hook execution logs.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 1
              },
              "changeType": "ADD_FIELD"
            }
          },
          "account_attribute_values": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1contractsAccountAttributeValues"
            },
            "description": "All requested account attribute values. Keyed on account ID.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 4
              },
              "changeType": "ADD_FIELD"
            }
          }
        }
      },
      "v1contractsSmartContract": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Source code of the Smart Contract that is to be simulated."
          },
          "smart_contract_param_vals": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Values for the Smart Contract parameters."
          },
          "smart_contract_version_id": {
            "type": "string",
            "description": "The ID that will be used as the Smart Contract ID in the simulation and can be referenced by the simulation instructions."
          }
        }
      },
      "v1contractsSupervisorContract": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Source code of the Supervisor Contract that is to be simulated."
          },
          "supervisor_contract_version_id": {
            "type": "string",
            "description": "The ID that will be used as the Supervisor Contract version ID in the simulation and can be referenced by the simulation instructions."
          }
        }
      },
      "v1contractsUpdateSmartContractParamInstruction": {
        "type": "object",
        "properties": {
          "smart_contract_version_id": {
            "type": "string",
            "description": "The smart contract ID of the version to be updated.\n\nRequired."
          },
          "parameter_name": {
            "type": "string",
            "description": "\n\nRequired.",
            "title": "The template parameter that is to be updated"
          },
          "new_parameter_value": {
            "type": "string",
            "description": "The new value for the parameter that is to be added to the smart contract parameter timeseries.\n\nRequired."
          }
        },
        "required": [
          "smart_contract_version_id",
          "parameter_name",
          "new_parameter_value"
        ]
      },
      "v1flagsFlag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Flag. Output only. From Vault version 5.2 onwards, this defaults to a UUID."
          },
          "flag_definition_id": {
            "type": "string",
            "description": "The ID of the Flag Definition. Required for create requests."
          },
          "description": {
            "type": "string",
            "description": "The description of the Flag. Optional for create requests.\n"
          },
          "creation_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the Flag was created, in UTC. Output only. Formatted as an RFC3339 timestamp. Will be truncated to microsecond precision.",
            "x-output-only": true,
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 2
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "Use the create_timestamp field instead."
            }
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the flag was created, in UTC. Output only. Formatted as an RFC3339 timestamp. Will be truncated to microsecond precision."
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp at which the Flag becomes effective, in UTC. For create requests, can be either: <br>- left empty (for a flag effective immediately);<br>- set to a time in the future (to schedule a flag taking effect); or<br>- set to a time in the past (if the `is_backdated` field is set to true). <br>Formatted as an RFC3339 timestamp. Truncated to microsecond precision.\n"
          },
          "expiry_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp at which the Flag stops being effective, in UTC. The Flag is considered effective between `effective_timestamp` and `expiry_timestamp`.<br>- If `expiry_timestamp` is specified, it must be after the `effective_timestamp` time.<br>- If `expiry_timestamp` is not specified, the Flag is considered effective from its `effective_timestamp` onwards.<br>Formatted as an RFC3339 timestamp. Will be truncated to microsecond precision.\n"
          },
          "is_active": {
            "type": "boolean",
            "description": "Indicates if the Flag is active. Update only.",
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 2
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "Use Flags with FLAG_VALUE_OFF to control Flag activity instead. Flags are considered active between their effective and expiry timestamps."
            }
          },
          "is_backdated": {
            "type": "boolean",
            "description": "Indicates whether this Flag was a backdated change, meaning its `effective_timestamp` was set to a time earlier than when it was created. To allow the `effective_timestamp` to be in the past, this must be set to true when creating a Flag. Optional."
          },
          "value": {
            "$ref": "#/components/schemas/v1flagsFlagValue",
            "description": "Determines how the Flag will behave when resolving the timeseries. Flags with a Value of `FLAG_VALUE_ON` will be resolved as `True`, and a Value of `FLAG_VALUE_OFF` will be resolved as `False`. Defaults to `FLAG_VALUE_ON`. If there are multiple overlapping Flags, the most recently created one will take precendence. If an Account has multiple Stakeholders with conflicting Flags for the same Flag Definition ID, the `FLAG_VALUE_ON` Flag will take precendence."
          },
          "customer_id": {
            "$ref": "#/components/schemas/customer_id",
            "required": false
          },
          "account_id": {
            "$ref": "#/components/schemas/account_id",
            "required": false
          },
          "payment_device_id": {
            "$ref": "#/components/schemas/payment_device_id",
            "required": false
          }
        }
      },
      "v1flagsFlagDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Flag Definition. Matches the name field. One of ID or name must be provided for create requests. If both are provided, ID will be used.\n"
          },
          "name": {
            "type": "string",
            "description": "The name of the Flag Definition. Matches the ID field. One of ID or name must be provided for create requests. If both are provided, ID will be used.\n",
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 2
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "Use the id field instead."
            }
          },
          "description": {
            "type": "string",
            "description": "The description of the Flag Definition. Optional for create requests.\n"
          },
          "required_flag_level": {
            "$ref": "#/components/schemas/v1flagsFlagLevel",
            "description": "The level required to create this Flag. Required for create requests."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Flag Definition was created, in UTC. Output only. Formatted as an RFC3339 timestamp. Will be truncated to microsecond precision."
          },
          "flag_visibility": {
            "$ref": "#/components/schemas/v1flagsFlagVisibility",
            "description": "The Flag visibility. Used to hide Flags from users where these are not relevant to them. Used when listing Flags. Required for create requests."
          },
          "is_active": {
            "type": "boolean",
            "description": "Indicates if the Flag Definition is active. Update only. <br><br> Note: Once a Flag Definition is set to inactive, it cannot be activated again."
          }
        }
      },
      "v1flagsFlagLevel": {
        "type": "string",
        "enum": [
          "FLAG_LEVEL_UNKNOWN",
          "FLAG_LEVEL_CUSTOMER",
          "FLAG_LEVEL_ACCOUNT",
          "FLAG_LEVEL_PAYMENT_DEVICE"
        ],
        "default": "FLAG_LEVEL_UNKNOWN",
        "description": "The levels the Flag applies to.",
        "x-enum-value-release-info": {
          "FLAG_LEVEL_PAYMENT_DEVICE": {
            "noticeVersion": {
              "major": 5,
              "minor": 1
            },
            "releaseVersion": {
              "major": 7
            },
            "changeType": "REMOVE_ENUM_VALUE",
            "description": "Deprecated due to lack of use."
          }
        },
        "x-enum-value-descriptions": {
          "FLAG_LEVEL_ACCOUNT": "Makes a Flag apply to the account ID.",
          "FLAG_LEVEL_CUSTOMER": "Makes a Flag apply to the customer ID.",
          "FLAG_LEVEL_PAYMENT_DEVICE": "Makes a Flag apply to the payment device ID.",
          "FLAG_LEVEL_UNKNOWN": "This status exists to avoid an empty request unintentionally setting an undesired status. A Flag will never have this status."
        }
      },
      "v1flagsFlagValue": {
        "type": "string",
        "enum": [
          "FLAG_VALUE_ON",
          "FLAG_VALUE_OFF"
        ],
        "default": "FLAG_VALUE_ON",
        "description": "The Value of the Flag.",
        "x-enum-value-descriptions": {
          "FLAG_VALUE_OFF": "A Flag with Value `FLAG_VALUE_OFF` will be treated as `False` for its effective range when resolving the Flag timeseries.",
          "FLAG_VALUE_ON": "A Flag with Value `FLAG_VALUE_ON` will be treated as `True` for its effective range when resolving the Flag timeseries."
        }
      },
      "v1flagsFlagVisibility": {
        "type": "string",
        "enum": [
          "FLAG_VISIBILITY_UNKNOWN",
          "FLAG_VISIBILITY_CONTRACT",
          "FLAG_VISIBILITY_OPERATOR"
        ],
        "default": "FLAG_VISIBILITY_UNKNOWN",
        "description": "The visibility of the Flag.",
        "x-enum-value-descriptions": {
          "FLAG_VISIBILITY_CONTRACT": "The Flag is visible only to Smart Contracts.",
          "FLAG_VISIBILITY_OPERATOR": "The Flag is visible to UI operators and Smart Contracts.",
          "FLAG_VISIBILITY_UNKNOWN": "This status exists to avoid an empty request unintentionally setting an undesired status. A Flag will never have this status."
        }
      },
      "v1global_parametersGlobalParameter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The `GlobalParameter` ID. Used by Smart Contracts to retrieve values for this parameter.\n\nRequired."
          },
          "display_name": {
            "type": "string",
            "description": "A human-readable name.\n\nRequired."
          },
          "description": {
            "type": "string",
            "description": "A description of the parameter.\n\nRequired."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the `GlobalParameter` was created, in UTC. Formatted as an RFC3339 timestamp."
          },
          "number": {
            "$ref": "#/components/schemas/v1paramsNumberField",
            "required": false
          },
          "str": {
            "$ref": "#/components/schemas/v1paramsStringField",
            "required": false
          },
          "denomination": {
            "$ref": "#/components/schemas/v1paramsDenominationField",
            "required": false
          },
          "date": {
            "$ref": "#/components/schemas/v1paramsDateField",
            "required": false
          }
        },
        "description": "A `GlobalParameter` describes the metadata and shape of a parameter.",
        "required": [
          "id",
          "display_name",
          "description"
        ]
      },
      "v1global_parametersGlobalParameterValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The `GlobalParameterValue` ID."
          },
          "global_parameter_id": {
            "type": "string",
            "description": "The `GlobalParameter` ID this value belongs to.\n\nRequired."
          },
          "value": {
            "type": "string",
            "description": "The actual value. This is stored as a string and is processed together with the information stored in the associated `GlobalParameter`. This will determine how the value is parsed or displayed. For Date Global Parameters, it is in the format `YYYY-MM-DD`.\n\nRequired."
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the `GlobalParameterValue` is effective from, in UTC. Formatted as an RFC3339 timestamp.\n\nRequired."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the `GlobalParameterValue` was created, in UTC. Formatted as an RFC3339 timestamp."
          }
        },
        "description": "A `GlobalParameterValue` contains the value for a `GlobalParameter` at a specified `effective_timestamp`.",
        "required": [
          "global_parameter_id",
          "value",
          "effective_timestamp"
        ]
      },
      "v1parametersAccountConstraint": {
        "type": "object"
      },
      "v1parametersConstraint": {
        "type": "object",
        "properties": {
          "string_constraint": {
            "$ref": "#/components/schemas/v1parametersStringConstraint",
            "required": false
          },
          "decimal_constraint": {
            "$ref": "#/components/schemas/v1parametersDecimalConstraint",
            "required": false
          },
          "enumeration_constraint": {
            "$ref": "#/components/schemas/v1parametersEnumerationConstraint",
            "required": false
          },
          "date_time_constraint": {
            "$ref": "#/components/schemas/v1parametersDateTimeConstraint",
            "required": false
          },
          "account_constraint": {
            "$ref": "#/components/schemas/v1parametersAccountConstraint",
            "required": false
          }
        }
      },
      "v1parametersDateTimeConstraint": {
        "type": "object",
        "properties": {
          "precision": {
            "$ref": "#/components/schemas/parametersDateTimeConstraintPrecision",
            "description": "Least significant component that can be set."
          },
          "earliest": {
            "type": "string",
            "format": "date-time",
            "description": "The earliest permitted date-time, in UTC. Optional. Formatted as an RFC3339 timestamp."
          },
          "latest": {
            "type": "string",
            "format": "date-time",
            "description": "The latest permitted date-time, in UTC. Optional. Formatted as an RFC3339 timestamp."
          }
        }
      },
      "v1parametersDecimalConstraint": {
        "type": "object",
        "properties": {
          "min_value": {
            "type": "string",
            "description": "The minimum value (inclusive) that the number can be. An empty string indicates the constraint is not set."
          },
          "max_value": {
            "type": "string",
            "description": "The maximum value (inclusive) that the number can be. An empty string indicates the constraint is not set."
          }
        }
      },
      "v1parametersEnumerationConstraint": {
        "type": "object",
        "properties": {
          "permitted_values": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Values must specify one of the strings listed here, of which there must be at least two, and no value may be repeated."
          }
        }
      },
      "v1parametersParameter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique human-readable identifier for the Parameter. Required."
          },
          "constraint": {
            "$ref": "#/components/schemas/v1parametersConstraint",
            "description": "Constraint on the Parameter type and valid values. Required."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the Parameter was created, in UTC. Read-only and set to the current time on creation. Formatted as an RFC3339 timestamp."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Metadata related to the Parameter for use by downstream systems. Optional."
          }
        }
      },
      "v1parametersParameterValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique UUID identifier for the Parameter Value. Read-only and set to a random UUID on creation."
          },
          "parameter_id": {
            "type": "string",
            "description": "The ID of the Parameter for which this is a value. Required."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the Parameter Value was created, in UTC. Read-only and set to the current time on creation. Formatted as an RFC3339 timestamp."
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the Parameter Value was last updated, in UTC. Empty if the Value was never updated. Formatted as an RFC3339 timestamp."
          },
          "effective_from_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time from which the Parameter Value is effective (including this time), in UTC. Set to the current time on creation if not specified. Can be set to a time in the past if the `is_backdated` flag is set to true. Can also be set to a time in the future: see [Future-Dated Parameter Values](/reference/contracts/contracts_api_4xx/common_examples/#generic-future_dated_parameters). Formatted as an RFC3339 timestamp. Will be truncated to microsecond precision."
          },
          "effective_to_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time until which the Parameter Value remains effective (excluding this time), in UTC. If this field is left empty or omitted, the Parameter Value is effective indefinitely. Vault will automatically update this field if the Parameter Value is superseded by another Parameter Value for the same Parameter and Owner. Formatted as an RFC3339 timestamp. Will be truncated to microsecond precision."
          },
          "is_cancelled": {
            "type": "boolean",
            "description": "Indicates whether this Parameter Value has been cancelled before it became effective. This field can be explicitly set to true via an update, providing that the `effective_from_timestamp` is in the future."
          },
          "is_backdated": {
            "type": "boolean",
            "description": "Indicates whether this Parameter Value was a backdated change, meaning its `effective_from_timestamp` was set to a time earlier than when it was created. To allow the `effective_from_timestamp` to be in the past, this must be set to true when creating Parameter Values. A back-dated Parameter Value will not trigger the [pre_parameter_change_hook](/reference/contracts/contracts_api_4xx/smart_contracts_api_reference4xx/hooks/#pre_parameter_change_hook) or [post_parameter_change_hook](/reference/contracts/contracts_api_4xx/smart_contracts_api_reference4xx/hooks/#post_parameter_change_hook)."
          },
          "value": {
            "$ref": "#/components/schemas/v1parametersValue",
            "description": "The value of the Parameter, which must satisfy the constraints defined in the Parameter. Required. Cannot be changed; instead, a new Parameter Value must be created."
          },
          "account_config_group_id": {
            "type": "string",
            "description": "The ID of the Account Config Group that owns this value. Can only be set to `root`, and is exactly equivalent to setting `global` to `true`. Functionality originally intended for this field has now moved to `parameter_value_hierarchy_node_id`.",
            "x-release-info": {
              "noticeVersion": {
                "major": 5,
                "minor": 3
              },
              "releaseVersion": {
                "major": 7
              },
              "changeType": "REMOVE_FIELD",
              "description": "This field is replaced by `global`. Prior to removal of this field, if this field is populated it will be set to `root`, and `global` will also be set to `true`."
            }
          },
          "cancel_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which this Parameter Value was cancelled, in UTC. Formatted as an RFC3339 timestamp."
          },
          "effective_to_timestamp_is_explicit": {
            "type": "boolean",
            "description": "Indicates whether the `effective_to_timestamp` was set explicitly using an API call or whether it was implicitly determined by Vault as a result of another Parameter Value for the same Owner superseding it. Read-only."
          },
          "account_id": {
            "$ref": "#/components/schemas/account_id",
            "required": false
          },
          "global": {
            "$ref": "#/components/schemas/global",
            "required": false
          },
          "parameter_value_hierarchy_node_id": {
            "$ref": "#/components/schemas/parameter_value_hierarchy_node_id",
            "required": false
          }
        }
      },
      "v1parametersParameterValueEffectiveToTimestampUpdateOptions": {
        "type": "object",
        "properties": {
          "set_to_now": {
            "type": "boolean",
            "description": "This controls the behaviour when a request is sent to update the `effective_to_timestamp` but no value is set in `parameter_value.effective_to_timestamp`. When set to true, Vault immediately unsets the Parameter Value by setting its `effective_to_timestamp` to the time that Vault processes the request. This is an alternative to explicitly setting a near-future `effective_to_timestamp`, which could inadvertently be in the past by the time of processing. When set to false, or if this update option is omitted, the `effective_to_timestamp` will be left unbounded or set to the `effective_from_timestamp` of the next Parameter Value in the timeseries."
          }
        },
        "description": "These allow controlling the behaviour of an update to the Parameter Value's effective_to_timestamp."
      },
      "v1parametersParameterValueIsCancelledUpdateOptions": {
        "type": "object",
        "properties": {
          "skip_pre_parameter_change_hook": {
            "type": "boolean",
            "description": "Do not run the Smart Contract's pre parameter change hook for this Parameter Value update."
          }
        },
        "description": "These allow controlling the behaviour of the update when cancelling the Parameter Value."
      },
      "v1parametersStringConstraint": {
        "type": "object",
        "properties": {
          "min_length": {
            "type": "integer",
            "format": "int32",
            "description": "The minimum length that the string can be. Must be non-negative."
          },
          "max_length": {
            "type": "integer",
            "format": "int32",
            "description": "The maximum length that the string can be. Must be non-negative. A zero value indicates the constraint is not set."
          }
        }
      },
      "v1parametersUpdateParameterValueRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID used to ensure this request is idempotent. Required."
          },
          "parameter_value": {
            "$ref": "#/components/schemas/v1parametersParameterValue",
            "description": "The Parameter Value to update. The only supported updates are modifying an `effective_to_timestamp`, or setting a Parameter Value to `is_cancelled` to cancel it before it becomes effective. Parameter Values can only have their `effective_to_timestamp` set to a time in the future. Required.",
            "x-excluded-fields": [
              "parameter_id",
              "create_timestamp",
              "update_timestamp",
              "effective_from_timestamp",
              "effective_to_timestamp_is_explicit",
              "is_backdated",
              "value",
              "account_config_group_id",
              "owner",
              "cancel_timestamp"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "The paths of the resource to update. Values will be taken from the `parameter_value` field. The only permitted fields are `effective_to_timestamp` and `is_cancelled`. Required."
          },
          "is_cancelled_update_options": {
            "$ref": "#/components/schemas/v1parametersParameterValueIsCancelledUpdateOptions",
            "description": "Options to define how Vault should process the cancellation of the Parameter Value. Options set will only take effect if the request cancels the Parameter Value."
          },
          "effective_to_timestamp_update_options": {
            "$ref": "#/components/schemas/v1parametersParameterValueEffectiveToTimestampUpdateOptions",
            "description": "Options to define how Vault should process an update to the `effective_to_timestamp`. Options set will only take effect if `effective_to_timestamp` is included in the `update_mask`."
          }
        }
      },
      "v1paramsDate": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32",
            "description": "The year of the specified date."
          },
          "month": {
            "type": "integer",
            "format": "int32",
            "description": "The month of the specified date."
          },
          "day": {
            "type": "integer",
            "format": "int32",
            "description": "The day of the specified date."
          }
        }
      },
      "v1paramsDateField": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/v1paramsDateType",
            "description": "The date type of the parameter."
          },
          "start": {
            "$ref": "#/components/schemas/v1paramsDate",
            "description": "The start date of the parameter."
          },
          "end": {
            "$ref": "#/components/schemas/v1paramsDate",
            "description": "The end date of the parameter."
          }
        }
      },
      "v1paramsDateType": {
        "type": "string",
        "enum": [
          "DATE_TYPE_UNKNOWN",
          "DATE_TYPE_RELATIVE",
          "DATE_TYPE_ABSOLUTE"
        ],
        "default": "DATE_TYPE_UNKNOWN",
        "x-enum-value-release-info": {
          "DATE_TYPE_RELATIVE": {
            "noticeVersion": {
              "major": 3
            },
            "releaseVersion": {
              "major": 5
            },
            "changeType": "REMOVE_ENUM_VALUE",
            "description": "This enum value has no equivalent in Contract Parameters. There are no guarantees on functionality or constraints for this type."
          }
        },
        "x-enum-value-descriptions": {
          "DATE_TYPE_ABSOLUTE": "The value must be in the range [start, end] to be valid. This means a specific date (year/month/day) must be set.",
          "DATE_TYPE_RELATIVE": "The value is relative to the current date. For example `start(year=-5), end()` means any day between five years ago and today.",
          "DATE_TYPE_UNKNOWN": "The date type is unknown."
        }
      },
      "v1paramsDenominationField": {
        "type": "object",
        "properties": {
          "permitted_denominations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "ISO 4217 denomination codes - empty means any denomination."
          }
        }
      },
      "v1paramsNumberField": {
        "type": "object",
        "properties": {
          "value_type": {
            "$ref": "#/components/schemas/v1paramsNumberFieldDisplayStyle",
            "description": "The value type of the number field."
          },
          "min_value": {
            "type": "string",
            "description": "The minimum value allowed for the number field."
          },
          "max_value": {
            "type": "string",
            "description": "The maximum value allowed for the number field."
          },
          "step": {
            "type": "string",
            "description": "The incrementation step for the number field."
          }
        }
      },
      "v1paramsNumberFieldDisplayStyle": {
        "type": "string",
        "enum": [
          "NUMBER_FIELD_DISPLAY_STYLE_NOT_SPECIFIED",
          "NUMBER_FIELD_DISPLAY_STYLE_PLAIN",
          "NUMBER_FIELD_DISPLAY_STYLE_PERCENTAGE",
          "NUMBER_FIELD_DISPLAY_STYLE_MONEY",
          "NUMBER_FIELD_DISPLAY_STYLE_MONTHS"
        ],
        "default": "NUMBER_FIELD_DISPLAY_STYLE_NOT_SPECIFIED",
        "x-enum-value-descriptions": {
          "NUMBER_FIELD_DISPLAY_STYLE_MONEY": "The number will be displayed in monetary format.",
          "NUMBER_FIELD_DISPLAY_STYLE_MONTHS": "The number will be displayed as an amount of months.",
          "NUMBER_FIELD_DISPLAY_STYLE_NOT_SPECIFIED": "Default value.",
          "NUMBER_FIELD_DISPLAY_STYLE_PERCENTAGE": "The number will be displayed as a percentage.",
          "NUMBER_FIELD_DISPLAY_STYLE_PLAIN": "The number will be displayed exactly as entered."
        }
      },
      "v1paramsStringField": {
        "type": "object"
      },
      "v1plansAccountPlanAssoc": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for an Account Plan Association.\n\nMax length: 36 characters."
          },
          "account_id": {
            "type": "string",
            "description": "The account ID associated with the Plan."
          },
          "plan_id": {
            "type": "string",
            "description": "The Plan ID associated with the account."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when this Account Plan Association was created, in UTC. Formatted as an RFC3339 timestamp."
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when this Account Plan Association became active, in UTC. Formatted as an RFC3339 timestamp."
          },
          "end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when this Account Plan Association became inactive, in UTC. Formatted as an RFC3339 timestamp."
          },
          "status": {
            "$ref": "#/components/schemas/v1plansAccountPlanAssocStatus",
            "description": "The status of the Account Plan Association."
          }
        }
      },
      "v1plansAccountPlanAssocStatus": {
        "type": "string",
        "enum": [
          "ACCOUNT_PLAN_ASSOC_STATUS_UNKNOWN",
          "ACCOUNT_PLAN_ASSOC_STATUS_ACTIVE",
          "ACCOUNT_PLAN_ASSOC_STATUS_INACTIVE"
        ],
        "default": "ACCOUNT_PLAN_ASSOC_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "ACCOUNT_PLAN_ASSOC_STATUS_ACTIVE": "The status of the Account Plan Association is active. Can be updated to INACTIVE via Plan Updates.",
          "ACCOUNT_PLAN_ASSOC_STATUS_INACTIVE": "The status of the Account Plan Association is inactive. This is a terminal status."
        }
      },
      "v1plansPlan": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for a Plan. Optional for create requests.\n\nMax length: 36 characters."
          },
          "supervisor_contract_version_id": {
            "type": "string",
            "description": "The ID of the Supervisor Contract version. Required for create requests."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the Plan was created, in UTC. Formatted as an RFC3339 timestamp."
          },
          "status": {
            "$ref": "#/components/schemas/v1plansPlanStatus",
            "description": "The status of the Plan. Optional when creating the Plan - defaults to `PLAN_STATUS_OPEN`.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD"
            }
          },
          "opening_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the Plan status was updated to `PLAN_STATUS_OPEN`, in UTC. Formatted as an RFC3339 timestamp.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD"
            }
          },
          "activation_completed_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the activation PlanUpdate for the Plan succeeded and its status was updated to `PLAN_UPDATE_STATUS_COMPLETED`, in UTC. Formatted as an RFC3339 timestamp.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD"
            }
          },
          "closing_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the Plan status was updated to `PLAN_STATUS_CLOSED`, in UTC. Formatted as an RFC3339 timestamp.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD"
            }
          },
          "closure_completed_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when the closure PlanUpdate for the Plan succeeded and its status was updated to `PLAN_UPDATE_STATUS_COMPLETED`, in UTC. Formatted as an RFC3339 timestamp.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD"
            }
          },
          "processing_group_id": {
            "type": "string",
            "description": "The ID of the Processing Group this plan belongs to. Can only be provided for create requests. If omitted, the Plan will be assigned to the default Processing Group.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map of unstructured fields that hold instance-specific Plan metadata."
          }
        }
      },
      "v1plansPlanStatus": {
        "type": "string",
        "enum": [
          "PLAN_STATUS_UNKNOWN",
          "PLAN_STATUS_PENDING",
          "PLAN_STATUS_OPEN",
          "PLAN_STATUS_CLOSED"
        ],
        "default": "PLAN_STATUS_UNKNOWN"
      },
      "v1processing_groupsCreateProcessingGroupRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "The request idempotency identifier.\n\nRequired.\nMax length: 512 characters."
          },
          "processing_group": {
            "$ref": "#/components/schemas/v1processing_groupsProcessingGroup",
            "description": "The Processing Group object to be created.\n\nRequired.",
            "x-excluded-fields": [
              "status",
              "create_timestamp",
              "update_timestamp"
            ]
          }
        },
        "required": [
          "request_id",
          "processing_group"
        ]
      },
      "v1processing_groupsProcessingGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for the Processing Group. Optional for create requests. The '/' character is not supported in the ID.\n\nRequired.\nMax length: 36 characters."
          },
          "timezone": {
            "type": "string",
            "description": "The time zone of the Processing Group. **Warning: It is critical that you set this correctly because once set, it cannot be changed.** For more information, see the [Processing Groups documentation](/vault_v5/processing_groups/)."
          },
          "status": {
            "$ref": "#/components/schemas/v1processing_groupsProcessingGroupStatus",
            "description": "The status of the Processing Group. Default: PROCESSING_GROUP_STATUS_ACTIVE. On creation read only."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp at which the Processing Group was created, in UTC. Read only. Formatted as an RFC3339 timestamp."
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp at which the Processing Group was last updated, in UTC. Read only. Formatted as an RFC3339 timestamp."
          },
          "minimum_observation_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating the minimum observation timestamp of the Processing group."
          }
        },
        "required": [
          "id"
        ]
      },
      "v1processing_groupsProcessingGroupMinimumObservationTimestampUpdateOptions": {
        "type": "object",
        "properties": {
          "schedules_observe_balances_at_unpause_time": {
            "type": "boolean",
            "description": "Boolean to be used if requirements fetched for contract execution balance should be observed after a processing group is unpaused. If it is set to true, the minimum_observation_timestamp will be updated to the unpause time. If it is false, the minimum_observation_timestamp will be set to nil."
          }
        }
      },
      "v1processing_groupsProcessingGroupStatus": {
        "type": "string",
        "enum": [
          "PROCESSING_GROUP_STATUS_UNKNOWN",
          "PROCESSING_GROUP_STATUS_ACTIVE",
          "PROCESSING_GROUP_STATUS_PAUSED"
        ],
        "default": "PROCESSING_GROUP_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "PROCESSING_GROUP_STATUS_ACTIVE": "All schedules in the Processing Group will run as normal.",
          "PROCESSING_GROUP_STATUS_PAUSED": "Execution of schedules for this Processing Group will be paused.",
          "PROCESSING_GROUP_STATUS_UNKNOWN": "Unset value."
        }
      },
      "v1processing_groupsUpdateProcessingGroupRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters."
          },
          "processing_group": {
            "$ref": "#/components/schemas/v1processing_groupsProcessingGroup",
            "description": "The processing group to be updated.\n\nRequired.",
            "x-excluded-fields": [
              "create_timestamp",
              "update_timestamp",
              "minimum_observation_timestamp"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "Field mask that indicates which fields of the resource are to be updated. Valid update paths are \"status\", \"timezone\". \"status\" updates a processing group's status between PROCESSING_GROUP_STATUS_ACTIVE and PROCESSING_GROUP_STATUS_PAUSED. \"timezone\" can only be set once for the default processing group.\n\nRequired."
          },
          "minimum_observation_timestamp_update_options": {
            "$ref": "#/components/schemas/v1processing_groupsProcessingGroupMinimumObservationTimestampUpdateOptions",
            "description": "Determines whether or not the minimum_observation_timestamp should be set. Optional. If not provided, no updates will be made to the minimum_observation_timestamp."
          }
        },
        "required": [
          "request_id",
          "processing_group",
          "update_mask"
        ]
      },
      "v2accountsAccountCreateOptions": {
        "type": "object",
        "properties": {
          "parameter_values": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/core_apiv1parametersValue"
            },
            "description": "Parameter Values for instance parameters and expected parameters. <br> For Expected Parameters, the key is the Parameter's ID. <br> For Instance Parameters, the key must match the name as defined in the contract.<br> Note: Any `default_value` specified in the Smart Contract will not be used on Account creation requests; it is only used in Account conversions performed via `v1/account-migrations`, and only for Instance Parameters introduced in the new Smart Contract version."
          }
        },
        "description": "These allow for providing values for Account-owned Parameter Values. These can be legacy Instance Parameters, and/or the new Expected Parameters."
      },
      "v2accountsAccountType": {
        "type": "string",
        "enum": [
          "ACCOUNT_TYPE_UNKNOWN",
          "ACCOUNT_TYPE_CUSTOMER",
          "ACCOUNT_TYPE_INTERNAL"
        ],
        "default": "ACCOUNT_TYPE_UNKNOWN",
        "x-enum-value-descriptions": {
          "ACCOUNT_TYPE_CUSTOMER": "An Account for a Customer of the bank. Customer Accounts are backed by Smart Contracts.",
          "ACCOUNT_TYPE_INTERNAL": "An Account where the bank is the (implicit) stakeholder. Internal Accounts are not backed by Smart Contracts.",
          "ACCOUNT_TYPE_UNKNOWN": "This status exists to avoid an empty request unintentionally setting an undesired type. An Account will never have this type."
        }
      },
      "v2accountsTSide": {
        "type": "string",
        "enum": [
          "T_SIDE_UNKNOWN",
          "T_SIDE_ASSET",
          "T_SIDE_LIABILITY"
        ],
        "default": "T_SIDE_UNKNOWN",
        "description": "The side of the balance sheet where an Account balance is counted. Determines the sign with which a credit/debit posting affects a balance.",
        "x-enum-value-descriptions": {
          "T_SIDE_ASSET": "Debit postings increase balances for asset Accounts.",
          "T_SIDE_LIABILITY": "Credit postings increase balances for liability Accounts.",
          "T_SIDE_UNKNOWN": "Default Value, invalid."
        }
      },
      "ListCustomersRequestExternalCustomerIDPatternMatchMatchType": {
        "type": "string",
        "enum": [
          "MATCH_TYPE_UNKNOWN",
          "MATCH_TYPE_TEXT_EXACT_CASE_SENSITIVE",
          "MATCH_TYPE_TEXT_EXACT_CASE_INSENSITIVE"
        ],
        "default": "MATCH_TYPE_UNKNOWN"
      },
      "customersListCustomersRequestExternalCustomerIDPatternMatch": {
        "type": "object",
        "properties": {
          "pattern": {
            "type": "string",
            "description": "The query string to pattern match against.",
            "x-example-override": "b29ebe57-fbcd-4377-95b5-b0e3f3cf95d7"
          },
          "match_type": {
            "$ref": "#/components/schemas/ListCustomersRequestExternalCustomerIDPatternMatchMatchType",
            "description": "The type of pattern matching to apply.",
            "x-example-override": "MATCH_TYPE_TEXT_EXACT_CASE_SENSITIVE"
          }
        }
      },
      "v1authIdentifier": {
        "type": "object",
        "properties": {
          "identifier_type": {
            "$ref": "#/components/schemas/v1authIdentifierType",
            "description": "The type of identifier."
          },
          "identifier": {
            "type": "string",
            "description": "The string value of the identifier. Must be unique."
          }
        },
        "description": "Identifiers associated with a user."
      },
      "v1authIdentifierType": {
        "type": "string",
        "enum": [
          "IDENTIFIER_TYPE_UNKNOWN",
          "IDENTIFIER_TYPE_USERNAME",
          "IDENTIFIER_TYPE_EMAIL",
          "IDENTIFIER_TYPE_PHONE"
        ],
        "default": "IDENTIFIER_TYPE_UNKNOWN",
        "x-enum-value-descriptions": {
          "IDENTIFIER_TYPE_EMAIL": "An email identifier.",
          "IDENTIFIER_TYPE_PHONE": "A phone number identifier.",
          "IDENTIFIER_TYPE_UNKNOWN": "An unknown identifier type.",
          "IDENTIFIER_TYPE_USERNAME": "A username identifier."
        }
      },
      "v1customersBatchGetCustomersResponse": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1customersCustomer"
            },
            "description": "Maps customer ID to customer."
          }
        }
      },
      "v1customersCreateCustomerAddressRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters.",
            "x-example-override": "98e7ed60-0305-4932-9cd9-7617942c13c5"
          },
          "customer_address": {
            "$ref": "#/components/schemas/v1customersCustomerAddress",
            "description": "The address to be created. Required.",
            "x-excluded-fields": [
              "id"
            ]
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1customersCreateCustomerRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters.",
            "x-example-override": "5f7b3fab-8d4c-4ee6-ab21-f89576038378"
          },
          "customer": {
            "$ref": "#/components/schemas/v1customersCustomer",
            "description": "The customer to be created. Required."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1customersCustomer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique ID of the customer. Defaults to a UUID if not provided on creation.\n",
            "x-example-override": "86d86f07-7ba6-466e-9f41-f72c24e9b13b"
          },
          "status": {
            "$ref": "#/components/schemas/v1customersCustomerStatus",
            "description": "The status of the customer. Optional for creation; can be PROSPECT or ACTIVE. Defaults to ACTIVE for creation.",
            "x-example-override": "CUSTOMER_STATUS_ACTIVE"
          },
          "identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1authIdentifier"
            },
            "description": "The registered identifiers of the customer. A customer could have multiple identifiers associated with them, for example, a phone number, email address or username.",
            "x-example-override": "[{\"identifier_type\": \"IDENTIFIER_TYPE_EMAIL\", \"identifier\": \"api_user@domain.com\"}, {\"identifier_type\": \"IDENTIFIER_TYPE_USERNAME\", \"identifier\": \"api_user\"}, {\"identifier_type\": \"IDENTIFIER_TYPE_PHONE\", \"identifier\": \"+447700900796\"}]"
          },
          "customer_details": {
            "$ref": "#/components/schemas/v1customersCustomerDetails",
            "description": "Current details. Optional for create requests. This field will be replaced by a more general details object in a future release."
          },
          "additional_details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Key value map of additional, non-structured customer details.<br> <br>The details must not include:<br> - Any image data, including any KYC collateral such as passport, licence or other images. These must be stored in a separate repository outside of Vault.<br> - Any data that is classified as PII data.<br> The details cannot be utilised by Smart Contracts to drive any type of product behaviour.<br><br> Max size: 1MB (but it is strongly recommended to keep below this size).",
            "x-example-override": "{\"key1\": \"value1\"}"
          }
        }
      },
      "v1customersCustomerAccessibility": {
        "type": "string",
        "enum": [
          "CUSTOMER_ACCESSIBILITY_UNKNOWN",
          "CUSTOMER_ACCESSIBILITY_AUDIO",
          "CUSTOMER_ACCESSIBILITY_LARGE_PRINT",
          "CUSTOMER_ACCESSIBILITY_BRAILLE",
          "CUSTOMER_ACCESSIBILITY_DEAF"
        ],
        "default": "CUSTOMER_ACCESSIBILITY_UNKNOWN",
        "description": "The customer's accessibility requirements.",
        "x-enum-value-descriptions": {
          "CUSTOMER_ACCESSIBILITY_AUDIO": "Audio required.",
          "CUSTOMER_ACCESSIBILITY_BRAILLE": "Braille required.",
          "CUSTOMER_ACCESSIBILITY_DEAF": "User is deaf.",
          "CUSTOMER_ACCESSIBILITY_LARGE_PRINT": "Large print required.",
          "CUSTOMER_ACCESSIBILITY_UNKNOWN": "Unknown accessibility."
        }
      },
      "v1customersCustomerAddress": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The address ID. Output only.",
            "x-example-override": "8c926ef4-f09c-4db0-9b58-57030e4547c0"
          },
          "house_name": {
            "type": "string",
            "description": "The house name. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "Oaklands"
          },
          "street_number": {
            "type": "string",
            "description": "The street number. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "2a"
          },
          "street": {
            "type": "string",
            "description": "The street name. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "Lockleys Drive"
          },
          "local_municipality": {
            "type": "string",
            "description": "The local municipality. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "Welwyn Parish Council"
          },
          "city": {
            "type": "string",
            "description": "The city. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "Welwyn"
          },
          "postal_area": {
            "type": "string",
            "description": "The postcode or zip code. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "AL69LU"
          },
          "governing_district": {
            "type": "string",
            "description": "The governing district. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "East Herts"
          },
          "country": {
            "type": "string",
            "description": "The country. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "GB"
          },
          "address_type": {
            "$ref": "#/components/schemas/v1customersCustomerAddressType",
            "description": "The address type. Optional for create requests.",
            "x-example-override": "CUSTOMER_ADDRESS_TYPE_HOME"
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The date the address was valid from, in UTC. Optional for create requests. Formatted as an RFC3339 timestamp.",
            "x-example-override": "2018-04-10T20:14:37.808587Z"
          },
          "end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The date the address changed, in UTC. Optional for create requests. Formatted as an RFC3339 timestamp.",
            "x-example-override": "2020-01-29T13:02:23.987234Z"
          },
          "customer_id": {
            "type": "string",
            "description": "The unique ID of the customer linked to the address.",
            "x-example-override": "6499023882596562732"
          }
        },
        "description": "An address. This address message will be replaced by a more general object in the future."
      },
      "v1customersCustomerAddressType": {
        "type": "string",
        "enum": [
          "CUSTOMER_ADDRESS_TYPE_UNKNOWN",
          "CUSTOMER_ADDRESS_TYPE_PO_BOX",
          "CUSTOMER_ADDRESS_TYPE_HOME",
          "CUSTOMER_ADDRESS_TYPE_OFFICE",
          "CUSTOMER_ADDRESS_TYPE_OTHER",
          "CUSTOMER_ADDRESS_TYPE_CORRESPONDENCE"
        ],
        "default": "CUSTOMER_ADDRESS_TYPE_UNKNOWN",
        "description": "Address type."
      },
      "v1customersCustomerContactMethod": {
        "type": "string",
        "enum": [
          "CUSTOMER_CONTACT_METHOD_UNKNOWN",
          "CUSTOMER_CONTACT_METHOD_NONE",
          "CUSTOMER_CONTACT_METHOD_EMAIL",
          "CUSTOMER_CONTACT_METHOD_SMS",
          "CUSTOMER_CONTACT_METHOD_NOTIFICATION"
        ],
        "default": "CUSTOMER_CONTACT_METHOD_UNKNOWN",
        "description": "The customer's preferred method of contact."
      },
      "v1customersCustomerDetails": {
        "type": "object",
        "properties": {
          "title": {
            "$ref": "#/components/schemas/v1customersCustomerTitle",
            "description": "The customer's title. Optional for create requests.",
            "x-example-override": "CUSTOMER_TITLE_MR"
          },
          "first_name": {
            "type": "string",
            "description": "The customer's first name. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "Daniel"
          },
          "middle_name": {
            "type": "string",
            "description": "The customer's middle name. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "Abbas"
          },
          "last_name": {
            "type": "string",
            "description": "The customer's last name. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "Chorley"
          },
          "dob": {
            "type": "string",
            "description": "The customer's date of birth. Optional for create requests.\nThis field must contain a valid ISO-formatted date, e.g. 2018-06-03.",
            "x-example-override": "1980-12-25"
          },
          "gender": {
            "$ref": "#/components/schemas/v1customersCustomerGender",
            "description": "The customer's gender. Optional for create requests.",
            "x-example-override": "CUSTOMER_GENDER_MALE"
          },
          "nationality": {
            "type": "string",
            "description": "The customer's nationality. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "British"
          },
          "email_address": {
            "type": "string",
            "description": "The customer's email address. Optional for create requests.\nThis field must contain a valid email address.",
            "x-example-override": "api_user@domain.com"
          },
          "mobile_phone_number": {
            "type": "string",
            "description": "The customer's mobile phone number. Optional for create requests.\nThis field must contain a valid telephone number.",
            "x-example-override": "+447700900796"
          },
          "home_phone_number": {
            "type": "string",
            "description": "The customer's home phone number. Optional for create requests.\nThis field must contain a valid telephone number.",
            "x-example-override": "+441632960138"
          },
          "business_phone_number": {
            "type": "string",
            "description": "The customer's business phone number. Optional for create requests.\nThis field must contain a valid telephone number.",
            "x-example-override": "+442079460933"
          },
          "contact_method": {
            "$ref": "#/components/schemas/v1customersCustomerContactMethod",
            "description": "The customer's preferred method of contact. Optional for create requests.",
            "x-example-override": "CUSTOMER_CONTACT_METHOD_EMAIL"
          },
          "country_of_residence": {
            "type": "string",
            "description": "The customer's country of residence. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "GB"
          },
          "country_of_taxation": {
            "type": "string",
            "description": "The customer's country of taxation. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "GB"
          },
          "accessibility": {
            "$ref": "#/components/schemas/v1customersCustomerAccessibility",
            "description": "The customer's accessibility requirements. Optional for create requests.",
            "x-example-override": "CUSTOMER_ACCESSIBILITY_LARGE_PRINT"
          },
          "external_customer_id": {
            "type": "string",
            "description": "An external customer ID. May be used to associate a customer in Vault with an existing customer ID. Vault does not use this for any other purpose. Optional for create requests.\n\nMax length: 256 characters.",
            "x-example-override": "b29ebe57-fbcd-4377-95b5-b0e3f3cf95d7"
          }
        },
        "description": "Customer details. This details object will be replaced by a more general object in the future."
      },
      "v1customersCustomerGender": {
        "type": "string",
        "enum": [
          "CUSTOMER_GENDER_UNKNOWN",
          "CUSTOMER_GENDER_FEMALE",
          "CUSTOMER_GENDER_MALE"
        ],
        "default": "CUSTOMER_GENDER_UNKNOWN",
        "description": "The customer's gender."
      },
      "v1customersCustomerStatus": {
        "type": "string",
        "enum": [
          "CUSTOMER_STATUS_UNKNOWN",
          "CUSTOMER_STATUS_ACTIVE",
          "CUSTOMER_STATUS_FROZEN",
          "CUSTOMER_STATUS_DECEASED",
          "CUSTOMER_STATUS_PROSPECT"
        ],
        "default": "CUSTOMER_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "CUSTOMER_STATUS_ACTIVE": "The customer status is active. To open an account, the customer status must be active; accounts cannot be opened for a customer with any other customer status. The status of an active customer could change to either frozen or deceased but cannot change to prospect.",
          "CUSTOMER_STATUS_DECEASED": "The customer status is deceased. Accounts cannot be opened for the customer but may still be active. The status of a deceased customer could change to either active or frozen but cannot change to prospect.",
          "CUSTOMER_STATUS_FROZEN": "The customer status is frozen. Accounts cannot be opened for the customer. The status of a frozen customer could change to either active or deceased but cannot change to prospect.",
          "CUSTOMER_STATUS_PROSPECT": "The customer status is not yet active. Accounts cannot be opened. The status of a prospect customer can only change to active. Once the status has changed from prospect, it cannot be changed back to prospect.",
          "CUSTOMER_STATUS_UNKNOWN": "The customer status is unknown."
        }
      },
      "v1customersCustomerTitle": {
        "type": "string",
        "enum": [
          "CUSTOMER_TITLE_UNKNOWN",
          "CUSTOMER_TITLE_MISS",
          "CUSTOMER_TITLE_MR",
          "CUSTOMER_TITLE_MRS",
          "CUSTOMER_TITLE_MS"
        ],
        "default": "CUSTOMER_TITLE_UNKNOWN",
        "description": "The customer's title."
      },
      "v1customersListCustomerAddressesResponse": {
        "type": "object",
        "properties": {
          "customer_addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1customersCustomerAddress"
            },
            "description": "A list of customer addresses, ordered by descending creation time."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results.",
            "x-example-override": ""
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results.",
            "x-example-override": "MTkw"
          }
        }
      },
      "v1customersListCustomersRequest": {
        "type": "object",
        "properties": {
          "statuses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1customersCustomerStatus"
            },
            "description": "List of inclusive OR customer status filters. Optional.",
            "x-example-override": "[\"CUSTOMER_STATUS_ACTIVE\", \"CUSTOMER_STATUS_PROSPECT\"]"
          },
          "email_identifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of inclusive OR email identifier filters. Must be URL encoded. Optional.",
            "x-example-override": "[\"api_user@domain.com\"]"
          },
          "phone_identifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of inclusive OR phone number identifier filters. Must be URL encoded. Optional.",
            "x-example-override": "[\"+447700900796\"]"
          },
          "username_identifiers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of inclusive OR username identifier filters. Must be URL encoded. Optional.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD",
              "description": "Adds a username filter for list customers"
            },
            "x-example-override": "[\"api_user\", \"another_api_user\"]"
          },
          "external_customer_id_pattern_match": {
            "$ref": "#/components/schemas/customersListCustomersRequestExternalCustomerIDPatternMatch",
            "description": "Pattern matching filter for the customer_details.external_customer_id field.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 6
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "IMP_1119_SEARCH_BY_EXTERNAL_CUSTOMER_ID"
            }
          },
          "page_size": {
            "type": "integer",
            "format": "int64",
            "description": "Number of customers to be listed.\n\nRequired.\nMin value: 1.\nMax value: 200.",
            "x-example-override": "10"
          },
          "page_token": {
            "type": "string",
            "description": "Token of the page the results are to retrieved from. If empty, returns the first page of results. Optional.",
            "x-example-override": "MjI2NDEwMDM4OTg2MTU3NTI4OCFDNjQ5ODk4NDA1ODYwOTA3MDM4NQ"
          }
        },
        "required": [
          "page_size"
        ]
      },
      "v1customersListCustomersResponse": {
        "type": "object",
        "properties": {
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1customersCustomer"
            },
            "description": "A list of customers. Customers are ordered by ascending ID."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, the response contains the last page of results.",
            "x-example-override": ""
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, the response contains the first page of results.",
            "x-example-override": "MjI2NDEwMDM4OTg2MTU3NTI4OCE2NDk5MDIzODgyNTk2NTYyNzMy"
          }
        }
      },
      "v1customersUpdateCustomerAdditionalDetailsRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters.",
            "x-example-override": "b73bfaaf-7d8f-4bac-9c4f-69e7197108ee"
          },
          "customer_id": {
            "type": "string",
            "description": "The unique ID of the customer.\n\nRequired.",
            "x-example-override": "6499023882596562732"
          },
          "items_to_add": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Items that are to be added to the customer's additional details. Required if there are no items to remove.\n\nRequired.",
            "x-example-override": "{\"key1\": \"value1\"}"
          },
          "items_to_remove": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Items that are to be removed from the customer's additional details. Required if there are no items to add.",
            "x-example-override": "[\"key2\", \"key3\"]"
          }
        },
        "required": [
          "request_id",
          "customer_id",
          "items_to_add"
        ]
      },
      "v1customersUpdateCustomerAddressRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters.",
            "x-example-override": "106e5193-d062-4688-aef3-1f208bfa9b02"
          },
          "customer_address": {
            "$ref": "#/components/schemas/v1customersCustomerAddress",
            "description": "The address to be updated. Required.",
            "x-excluded-fields": [
              "id",
              "customer_id"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "Field mask used to indicate which fields of the customer's address are to be updated. Required.",
            "x-example-override": "{\"paths\": [\"street_number\", \"street\", \"postal_area\"]}"
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1customersUpdateCustomerRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters.",
            "x-example-override": "2b245df5-5d0c-49f3-9a96-ec14a0795364"
          },
          "customer": {
            "$ref": "#/components/schemas/v1customersCustomer",
            "description": "The customer to update.",
            "x-excluded-fields": [
              "id",
              "additional_details"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "Field mask used to indicate which fields of the customer's details are to be updated. Required.",
            "x-example-override": "{\"paths\": [\"status\", \"identifiers\", \"customer_details.contact_method\"]}"
          }
        },
        "required": [
          "request_id"
        ]
      },
      "CoreAPIDerivedParametersINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "GetDerivedParameterValuesFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureGetDerivedParameterValuesFAILED_PRECONDITION_0",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "errorsPreconditionFailureGetDerivedParameterValuesFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationGetDerivedParameterValuesFAILED_PRECONDITION_0"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureViolationGetDerivedParameterValuesFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "EXCEPTION_RAISED_BY_SMART_CONTRACT"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"exception_args\":\"value\",\"exception_type\":\"value\",\"smart_contract_version.id\":\"value\",\"stack_trace\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.id",
                "description": "The ID of the Account."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The ID of the Smart Contract version."
              },
              {
                "key": "exception_type",
                "description": "The Python type of the exception raised."
              },
              {
                "key": "exception_args",
                "description": "The arguments of the Exception object."
              },
              {
                "key": "stack_trace",
                "description": "The stack trace that describes the execution stack that led to the exception being raised."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "v1derived_parametersGetDerivedParameterValuesResponse": {
        "type": "object",
        "properties": {
          "parameter_values": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The derived instance-level parameters for the associated product that have been defined in the account's Smart Contract code."
          }
        }
      },
      "CoreAPIJournalEventsUNIMPLEMENTED_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "UNIMPLEMENTED"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "v1eventsGetJournalEventsChecksumResponse": {
        "type": "object",
        "properties": {
          "window_journal_events_count": {
            "type": "integer",
            "format": "int32",
            "description": "The number of events that occurred within the time window."
          },
          "window_journal_events_checksum": {
            "type": "string",
            "description": "The checksum of the Journal Events' IDs. Vault hashes each ID using SHA256, then sequentially XORs each with the previous result, and returns a hash of the final result as a hexadecimal string. So for IDs A, B, C, the result will be sha(XOR(XOR(sha(A), sha(B)), sha(C)))."
          }
        }
      },
      "v1eventsJournalEvent": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string",
            "description": "Uniquely identifies the event in Vault."
          },
          "resource_id": {
            "type": "string",
            "description": "The ID of the resource that is the subject of this event."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time at which the event occurred, in UTC. Formatted as an RFC3339 timestamp."
          },
          "change_id": {
            "type": "string",
            "format": "int64",
            "description": "This ID of the change within the context of the subject resource."
          },
          "related_resource": {
            "$ref": "#/components/schemas/v1eventsRelatedResource",
            "description": "This is the related resource meaningful for this event."
          },
          "published": {
            "type": "boolean",
            "description": "Indicates if Vault has published this event to the Streaming API. This is unlikely to be false, and will generally only be false for very recent events or during disaster recovery."
          }
        }
      },
      "v1eventsJournalEventToReplay": {
        "type": "object",
        "properties": {
          "event_identifier": {
            "$ref": "#/components/schemas/event_identifier",
            "required": false
          },
          "resource_identifier": {
            "$ref": "#/components/schemas/v1eventsResourceIdentifier",
            "required": false
          },
          "related_resource_identifier": {
            "$ref": "#/components/schemas/v1eventsRelatedResourceIdentifier",
            "required": false
          }
        }
      },
      "v1eventsListJournalEventsResponse": {
        "type": "object",
        "properties": {
          "journal_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1eventsJournalEvent"
            },
            "description": "A list of Journal Events whose timestamps fall within the time window."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v1eventsRelatedResource": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/v1eventsResourceType",
            "description": "The type of the resource.",
            "x-release-info": {
              "noticeVersion": {
                "major": 4,
                "minor": 7
              },
              "releaseVersion": {
                "major": 6
              },
              "changeType": "REMOVE_FIELD",
              "description": "Remove field from public API as it serves no functional purpose beyond documentation."
            }
          },
          "id": {
            "type": "string",
            "description": "The ID of the resource."
          },
          "sequence_number": {
            "type": "string",
            "format": "int64",
            "description": "The ordinal position of the event in the history of the resource."
          }
        }
      },
      "v1eventsRelatedResourceIdentifier": {
        "type": "object",
        "properties": {
          "related_resource_id": {
            "type": "string",
            "description": "The ID of the resource."
          },
          "sequence_number": {
            "type": "string",
            "format": "int64",
            "description": "The ordinal position of the event in the history of the resource."
          }
        }
      },
      "v1eventsReplayJournalEventsRequest": {
        "type": "object",
        "properties": {
          "resource_type": {
            "$ref": "#/components/schemas/v1eventsResourceType",
            "description": "The type of the Vault resource."
          },
          "journal_events_to_replay": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1eventsJournalEventToReplay"
            },
            "title": "The list of events to replay. Duplicate identifiers are ignored and the corresponding events will only be replayed once"
          }
        }
      },
      "v1eventsReplayJournalEventsResponse": {
        "type": "object",
        "properties": {
          "journal_events_batch_id": {
            "type": "string",
            "description": "Vault will include this unique ID in the `X-JournalEventsBatch-ID` Kafka header of all messages produced as part of the replay. This ID is ephemeral - if you need to use the ID to correlate which events have been streamed out as a result of this request, you will need to persist it."
          }
        }
      },
      "v1eventsResourceIdentifier": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "string",
            "description": "The ID of the resource."
          },
          "change_id": {
            "type": "string",
            "format": "int64",
            "description": "This ID of the change within the context of the subject resource."
          }
        }
      },
      "v1eventsResourceType": {
        "type": "string",
        "enum": [
          "RESOURCE_TYPE_UNKNOWN",
          "RESOURCE_TYPE_SCHEDULER_OPERATION",
          "RESOURCE_TYPE_ACCOUNT_BALANCE",
          "RESOURCE_TYPE_ENRICHED_POSTING_INSTRUCTION_BATCH",
          "RESOURCE_TYPE_POSTING_INSTRUCTION_BATCH",
          "RESOURCE_TYPE_ACCOUNT",
          "RESOURCE_TYPE_ACCOUNT_UPDATE",
          "RESOURCE_TYPE_ACCOUNT_UPDATE_BATCH",
          "RESOURCE_TYPE_ACCOUNT_V2",
          "RESOURCE_TYPE_RESTRICTION_SET",
          "RESOURCE_TYPE_FLAG",
          "RESOURCE_TYPE_PARAMETER",
          "RESOURCE_TYPE_PARAMETERVALUE",
          "RESOURCE_TYPE_VAULT_JOB",
          "RESOURCE_TYPE_PARAMETER_VALUE_HIERARCHY_NODE",
          "RESOURCE_TYPE_VAULT_JOB_GROUP",
          "RESOURCE_TYPE_ADJUSTMENT",
          "RESOURCE_TYPE_BALANCE_EVENT_V2"
        ],
        "default": "RESOURCE_TYPE_UNKNOWN",
        "x-enum-value-release-info": {
          "RESOURCE_TYPE_ADJUSTMENT": {
            "releaseVersion": {
              "major": 5,
              "minor": 7
            },
            "changeType": "ADD_ENUM_VALUE",
            "featureFlag": "IMP_153_ADJUSTMENTS_PROD"
          },
          "RESOURCE_TYPE_BALANCE_EVENT_V2": {
            "releaseVersion": {
              "major": 5,
              "minor": 7
            },
            "changeType": "ADD_ENUM_VALUE",
            "featureFlag": "IMP_1354_BALANCES_V2_STREAMING"
          }
        },
        "x-enum-value-descriptions": {
          "RESOURCE_TYPE_ACCOUNT": "The Core API v1 Account resource.",
          "RESOURCE_TYPE_ACCOUNT_BALANCE": "The Core API v1 Balance resource.",
          "RESOURCE_TYPE_ACCOUNT_UPDATE": "The Core API Account Update resource.",
          "RESOURCE_TYPE_ACCOUNT_UPDATE_BATCH": "The Core API Account Update Batch resource.",
          "RESOURCE_TYPE_ACCOUNT_V2": "The Core API v2 Account resource.",
          "RESOURCE_TYPE_ADJUSTMENT": "The Core API Adjustment resource.",
          "RESOURCE_TYPE_BALANCE_EVENT_V2": "The Core API v2 Balance resource.",
          "RESOURCE_TYPE_ENRICHED_POSTING_INSTRUCTION_BATCH": "The Core API Enriched Posting Instruction Batch resource.",
          "RESOURCE_TYPE_FLAG": "The Core API Flag resource.",
          "RESOURCE_TYPE_PARAMETER": "The Core API Parameter resource.",
          "RESOURCE_TYPE_PARAMETERVALUE": "The Core API Parameter Value resource.",
          "RESOURCE_TYPE_PARAMETER_VALUE_HIERARCHY_NODE": "The Core API Parameter Value Hierarchy Node resource.",
          "RESOURCE_TYPE_POSTING_INSTRUCTION_BATCH": "The Core API Posting Instruction Batch resource.",
          "RESOURCE_TYPE_RESTRICTION_SET": "The Core API Restriction Set resource.",
          "RESOURCE_TYPE_SCHEDULER_OPERATION": "The Core API Scheduler Operation resource.",
          "RESOURCE_TYPE_VAULT_JOB": "The Core API Vault Jobs resource.",
          "RESOURCE_TYPE_VAULT_JOB_GROUP": "The Core API Vault Jobs Group resource."
        }
      },
      "v1eventsTimeWindow": {
        "type": "object",
        "properties": {
          "lower_bound_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Lower bound timestamp (inclusive). Must be formatted as an RFC3339 timestamp."
          },
          "upper_bound_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Upper bound timestamp (exclusive). Must be later than the lower_bound_timestamp and formatted as an RFC3339 timestamp."
          }
        }
      },
      "BatchGetFlagDefinitionsNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "BatchGetFlagsNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CoreAPIFlagsINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "CreateFlagALREADY_EXISTS_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "ALREADY_EXISTS"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CreateFlagDefinitionALREADY_EXISTS_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "ALREADY_EXISTS"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CreateFlagDefinitionFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateFlagDefinitionFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateFlagFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateFlagFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_2",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateFlagFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_3",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateFlagFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_4",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateFlagFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_5",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateFlagFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_6",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateFlagDefinitionFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateFlagDefinitionFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateFlagDefinitionNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "UpdateFlagFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateFlagFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateFlagNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "errorsPreconditionFailureCreateFlagDefinitionFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateFlagDefinitionFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_2"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_3"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_4"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_5"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateFlagFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_6"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateFlagDefinitionFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateFlagDefinitionFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateFlagFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateFlagFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureViolationCreateFlagDefinitionFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "REQUEST_ID_ALREADY_USED_BY_DIFFERENT_REQUEST_TYPE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"request_id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "request_id",
                "description": "The provided request ID."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "REQUEST_ID_ALREADY_USED_BY_DIFFERENT_REQUEST_TYPE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"request_id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "request_id",
                "description": "The provided request ID."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "EXPIRY_TIME_BEFORE_EFFECTIVE_TIME"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "FLAG_DEFINITION_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "ACCOUNT_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "PAYMENT_DEVICE_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateFlagFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "CUSTOMER_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateFlagDefinitionFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "REQUEST_ID_ALREADY_USED_BY_DIFFERENT_REQUEST_TYPE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"request_id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "request_id",
                "description": "The provided request ID."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateFlagFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "REQUEST_ID_ALREADY_USED_BY_DIFFERENT_REQUEST_TYPE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"request_id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "request_id",
                "description": "The provided request ID."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "v1flagsBatchGetFlagDefinitionsResponse": {
        "type": "object",
        "properties": {
          "flag_definitions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1flagsFlagDefinition"
            },
            "description": "Maps requested Flag Definition IDs to their Flag Definitions."
          }
        }
      },
      "v1flagsBatchGetFlagsResponse": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1flagsFlag"
            },
            "description": "Maps requested Flag IDs to their Flag."
          }
        }
      },
      "v1flagsCreateFlagDefinitionRequest": {
        "type": "object",
        "properties": {
          "flag_definition": {
            "$ref": "#/components/schemas/v1flagsFlagDefinition",
            "description": "The Flag Definition that is to be created. Required.",
            "x-excluded-fields": [
              "create_timestamp",
              "is_active"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 256 characters."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1flagsCreateFlagRequest": {
        "type": "object",
        "properties": {
          "flag": {
            "$ref": "#/components/schemas/v1flagsFlag",
            "description": "The Flag that is to be created. Required.",
            "x-excluded-fields": [
              "id",
              "creation_timestamp",
              "create_timestamp",
              "is_active"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 256 characters."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1flagsListFlagDefinitionsResponse": {
        "type": "object",
        "properties": {
          "flag_definitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1flagsFlagDefinition"
            },
            "description": "A list of matching Flag Definitions, sorted by descending `create_timestamp`."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1flagsListFlagsResponse": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1flagsFlag"
            },
            "description": "A list of matching Flags, sorted by descending creation time."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1flagsUpdateFlagDefinitionRequest": {
        "type": "object",
        "properties": {
          "flag_definition": {
            "$ref": "#/components/schemas/v1flagsFlagDefinition",
            "description": "The Flag Definition that is to be updated. Required.",
            "x-excluded-fields": [
              "id",
              "name",
              "description",
              "required_flag_level",
              "create_timestamp",
              "flag_visibility"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 256 characters."
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "Field mask used to indicate which fields in the Flag Definition are to be updated. The only valid path in the update_mask is 'is_active'. Required."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1flagsUpdateFlagRequest": {
        "type": "object",
        "properties": {
          "flag": {
            "$ref": "#/components/schemas/v1flagsFlag",
            "description": "The Flag that is to be updated. Required.",
            "x-excluded-fields": [
              "id",
              "flag_definition_id",
              "customer_id",
              "account_id",
              "payment_device_id",
              "creation_timestamp",
              "create_timestamp",
              "effective_timestamp",
              "expiry_timestamp",
              "is_backdated",
              "value"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 256 characters."
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "Field mask used to indicate which fields in the Flag are to be updated. Valid paths in the update mask are 'description' and 'is_active'. Required. <br> From Vault version 5.2, using 'is_active' in the update path is deprecated in favour of creating Flags with Value `FLAG_VALUE_OFF`."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "CreateGlobalParameterValueALREADY_EXISTS_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "ALREADY_EXISTS"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          }
        }
      },
      "CreateGlobalParameterValueFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateGlobalParameterValueFAILED_PRECONDITION_0",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "errorsPreconditionFailureCreateGlobalParameterValueFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateGlobalParameterValueFAILED_PRECONDITION_0"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureViolationCreateGlobalParameterValueFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "OVERLAPS_EXPLICIT_PARAMETER_VALUE_EFFECTIVE_TIMESTAMP_RANGE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter_value.effective_from_timestamp\":\"value\",\"parameter_value.effective_to_timestamp\":\"value\",\"parameter_value.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter_value.id",
                "description": "The ID of the overlapped ParameterValue."
              },
              {
                "key": "parameter_value.effective_from_timestamp",
                "description": "The effective_from_timestamp of the overlapped ParameterValue."
              },
              {
                "key": "parameter_value.effective_to_timestamp",
                "description": "The effective_to_timestamp of the overlapped ParameterValue."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "v1global_parametersBatchGetGlobalParametersResponse": {
        "type": "object",
        "properties": {
          "global_parameters": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1global_parametersGlobalParameter"
            },
            "description": "Maps `GlobalParameter` ID to `GlobalParameter`."
          }
        }
      },
      "v1global_parametersCreateGlobalParameterRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used for idempotency.\n\nRequired."
          },
          "global_parameter": {
            "$ref": "#/components/schemas/v1global_parametersGlobalParameter",
            "description": "The `GlobalParameter` to be created.\n\nRequired.",
            "x-excluded-fields": [
              "create_timestamp"
            ]
          },
          "initial_value": {
            "type": "string",
            "description": "This will be used to create a `GlobalParameterValue` associated with the newly created `GlobalParameter`. Use this value accordingly for each Global Parameter Type; for Dates, it is in the format `YYYY-MM-DD`. The `effective_timestamp` of the created `GlobalParameterValue` will be the Unix epoch.\n\nRequired."
          }
        },
        "required": [
          "request_id",
          "global_parameter",
          "initial_value"
        ]
      },
      "v1global_parametersCreateGlobalParameterValueRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used for idempotency.\n\nRequired."
          },
          "global_parameter_value": {
            "$ref": "#/components/schemas/v1global_parametersGlobalParameterValue",
            "description": "The `GlobalParameterValue` to be created.\n\nRequired.",
            "x-excluded-fields": [
              "id",
              "create_timestamp"
            ]
          }
        },
        "required": [
          "request_id",
          "global_parameter_value"
        ]
      },
      "v1global_parametersListGlobalParameterValuesResponse": {
        "type": "object",
        "properties": {
          "global_parameter_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1global_parametersGlobalParameterValue"
            },
            "description": "A list of `GlobalParameterValue`s, ordered by ascending effective time."
          },
          "next_page_token": {
            "type": "string",
            "description": "The token used to retrieve the next page. If empty, this returns the last page of results."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The token used to retrieve the previous page. If empty, this returns the first page of results."
          }
        }
      },
      "v1global_parametersListGlobalParametersResponse": {
        "type": "object",
        "properties": {
          "global_parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1global_parametersGlobalParameter"
            },
            "description": "A list of `GlobalParameter`s, ordered by descending creation time."
          },
          "next_page_token": {
            "type": "string",
            "description": "The token used to retrieve the next page. If empty, this returns the last page of results."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The token used to retrieve the previous page. If empty, this returns the first page of results."
          }
        }
      },
      "v1accounts_commonAccountView": {
        "type": "string",
        "enum": [
          "ACCOUNT_VIEW_BASIC"
        ],
        "default": "ACCOUNT_VIEW_BASIC",
        "x-enum-value-descriptions": {
          "ACCOUNT_VIEW_BASIC": "Returned Account(s) include no balances. Default."
        }
      },
      "v1internal_accountsBatchGetInternalAccountsResponse": {
        "type": "object",
        "properties": {
          "internal_accounts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1internal_accountsInternalAccount"
            },
            "description": "Map of the internal account ID to the internal account."
          }
        }
      },
      "v1internal_accountsCreateInternalAccountRequest": {
        "type": "object",
        "properties": {
          "internal_account": {
            "$ref": "#/components/schemas/v1internal_accountsInternalAccount",
            "description": "The internal account that is to be created. Required.",
            "x-excluded-fields": [
              "name",
              "product_version_id",
              "status",
              "opening_timestamp"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1internal_accountsInternalAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique identifier for the account.\n\nRequired.\nMax length: 36 characters."
          },
          "name": {
            "type": "string",
            "description": "The account name. From Vault Core 5.0 onwards, this will always be set to empty."
          },
          "product_id": {
            "type": "string",
            "description": "The ID of the product. From Vault Core 5.0 onwards, this will always be set to empty."
          },
          "product_version_id": {
            "type": "string",
            "description": "The ID of the product version. From Vault Core 5.0 onwards, this will always be set to empty."
          },
          "permitted_denominations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The permitted denominations for the account. Sending an empty value will default to the permitted_denominations defined in values.yaml."
          },
          "status": {
            "$ref": "#/components/schemas/v1accounts_commonAccountStatus",
            "description": "The status of the account. Will always be set to open, and cannot be closed."
          },
          "opening_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the account was opened, in UTC. Formatted as an RFC3339 timestamp. Optional."
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map of unstructured fields that hold instance-specific account details, for example, the source of funds. Optional.<br> <br>The details must not include:<br> - Any image data, including any KYC collateral such as passport, licence or other images. These must be stored in a separate repository outside of Vault.<br> - Any data that is classified as PII data.<br> The details cannot be utilised by Smart Contracts to drive any type of product behaviour.<br><br> Max size: 1MB (but it is strongly recommended to keep below this size)."
          },
          "accounting": {
            "$ref": "#/components/schemas/v1accounts_commonAccounting",
            "description": "The side of the balance sheet where the account balance is counted. Must be either ASSET or LIABILITY."
          }
        },
        "required": [
          "id"
        ]
      },
      "v1internal_accountsListInternalAccountsResponse": {
        "type": "object",
        "properties": {
          "internal_accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1internal_accountsInternalAccount"
            },
            "description": "List of matching internal accounts, ordered by ascending `id`."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1ledger_balancesLedgerBalance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Ledger Balance. Output only.",
            "x-example-override": "b2d26233-9438-43b3-abe5-cda0db5dfcae"
          },
          "account_id": {
            "type": "string",
            "description": "The ID of the associated account.",
            "x-example-override": "bebbe4e5-fdcc-4247-a71d-8b02ba3d3b90"
          },
          "account_address": {
            "type": "string",
            "description": "The account address, which represents one partition of the total balances held on the account.",
            "x-example-override": "DEFAULT"
          },
          "phase": {
            "$ref": "#/components/schemas/v1ledger_balancesPostingPhase",
            "description": "The posting phase the balance applies to."
          },
          "asset": {
            "type": "string",
            "description": "The asset in which the balance is held.",
            "x-example-override": "COMMERCIAL_BANK_MONEY"
          },
          "denomination": {
            "type": "string",
            "description": "The denomination in which the balance is held for the given asset.",
            "x-example-override": "GBP"
          },
          "amount": {
            "type": "string",
            "description": "The amount, which is the net value of the balance.",
            "x-example-override": "30.50"
          },
          "total_debit": {
            "type": "string",
            "description": "The total sum of debits.",
            "x-example-override": "60.00"
          },
          "total_credit": {
            "type": "string",
            "description": "The total sum of credits.",
            "x-example-override": "90.50"
          }
        }
      },
      "v1ledger_balancesListLedgerBalancesResponse": {
        "type": "object",
        "properties": {
          "ledger_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The Postings Ledger timestamp indicating at what time these Ledger Balances were valid, in UTC. Formatted as an RFC3339 timestamp.",
            "x-example-override": "2020-01-13T19:13:23.000Z"
          },
          "ledger_balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1ledger_balancesLedgerBalance"
            },
            "description": "A list of matching Ledger Balances."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results.",
            "x-example-override": "NiFDMjU"
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results.",
            "x-example-override": "KN2iHe4"
          }
        }
      },
      "v1ledger_balancesPostingPhase": {
        "type": "string",
        "enum": [
          "POSTING_PHASE_UNKNOWN",
          "POSTING_PHASE_PENDING_INCOMING",
          "POSTING_PHASE_PENDING_OUTGOING",
          "POSTING_PHASE_COMMITTED"
        ],
        "default": "POSTING_PHASE_UNKNOWN",
        "x-enum-value-descriptions": {
          "POSTING_PHASE_COMMITTED": "The posting is committed (hard posting).",
          "POSTING_PHASE_PENDING_INCOMING": "The posting is pending incoming (soft posting).",
          "POSTING_PHASE_PENDING_OUTGOING": "The posting is pending outgoing (soft posting).",
          "POSTING_PHASE_UNKNOWN": "The posting phase is not set which will result in a validation error."
        }
      },
      "BatchCreateParameterValuesFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_0",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "BatchCreateParameterValuesFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "BatchCreateParameterValuesFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_2",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "BatchCreateParameterValuesFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_3",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "BatchCreateParameterValuesFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_4",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "BatchCreateParameterValuesFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_5",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "BatchCreateParameterValuesFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_6",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "BatchCreateParameterValuesFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_7",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "BatchCreateParameterValuesFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_8",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "BatchCreateParameterValuesFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_9",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "BatchGetParameterValueHierarchyNodesNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "BatchGetParameterValuesNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "BatchGetParametersNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CoreAPIParametersINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "CreateParameterALREADY_EXISTS_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "ALREADY_EXISTS"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_0",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_2",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_3",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_4",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_5",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_6",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_7",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_8",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_9",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueHierarchyNodeALREADY_EXISTS_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "ALREADY_EXISTS"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueHierarchyNodeFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueHierarchyNodeFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateParameterValueHierarchyNodeFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateParameterValueHierarchyNodeFAILED_PRECONDITION_2",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateParameterValueFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateParameterValueFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateParameterValueFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateParameterValueFAILED_PRECONDITION_2",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateParameterValueFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateParameterValueFAILED_PRECONDITION_3",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateParameterValueFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateParameterValueFAILED_PRECONDITION_4",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateParameterValueFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateParameterValueFAILED_PRECONDITION_5",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateParameterValueHierarchyNodeFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateParameterValueHierarchyNodeFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateParameterValueHierarchyNodeNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "UpdateParameterValueNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_0"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_2"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_3"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_4"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_5"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_6"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_7"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_8"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureBatchCreateParameterValuesFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_9"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_0"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_2"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_3"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_4"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_5"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_6"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_7"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_8"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_9"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueHierarchyNodeFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueHierarchyNodeFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateParameterValueHierarchyNodeFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateParameterValueHierarchyNodeFAILED_PRECONDITION_2"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateParameterValueFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateParameterValueFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateParameterValueFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateParameterValueFAILED_PRECONDITION_2"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateParameterValueFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateParameterValueFAILED_PRECONDITION_3"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateParameterValueFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateParameterValueFAILED_PRECONDITION_4"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateParameterValueFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateParameterValueFAILED_PRECONDITION_5"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateParameterValueHierarchyNodeFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateParameterValueHierarchyNodeFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "COINCIDENT_PARAMETER_VALUE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter.id\":\"value\",\"parameter_value.effective_from_timestamp\":\"value\",\"parameter_value.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter_value.id",
                "description": "The ID of the Parameter Value coincident with the Parameter Value being created."
              },
              {
                "key": "parameter.id",
                "description": "The ID of the Parameter. Where this violation appears multiple times, this can be used to identify the Parameter Value in the request that caused this particular violation."
              },
              {
                "key": "parameter_value.effective_from_timestamp",
                "description": "The timestamp the coincident Parameter Value was effective from in UTC. Formatted as an RFC3339 timestamp."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "OVERLAPS_EXPLICIT_PARAMETER_VALUE_EFFECTIVE_TIMESTAMP_RANGE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter.id\":\"value\",\"parameter_value.effective_from_timestamp\":\"value\",\"parameter_value.effective_to_timestamp\":\"value\",\"parameter_value.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter_value.id",
                "description": "The ID of the Parameter Value that overlaps with the Parameter Value being created."
              },
              {
                "key": "parameter.id",
                "description": "The ID of the Parameter. Where this violation appears multiple times, this can be used to identify the Parameter Value in the request that caused this particular violation"
              },
              {
                "key": "parameter_value.effective_from_timestamp",
                "description": "The effective_from_timestamp of the Parameter Value that overlaps in UTC. Formatted as an RFC3339 timestamp."
              },
              {
                "key": "parameter_value.effective_to_timestamp",
                "description": "The effective_to_timestamp of the Parameter Value that overlaps in UTC. Formatted as an RFC3339 timestamp."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "OWNER_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_ACCOUNT_OWNER"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"account.type\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.id",
                "description": "The ID of the Account that is not valid."
              },
              {
                "key": "account.status",
                "description": "If the Account was in an invalid state, this will contain the Account status."
              },
              {
                "key": "account.type",
                "description": "If the Account was of the wrong type, this will contain the Account type."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "ACCOUNT_REFERENCED_BY_PARAMETER_VALUE_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.id",
                "description": "The ID of the missing Account referenced by the Parameter Value."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "UNSUPPORTED_SMART_CONTRACT_API_VERSION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"minimum_smart_contract_api_version\":\"value\",\"smart_contract_api_version\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_api_version",
                "description": "The API version of the Smart Contract."
              },
              {
                "key": "minimum_smart_contract_api_version",
                "description": "The minimum supported Smart Contract API version."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The ID of the Smart Contract version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "PARAMETER_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter.id",
                "description": "The ID of the missing Parameter."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "CHANGE_REJECTED_BY_CONTRACT"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"rejection_message\":\"value\",\"rejection_type\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "rejection_message",
                "description": "The rejection reason that the pre_parameter_change_hook returned."
              },
              {
                "key": "rejection_type",
                "description": "The type of rejection as specified in the Smart Contract."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "EXCEPTION_RAISED_BY_SMART_CONTRACT"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account_id\":\"value\",\"exception_args\":\"value\",\"exception_type\":\"value\",\"smart_contract_version_id\":\"value\",\"stack_trace\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account_id",
                "description": "The ID of the Account."
              },
              {
                "key": "smart_contract_version_id",
                "description": "The ID of the Smart Contract version."
              },
              {
                "key": "exception_type",
                "description": "The Python type of the exception raised."
              },
              {
                "key": "exception_args",
                "description": "The arguments of the Exception object."
              },
              {
                "key": "stack_trace",
                "description": "The stack trace that describes the execution stack that led to the exception being raised."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationBatchCreateParameterValuesFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "FUTURE_DATED_INSTANCE_PARAMETER_VALUE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"instance_parameter.name\":\"value\",\"parameter.id\":\"value\",\"parameter_value.effective_from_timestamp\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter.id",
                "description": "The Parameter ID that maps to an Instance Parameter that the request attempted to future date."
              },
              {
                "key": "instance_parameter.name",
                "description": "The Instance Parameter name that the request attempted to future date."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The ID of the Smart Contract version."
              },
              {
                "key": "parameter_value.effective_from_timestamp",
                "description": "The timestamp the attempted Parameter Value creation would have been effective from. Formatted as an RFC3339 timestamp in UTC."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "COINCIDENT_PARAMETER_VALUE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter_value.effective_from_timestamp\":\"value\",\"parameter_value.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter_value.id",
                "description": "The ID of the Parameter Value coincident with the requested effective_from_time."
              },
              {
                "key": "parameter_value.effective_from_timestamp",
                "description": "The timestamp the coincident Parameter Value is effective from in UTC. Formatted as an RFC3339 timestamp."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "OVERLAPS_EXPLICIT_PARAMETER_VALUE_EFFECTIVE_TIMESTAMP_RANGE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter.id\":\"value\",\"parameter_value.effective_from_timestamp\":\"value\",\"parameter_value.effective_to_timestamp\":\"value\",\"parameter_value.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter_value.id",
                "description": "The ID of the Parameter Value that overlaps."
              },
              {
                "key": "parameter.id",
                "description": "The ID of the Parameter associated with the Parameter Value that overlaps."
              },
              {
                "key": "parameter_value.effective_from_timestamp",
                "description": "The effective_from_timestamp of the Parameter Value that overlaps in UTC. Formatted as an RFC3339 timestamp."
              },
              {
                "key": "parameter_value.effective_to_timestamp",
                "description": "The effective_to_timestamp of the Parameter Value that overlaps in UTC. Formatted as an RFC3339 timestamp."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "OWNER_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_ACCOUNT_OWNER"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"account.type\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.id",
                "description": "The ID of the Account that is not valid."
              },
              {
                "key": "account.status",
                "description": "If the Account was in an invalid state, this will contain the Account status."
              },
              {
                "key": "account.type",
                "description": "If the Account was of the wrong type, this will contain the Account type."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "ACCOUNT_REFERENCED_BY_PARAMETER_VALUE_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.id",
                "description": "The ID of the missing Account referenced by the Parameter Value."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "UNSUPPORTED_SMART_CONTRACT_API_VERSION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"minimum_smart_contract_api_version\":\"value\",\"smart_contract_api_version\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_api_version",
                "description": "The API version of the Smart Contract."
              },
              {
                "key": "minimum_smart_contract_api_version",
                "description": "The minimum supported Smart Contract API version."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The ID of the Smart Contract version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "PARAMETER_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter.id",
                "description": "The ID of the missing Parameter."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "CHANGE_REJECTED_BY_CONTRACT"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"rejection_message\":\"value\",\"rejection_type\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "rejection_message",
                "description": "The rejection reason that the pre_parameter_change_hook returned."
              },
              {
                "key": "rejection_type",
                "description": "The type of rejection as specified in the Smart Contract."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "EXCEPTION_RAISED_BY_SMART_CONTRACT"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account_id\":\"value\",\"exception_args\":\"value\",\"exception_type\":\"value\",\"smart_contract_version_id\":\"value\",\"stack_trace\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account_id",
                "description": "The ID of the Account."
              },
              {
                "key": "smart_contract_version_id",
                "description": "The ID of the Smart Contract version."
              },
              {
                "key": "exception_type",
                "description": "The Python type of the exception raised."
              },
              {
                "key": "exception_args",
                "description": "The arguments of the Exception object."
              },
              {
                "key": "stack_trace",
                "description": "The stack trace that describes the execution stack that led to the exception being raised."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "FUTURE_DATED_INSTANCE_PARAMETER_VALUE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"instance_parameter.name\":\"value\",\"parameter_value.effective_from_timestamp\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "instance_parameter.name",
                "description": "The Instance Parameter name that the request attempted to future date."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The ID of the Smart Contract version."
              },
              {
                "key": "parameter_value.effective_from_timestamp",
                "description": "The timestamp the attempted Parameter Value creation would have been effective from. Formatted as an RFC3339 timestamp in UTC."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueHierarchyNodeFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "PARENT_PARAMETER_VALUE_HIERARCHY_NODE_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateParameterValueHierarchyNodeFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SIBLING_PARAMETER_VALUE_HIERARCHY_NODE_WITH_SAME_NAME_ALREADY_EXISTS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter_value_hierarchy_node.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter_value_hierarchy_node.id",
                "description": "The ID of the Parameter Value Hierarchy Node that shares the same `parent_id` and `name`."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateParameterValueFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "NEW_EFFECTIVE_TO_TIMESTAMP_IN_PAST"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateParameterValueFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "EXPIRED_PARAMETER_VALUE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter_value.effective_to_timestamp\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter_value.effective_to_timestamp",
                "description": "The time that the Parameter Value expired."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateParameterValueFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "NEW_EFFECTIVE_TO_TIMESTAMP_NOT_AFTER_EFFECTIVE_FROM_TIMESTAMP"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter_value.effective_from_timestamp\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter_value.effective_from_timestamp",
                "description": "The effective_from_timestamp of the Parameter Value."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateParameterValueFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "ALREADY_EFFECTIVE_PARAMETER_VALUE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter_value.effective_from_timestamp\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter_value.effective_from_timestamp",
                "description": "The time at which the Parameter Value became effective."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateParameterValueFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "CANCELLED_PARAMETER_VALUE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"cancelled_timestamp\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "cancelled_timestamp",
                "description": "The time at which the Parameter Value was cancelled."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateParameterValueHierarchyNodeFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SIBLING_PARAMETER_VALUE_HIERARCHY_NODE_WITH_SAME_NAME_ALREADY_EXISTS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter_value_hierarchy_node.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter_value_hierarchy_node.id",
                "description": "The ID of the Parameter Value Hierarchy Node that shares the same `parent_id` and `name`."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "parametersEffectiveParameterValueParameterStatus": {
        "type": "string",
        "enum": [
          "PARAMETER_STATUS_UNKNOWN",
          "PARAMETER_STATUS_REQUESTED",
          "PARAMETER_STATUS_EXPECTED",
          "PARAMETER_STATUS_EXPECTED_AT_EFFECTIVE_TIME",
          "PARAMETER_STATUS_EXPECTED_OUTSIDE_EFFECTIVE_TIME"
        ],
        "default": "PARAMETER_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "PARAMETER_STATUS_EXPECTED": "This status is only set when Parameter ID is expected in any of the Smart Contracts specified in `smart_contract_version_ids`.",
          "PARAMETER_STATUS_EXPECTED_AT_EFFECTIVE_TIME": "This status is set when neither of the Parameter options (`smart_contract_version_ids`, `parameter_ids`) are used and the Parameter is expected by the Smart Contract Version associated with the Customer Account during this effective time.",
          "PARAMETER_STATUS_EXPECTED_OUTSIDE_EFFECTIVE_TIME": "This status is set when neither of the Parameter options (`smart_contract_version_ids`, `parameter_ids`) are used and the Parameter is expected by the Smart Contract Version associated with the Customer Account at some time outside this time range.",
          "PARAMETER_STATUS_REQUESTED": "This status is only set when the Parameter ID is explicitly requested through the `parameter_ids` field and this Parameter ID is not expected in any of the `smart_contract_version_ids`."
        }
      },
      "parametersListParameterValueHierarchyNodesRequestOrderBy": {
        "type": "string",
        "enum": [
          "ORDER_BY_DEPTH_ASC"
        ],
        "default": "ORDER_BY_DEPTH_ASC"
      },
      "v1parametersBatchCreateParameterValuesRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID used to ensure this request is idempotent. Required."
          },
          "parameter_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1parametersParameterValue"
            },
            "description": "The batch of Parameter Values to create.",
            "x-excluded-fields": [
              "id",
              "create_timestamp",
              "update_timestamp",
              "effective_to_timestamp",
              "effective_to_timestamp_is_explicit",
              "is_cancelled",
              "cancel_timestamp"
            ]
          }
        }
      },
      "v1parametersBatchCreateParameterValuesResponse": {
        "type": "object",
        "properties": {
          "parameter_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1parametersParameterValue"
            },
            "description": "The Parameter Values created by this request."
          }
        }
      },
      "v1parametersBatchGetParameterValueHierarchyNodesResponse": {
        "type": "object",
        "properties": {
          "parameter_value_hierarchy_nodes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1parametersParameterValueHierarchyNode"
            },
            "description": "A map from Parameter Value Hierarchy Node IDs to Parameter Value Hierarchy Node."
          }
        }
      },
      "v1parametersBatchGetParameterValuesResponse": {
        "type": "object",
        "properties": {
          "parameter_values": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1parametersParameterValue"
            },
            "description": "Parameter Values keyed on ID."
          }
        }
      },
      "v1parametersBatchGetParametersResponse": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1parametersParameter"
            },
            "description": "Parameters keyed on ID."
          }
        }
      },
      "v1parametersCreateParameterRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID used to ensure this request is idempotent. Required."
          },
          "parameter": {
            "$ref": "#/components/schemas/v1parametersParameter",
            "description": "The Parameter to create. Required.",
            "x-excluded-fields": [
              "create_timestamp"
            ]
          }
        }
      },
      "v1parametersCreateParameterValueHierarchyNodeRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID used to ensure this request is idempotent."
          },
          "parameter_value_hierarchy_node": {
            "$ref": "#/components/schemas/v1parametersParameterValueHierarchyNode",
            "description": "The Parameter Value Hierarchy Node to create. Required.",
            "x-excluded-fields": [
              "parent_path",
              "create_timestamp",
              "update_timestamp",
              "depth"
            ]
          }
        }
      },
      "v1parametersCreateParameterValueRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID used to ensure this request is idempotent. Required."
          },
          "parameter_value": {
            "$ref": "#/components/schemas/v1parametersParameterValue",
            "description": "The Parameter Value to create. Required.",
            "x-excluded-fields": [
              "id",
              "create_timestamp",
              "update_timestamp",
              "effective_to_timestamp",
              "effective_to_timestamp_is_explicit",
              "is_cancelled",
              "cancel_timestamp"
            ]
          }
        }
      },
      "v1parametersEffectiveParameterValue": {
        "type": "object",
        "properties": {
          "parameter_id": {
            "type": "string",
            "description": "The Parameter ID of the Effective Parameter Value. Will be included even if `parameter_value` is not present due to a gap in the time series of the Parameter that is expected."
          },
          "from_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp from the requested time range that this Parameter Value became effective for the resource (a Customer Account or a Parameter Value Hierarchy Node). It is greater than or equal to the `parameter_value.effective_from_timestamp`."
          },
          "to_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp from the requested time range that this Parameter Value was effective until for the resource (a Customer Account or a Parameter Value Hierarchy Node). It is lesser than or equal to the `parameter_value.effective_to_timestamp`."
          },
          "parameter_value": {
            "$ref": "#/components/schemas/v1parametersParameterValue",
            "description": "The Parameter Value that is effective for the resource (a Customer Account or a Parameter Value Hierarchy Node). Can appear multiple times in a response with varying `from_timestamp` and `to_timestamp`. Will not be present if no Parameter Value is effective due to a gap in the time series."
          },
          "parameter_status": {
            "$ref": "#/components/schemas/parametersEffectiveParameterValueParameterStatus",
            "description": "The `parameter_status` of the Parameter indicates the reason for its inclusion in the response at a given time."
          }
        }
      },
      "v1parametersListParameterValueHierarchyNodesResponse": {
        "type": "object",
        "properties": {
          "parameter_value_hierarchy_nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1parametersParameterValueHierarchyNode"
            },
            "description": "The Parameter Value Hierarchy Nodes matching the specified filtering options."
          },
          "next_page_token": {
            "type": "string",
            "description": "The page token which can be used to retrieve the next page of Parameter Value Hierarchy Nodes. If empty, the given page is the last page."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The page token which can be used to retrieve the previous page of Parameter Value Hierarchy Nodes. If empty, the given page is the first page."
          }
        }
      },
      "v1parametersListParameterValuesResponse": {
        "type": "object",
        "properties": {
          "parameter_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1parametersParameterValue"
            },
            "description": "The Parameter Values matching the specified filtering options. Parameter Values are sorted by ascending `parameter_id`, `owner`, `effective_from_timestamp`."
          },
          "next_page_token": {
            "type": "string",
            "description": "The page token which can be used to retrieve the next page of Parameter Values."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The page token which can be used to retrieve the previous page of Parameter Values."
          }
        }
      },
      "v1parametersListParametersResponse": {
        "type": "object",
        "properties": {
          "parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1parametersParameter"
            },
            "description": "The Parameters matching the specified filtering options."
          },
          "next_page_token": {
            "type": "string",
            "description": "The page token which can be used to retrieve the next page of Parameters."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The page token which can be used to retrieve the previous page of Parameters."
          }
        }
      },
      "v1parametersParameterValueHierarchyNode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the Parameter Value Hierarchy Node. Forms part of the `parent_path` for child nodes. This should not have any meaning related to the resource. It must match the regex `^[A-Za-z0-9][A-Za-z0-9-_.]*$` and its length must not exceed 256 characters. Required for create or update requests."
          },
          "name": {
            "type": "string",
            "description": "A human readable identifier for this Parameter Value Hierarchy Node. It must match the regex `^[A-Za-z0-9][ A-Za-z0-9-_]*$` and its length must not exceed 256 characters. The `name` needs to be unique among nodes with a common (or no) `parent_id`. Required for create requests."
          },
          "parent_id": {
            "type": "string",
            "description": "The ID of the Parameter Value Hierarchy Node which is the parent of this Parameter Value Hierarchy Node. This is only empty for a top-level Parameter Value Hierarchy Node."
          },
          "parent_path": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A read-only list of all ancestor Parameter Value Hierarchy Node IDs, starting from the top-level node and ending with the node's parent. Will be empty for a top-level node."
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "Key value map of additional, non-structured Parameter Value Hierarchy Node details.<br> <br>The details must not include:<br> - Any image data, including any KYC collateral such as passport, licence or other images. These must be stored in a separate repository outside of Vault.<br> - Any data that is classified as PII data.<br> The details cannot be utilised by Smart Contracts to drive any type of product behaviour.<br><br> Max size: 2kB, Max key length: 128 characters"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the Parameter Value Hierarchy Node was created. This field is read-only and set to the current time on creation in UTC. Formatted as an RFC3339 timestamp."
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the Parameter Value Hierarchy Node was last updated. This field is set to the current time on update in UTC. Formatted as an RFC3339 timestamp."
          },
          "depth": {
            "type": "integer",
            "format": "int32",
            "description": "The read-only depth of the Parameter Value Hierarchy Node within the Parameter Value Hierarchy. This will be 1 for the top-level node, and increases by 1 for each descendant layer."
          }
        }
      },
      "v1parametersUpdateParameterValueHierarchyNodeRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID used to ensure this request is idempotent."
          },
          "parameter_value_hierarchy_node": {
            "$ref": "#/components/schemas/v1parametersParameterValueHierarchyNode",
            "description": "The Parameter Value Hierarchy Node to update. Required.",
            "x-excluded-fields": [
              "id",
              "parent_id",
              "parent_path",
              "create_timestamp",
              "update_timestamp",
              "depth"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "The paths of the resource to update. Values will be taken from the `parameter_value_hierarchy_node` field. The only allowed fields are `name` and `metadata`. Metadata entries can be removed by specifying a key with an empty value. Keys with values will create new entries or replace existing ones. Any existing entries with keys not in the request will not be modified. Required."
          }
        }
      },
      "v1parametersValue": {
        "type": "object",
        "properties": {
          "string_value": {
            "$ref": "#/components/schemas/string_value",
            "required": false
          },
          "decimal_value": {
            "$ref": "#/components/schemas/decimal_value",
            "required": false
          },
          "enumeration_value": {
            "$ref": "#/components/schemas/enumeration_value",
            "required": false
          },
          "date_time_value": {
            "$ref": "#/components/schemas/date_time_value",
            "required": false
          },
          "account_id_value": {
            "$ref": "#/components/schemas/account_id_value",
            "required": false
          }
        }
      },
      "v1parametersViewEffectiveParameterValuesResponse": {
        "type": "object",
        "properties": {
          "effective_parameter_values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1parametersEffectiveParameterValue"
            },
            "description": "The Effective Parameter Values returned based on the specified options. Effective Parameter Values are sorted by ascending `parameter_id`, `from_timestamp`."
          },
          "snapshot_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "All the Parameter Values are returned as they were at `snapshot_timestamp`. Parameter Values that have been mutated after the `snapshot_timestamp` may be incorrectly represented."
          },
          "next_page_token": {
            "type": "string",
            "description": "The page token which can be used to retrieve the next page of Effective Parameter Values. If empty, the given page is the last page."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The page token which can be used to retrieve the previous page of Effective Parameter Values. If empty, the given page is the first page."
          }
        }
      },
      "v1payment_devicesBatchGetPaymentDeviceLinksResponse": {
        "type": "object",
        "properties": {
          "payment_device_links": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1payment_devicesPaymentDeviceLink"
            },
            "description": "Map of requested ids to their payment device links."
          }
        }
      },
      "v1payment_devicesBatchGetPaymentDevicesResponse": {
        "type": "object",
        "properties": {
          "payment_devices": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1payment_devicesPaymentDevice"
            },
            "description": "Map of requested ids to their payment device."
          }
        }
      },
      "v1payment_devicesCreatePaymentDeviceLinkRequest": {
        "type": "object",
        "properties": {
          "payment_device_link": {
            "$ref": "#/components/schemas/v1payment_devicesPaymentDeviceLink",
            "description": "The payment device link to create. Must have status active. The provided account must have status PENDING, OPEN or PENDING_CLOSURE and the payment device must have status PENDING or ACTIVE.",
            "x-excluded-fields": [
              "start_timestamp",
              "end_timestamp"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1payment_devicesCreatePaymentDeviceRequest": {
        "type": "object",
        "properties": {
          "payment_device": {
            "$ref": "#/components/schemas/v1payment_devicesPaymentDevice",
            "description": "The payment device to create.",
            "x-excluded-fields": [
              "create_timestamp"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1payment_devicesListPaymentDeviceLinksResponse": {
        "type": "object",
        "properties": {
          "payment_device_links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1payment_devicesPaymentDeviceLink"
            },
            "description": "List of matching payment device links. Items are ordered by start_timestamp in descending order."
          }
        }
      },
      "v1payment_devicesPaymentDevice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Caller injected or Vault auto-generated unique ID for payment device. Optional. When auto-generated, this is a UUID in the canonical 8-4-4-4-12 form.\n\nMax length: 36 characters.",
            "x-create-only": true
          },
          "routing_info": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Map for caller to populate with routing information for reference when receiving/originating payment. Optional.\n",
            "x-create-only": true
          },
          "status": {
            "$ref": "#/components/schemas/v1payment_devicesPaymentDeviceStatus",
            "description": "Incremental payment device status. Required."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Create timestamp. Differs from effective timestamp if created in pending, in UTC. Output only. Formatted as an RFC3339 timestamp.",
            "x-output-only": true
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the payment device became active if the value is historic, or when the payment device will become active if the value is in the future, in UTC. Defaults to current time when creating a payment device in `PAYMENT_DEVICE_STATUS_ACTIVE` status. Required for creating a payment device with status `PAYMENT_DEVICE_STATUS_INACTIVE`, optional for other create requests, and output only otherwise. Formatted as an RFC3339 timestamp.\n"
          },
          "end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the payment device became inactive if the value is historic, or when the payment device will become inactive if the value is in the future. Required for creating a payment device with status `PAYMENT_DEVICE_STATUS_INACTIVE`, optional for other create requests, and output only otherwise. Formatted as an RFC3339 timestamp in UTC.\n"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags assigned to this payment device. Optional for creation; otherwise this is output only.",
            "x-create-only": true,
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD"
            }
          }
        },
        "title": "Generic object to represent an instrument that can originate or/and receive payments Payment devices are immutable except for the status which reflects whether the payment device can be linked to accounts using payment device tokens or not"
      },
      "v1payment_devicesPaymentDeviceLink": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A caller-injected or Vault auto-generated unique ID for the payment device link. When auto-generated, this is a UUID in the canonical 8-4-4-4-12 form.\n\nMax length: 36 characters.",
            "x-create-only": true
          },
          "token": {
            "type": "string",
            "description": "Token to identify this link. It has to be unique across active links. Required for create requests.",
            "x-create-only": true
          },
          "payment_device_id": {
            "type": "string",
            "description": "Payment device id this token connects an account to. Required for create requests.",
            "x-create-only": true
          },
          "account_id": {
            "type": "string",
            "description": "Account ID this token connects a payment device to. Required for create requests.",
            "x-create-only": true
          },
          "status": {
            "$ref": "#/components/schemas/v1payment_devicesPaymentDeviceLinkStatus",
            "description": "The status of the payment device link. Must have a value of `PAYMENT_DEVICE_LINK_STATUS_ACTIVE` or `PAYMENT_DEVICE_LINK_STATUS_INACTIVE` for create requests. Required for create requests."
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the link became active, in UTC. Required for create requests of payment device links with status `PAYMENT_DEVICE_LINK_STATUS_INACTIVE`, output only otherwise. Formatted as an RFC3339 timestamp."
          },
          "end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the link became inactive, in UTC. Required for create requests of payment device links with status `PAYMENT_DEVICE_LINK_STATUS_INACTIVE`, output only otherwise. Formatted as an RFC3339 timestamp."
          }
        },
        "description": "Represents a link between a payment device and an account via a token. Both payment devices and accounts can be connected via multiple such links. A payment device token can be associated with a single link at a time and moved across links. Movement can happen once a link has been soft deleted(or detokenised); the link will be made inactive and the token it used to held can be reused to create a new payment device link."
      },
      "v1payment_devicesPaymentDeviceLinkStatus": {
        "type": "string",
        "enum": [
          "PAYMENT_DEVICE_LINK_STATUS_UNKNOWN",
          "PAYMENT_DEVICE_LINK_STATUS_ACTIVE",
          "PAYMENT_DEVICE_LINK_STATUS_INACTIVE"
        ],
        "default": "PAYMENT_DEVICE_LINK_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "PAYMENT_DEVICE_LINK_STATUS_ACTIVE": "Link between account id and payment device can be used via the token.",
          "PAYMENT_DEVICE_LINK_STATUS_INACTIVE": "Invalid when creating a payment device link. Terminal status state, link is disabled, token can be reused.",
          "PAYMENT_DEVICE_LINK_STATUS_UNKNOWN": "Invalid when creating a payment device link."
        }
      },
      "v1payment_devicesPaymentDeviceStatus": {
        "type": "string",
        "enum": [
          "PAYMENT_DEVICE_STATUS_UNKNOWN",
          "PAYMENT_DEVICE_STATUS_PENDING",
          "PAYMENT_DEVICE_STATUS_ACTIVE",
          "PAYMENT_DEVICE_STATUS_INACTIVE"
        ],
        "default": "PAYMENT_DEVICE_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "PAYMENT_DEVICE_STATUS_ACTIVE": "Can transition only to PAYMENT_DEVICE_STATUS_INACTIVE. A payment device with this status can be linked to a valid account.",
          "PAYMENT_DEVICE_STATUS_INACTIVE": "Terminal status state, linking is disabled.",
          "PAYMENT_DEVICE_STATUS_PENDING": "Can transition only to PAYMENT_DEVICE_STATUS_ACTIVE or PAYMENT_DEVICE_STATUS_INACTIVE. A payment device with this status can be linked to a valid account. Clients can manage sub-statuses (e.g. card generated, card sent, card activated) within their own records.",
          "PAYMENT_DEVICE_STATUS_UNKNOWN": "Invalid when creating a payment device."
        }
      },
      "v1payment_devicesUpdatePaymentDeviceLinkRequest": {
        "type": "object",
        "properties": {
          "payment_device_link": {
            "$ref": "#/components/schemas/v1payment_devicesPaymentDeviceLink",
            "description": "Payment device to update. Currently only 'status' is supported.",
            "x-excluded-fields": [
              "id",
              "token",
              "payment_device_id",
              "account_id",
              "start_timestamp",
              "end_timestamp"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "Field mask to indicate which fields on the resource to update. Required. Valid update masks are: \"status\"."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1payment_devicesUpdatePaymentDeviceRequest": {
        "type": "object",
        "properties": {
          "payment_device": {
            "$ref": "#/components/schemas/v1payment_devicesPaymentDevice",
            "description": "The payment device to update.",
            "x-excluded-fields": [
              "id",
              "routing_info",
              "create_timestamp",
              "start_timestamp",
              "end_timestamp",
              "tags"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "Field mask to indicate which fields on the resource to update. Required. Valid update masks are: \"status\"."
          },
          "overrides": {
            "$ref": "#/components/schemas/v1commonOverrides",
            "description": "This lets the caller override PREVENT_CLOSURE restrictions on a payment device; no other restriction types can be overridden."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1plansActivationUpdate": {
        "type": "object"
      },
      "v1plansAssociateAccountUpdate": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "The ID of the account to associate with the Plan."
          }
        }
      },
      "v1plansBatchGetAccountPlanAssocsResponse": {
        "type": "object",
        "properties": {
          "account_plan_assocs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1plansAccountPlanAssoc"
            },
            "description": "A map of the Account Plan Association ID to the Account Plan Association."
          }
        }
      },
      "v1plansBatchGetPlanMigrationsResponse": {
        "type": "object",
        "properties": {
          "plan_migrations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1plansPlanMigration"
            },
            "description": "A map of the Plan Migration ID to the Plan Migration."
          }
        }
      },
      "v1plansBatchGetPlanUpdatesResponse": {
        "type": "object",
        "properties": {
          "plan_updates": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1plansPlanUpdate"
            },
            "description": "A map of the Plan Update ID to the Plan Update."
          }
        }
      },
      "v1plansBatchGetPlansResponse": {
        "type": "object",
        "properties": {
          "plans": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1plansPlan"
            },
            "description": "A map of the plan ID to the Plan."
          }
        }
      },
      "v1plansClosureUpdate": {
        "type": "object"
      },
      "v1plansCreatePlanMigrationRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure this request is idempotent. Mandatory.\n\nRequired.\nMax length: 512 characters."
          },
          "plan_migration": {
            "$ref": "#/components/schemas/v1plansPlanMigration",
            "description": "The Plan Migration to create. Mandatory.",
            "x-excluded-fields": [
              "status",
              "create_timestamp",
              "last_status_update_timestamp"
            ]
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1plansCreatePlanRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent. Required.\n\nRequired.\nMax length: 512 characters."
          },
          "plan": {
            "$ref": "#/components/schemas/v1plansPlan",
            "description": "The Plan object to be created. Required.",
            "x-excluded-fields": [
              "create_timestamp",
              "opening_timestamp",
              "activation_completed_timestamp",
              "closing_timestamp",
              "closure_completed_timestamp"
            ]
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1plansCreatePlanUpdateRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          },
          "plan_update": {
            "$ref": "#/components/schemas/v1plansPlanUpdate",
            "description": "The Plan Update to create. Required.",
            "x-excluded-fields": [
              "create_timestamp",
              "last_status_update_timestamp",
              "failure_reason"
            ]
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1plansDisassociateAccountUpdate": {
        "type": "object",
        "properties": {
          "account_plan_assoc_id": {
            "type": "string",
            "description": "The ID of the Account Plan Association to dissasociate."
          }
        }
      },
      "v1plansListAccountPlanAssocsResponse": {
        "type": "object",
        "properties": {
          "account_plan_assocs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1plansAccountPlanAssoc"
            },
            "description": "A list of matching Plans, ordered by descending `create_timestamp`."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v1plansListPlanMigrationsResponse": {
        "type": "object",
        "properties": {
          "plan_migrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1plansPlanMigration"
            },
            "description": "A list of Plan Migrations, ordered by timestamp."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, the response contains the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, the response contains the last page of results."
          }
        }
      },
      "v1plansListPlanSchedulesResponse": {
        "type": "object",
        "properties": {
          "plan_schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1plansPlanSchedule"
            },
            "description": "A list of matching Plan Schedules, ordered by ascending `create_timestamp` then by ascending `id`. Note: By default, only associated Plan Schedules are returned. The set of associated Plan Schedules forms a view of the current state of the Event Types for the Plan. To view plan schedules that are no longer associated, for example, after the contract directive `update_event_type` is executed, set `include_disassociated` to `true` to return disassociated plan schedules."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v1plansListPlanUpdatesResponse": {
        "type": "object",
        "properties": {
          "plan_updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1plansPlanUpdate"
            },
            "description": "A list of matching Plans, ordered by ascending `create_timestamp`."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v1plansPlanMigration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this Plan Migration. Optional."
          },
          "status": {
            "$ref": "#/components/schemas/v1plansPlanMigrationStatus",
            "description": "Status of the Plan Migration."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of when this Plan Migration was created, in UTC. Formatted as an RFC3339 timestamp."
          },
          "last_status_update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of when the last update happened, in UTC. Formatted as an RFC3339 timestamp."
          },
          "supervisor_contract_version_migration": {
            "$ref": "#/components/schemas/v1plansSupervisorContractVersionMigration",
            "required": true
          }
        }
      },
      "v1plansPlanMigrationStatus": {
        "type": "string",
        "enum": [
          "PLAN_MIGRATION_STATUS_UNKNOWN",
          "PLAN_MIGRATION_STATUS_PENDING_EXECUTION",
          "PLAN_MIGRATION_STATUS_COMPLETED"
        ],
        "default": "PLAN_MIGRATION_STATUS_UNKNOWN",
        "title": "Status of the plan migration",
        "x-enum-value-descriptions": {
          "PLAN_MIGRATION_STATUS_COMPLETED": "Indicates the Plan Migration completed.",
          "PLAN_MIGRATION_STATUS_PENDING_EXECUTION": "The Plan Migration is in progress.",
          "PLAN_MIGRATION_STATUS_UNKNOWN": "Default value."
        }
      },
      "v1plansPlanSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Plan Schedule."
          },
          "plan_id": {
            "type": "string",
            "description": "The Plan ID associated with the Plan Schedule."
          },
          "name": {
            "type": "string",
            "description": "The name of the Plan Schedule."
          },
          "group_name": {
            "type": "string",
            "description": "The name of the group associated with the Plan Schedule."
          },
          "time_expression": {
            "type": "string",
            "description": "The expression that defines when Jobs will be run. This can be either a cron expression or a schedule method (e.g. `EndOfMonthSchedule`). The syntax for cron expressions follows https://github.com/thought-machine/cronexpr (to be used strictly for interpreting cron syntax). For constructing expressions, please refer to the smart contract documentation."
          },
          "schedule_tag_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The schedule tag IDs for a given Plan Schedule."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp of when this Plan Schedule was created, in UTC. Formatted as an RFC3339 timestamp. Note: this is different from the create timestamp of the Schedule with the same ID."
          },
          "is_associated": {
            "type": "boolean",
            "description": "A value used to indicate the operational relevance of the Plan Schedule to the Plan. An associated Plan Schedule (where `is_associated` is true); typically references a non-disabled Schedule (one that is not in `SCHEDULE_STATUS_DISABLED`). A disassociated Plan Schedule typically references a disabled Schedule (one that is in `SCHEDULE_STATUS_DISABLED`). There is one associated Plan Schedule per event type in the Supervisor Contract version."
          }
        }
      },
      "v1plansPlanUpdate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for a Plan. Optional for create requests.\n\nMax length: 36 characters."
          },
          "plan_id": {
            "type": "string",
            "description": "The ID of the Plan. Required for create requests."
          },
          "job_id": {
            "type": "string",
            "description": "The job ID the Plan Update belongs to.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 3
              },
              "changeType": "ADD_FIELD"
            }
          },
          "status": {
            "$ref": "#/components/schemas/v1plansPlanUpdateStatus",
            "description": "The status of the Plan Update. Optional for create requests."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when this Plan Update was created, in UTC. Formatted as an RFC3339 timestamp."
          },
          "last_status_update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the status was last updated, in UTC. Formatted as an RFC3339 timestamp."
          },
          "failure_reason": {
            "type": "string",
            "description": "The reason a Plan Update was not completed successfully. This will only be populated if the Plan Update status is either `PLAN_UPDATE_STATUS_REJECTED` or `PLAN_UPDATE_STATUS_ERRORED`."
          },
          "associate_account_update": {
            "$ref": "#/components/schemas/v1plansAssociateAccountUpdate",
            "required": false
          },
          "disassociate_account_update": {
            "$ref": "#/components/schemas/v1plansDisassociateAccountUpdate",
            "required": false
          },
          "activation_update": {
            "$ref": "#/components/schemas/v1plansActivationUpdate",
            "required": false
          },
          "supervisor_contract_version_update": {
            "$ref": "#/components/schemas/v1plansSupervisorContractVersionUpdate",
            "required": false
          },
          "closure_update": {
            "$ref": "#/components/schemas/v1plansClosureUpdate",
            "required": false
          }
        }
      },
      "v1plansPlanUpdateStatus": {
        "type": "string",
        "enum": [
          "PLAN_UPDATE_STATUS_UNKNOWN",
          "PLAN_UPDATE_STATUS_PENDING_EXECUTION",
          "PLAN_UPDATE_STATUS_COMPLETED",
          "PLAN_UPDATE_STATUS_REJECTED",
          "PLAN_UPDATE_STATUS_ERRORED"
        ],
        "default": "PLAN_UPDATE_STATUS_UNKNOWN",
        "description": "Status of the Plan Update.",
        "x-enum-value-descriptions": {
          "PLAN_UPDATE_STATUS_COMPLETED": "The Plan Update was successfully executed.",
          "PLAN_UPDATE_STATUS_ERRORED": "The Plan Update errored.",
          "PLAN_UPDATE_STATUS_PENDING_EXECUTION": "The Plan Update has not been picked up from the queue yet, or is in progress.",
          "PLAN_UPDATE_STATUS_REJECTED": "The Plan Update failed validation and has been rejected.",
          "PLAN_UPDATE_STATUS_UNKNOWN": "Default value."
        }
      },
      "v1plansScheduleMigrationType": {
        "type": "string",
        "enum": [
          "SCHEDULE_MIGRATION_TYPE_RECREATE_ALL_SCHEDULES_AND_GROUPS",
          "SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES"
        ],
        "default": "SCHEDULE_MIGRATION_TYPE_RECREATE_ALL_SCHEDULES_AND_GROUPS",
        "x-enum-value-descriptions": {
          "SCHEDULE_MIGRATION_TYPE_PRESERVE_SCHEDULES_IF_NO_GROUP_CHANGES": "When updating the Supervisor Contract version of a Plan, existing schedules are preserved if either: - They are not part of a group and a schedule of the same event type is defined in the new Supervisor Contract code; or<br> - They are part of a group and a group of the same name, size and order is defined in the new Supervisor Contract code. New schedules are only created if they are defined in the new Supervisor Contract code.",
          "SCHEDULE_MIGRATION_TYPE_RECREATE_ALL_SCHEDULES_AND_GROUPS": "When updating the Supervisor Contract version of a Plan, all existing schedules will be deleted then recreated according to the Supervisor Contract code of the new product version. Any updates previously made to existing schedules will not be preserved. This is the default behaviour."
        }
      },
      "v1plansSupervisorContractVersionMigration": {
        "type": "object",
        "properties": {
          "from_supervisor_contract_version_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The Supervisor Contract version IDs to migrate the Plans from.\n\nRequired.\nMin count: 1."
          },
          "to_supervisor_contract_version_id": {
            "type": "string",
            "description": "The Supervisor Contract version ID to migrate the Plans to.\n\nRequired."
          },
          "schedule_migration_type": {
            "$ref": "#/components/schemas/v1plansScheduleMigrationType",
            "title": "Specifies how existing schedules should be migrated.<br><br> Note: This field has no effect on migrations to a Supervisor Contract version on Contracts Language API version 4.<br> [See Plan migrations.](/reference/plans/#plan_migrations)",
            "x-release-info": {
              "noticeVersion": {
                "major": 4,
                "minor": 6
              },
              "releaseVersion": {
                "major": 6
              },
              "changeType": "REMOVE_FIELD",
              "description": "This field is not used on updates to Contracts Language API version 4 and will be removed alongside Contracts Language API version 3."
            }
          }
        },
        "required": [
          "from_supervisor_contract_version_ids",
          "to_supervisor_contract_version_id"
        ]
      },
      "v1plansSupervisorContractVersionUpdate": {
        "type": "object",
        "properties": {
          "supervisor_contract_version_id": {
            "type": "string",
            "description": "The ID of the Supervisor Contract version to update the Plan to.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 13
              },
              "changeType": "ADD_FIELD"
            }
          },
          "schedule_migration_type": {
            "$ref": "#/components/schemas/v1plansScheduleMigrationType",
            "title": "Specifies how existing schedules should be migrated.<br><br> Note: This field has no effect on migrations to a Supervisor Contract version on Contracts Language API version 4.<br> [See Plan migrations.](/reference/plans/#plan_migrations)",
            "x-release-info": {
              "noticeVersion": {
                "major": 4,
                "minor": 6
              },
              "releaseVersion": {
                "major": 6
              },
              "changeType": "REMOVE_FIELD",
              "description": "This field is not used on updates to Contracts Language API version 4 and will be removed alongside Contracts Language API version 3."
            }
          }
        }
      },
      "BatchGetPoliciesNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CoreAPIPolicyManagementINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "GetPolicyNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "UpdatePolicyNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "v1policy_managementBatchGetPoliciesRequestIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_REGO_SOURCE"
        ],
        "default": "INCLUDE_FIELD_REGO_SOURCE",
        "x-enum-value-descriptions": {
          "INCLUDE_FIELD_REGO_SOURCE": "Includes the rego_source field."
        }
      },
      "v1policy_managementBatchGetPoliciesResponse": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1policy_managementPolicy"
            },
            "description": "A map of the Policy ID to their respective Policy."
          }
        }
      },
      "v1policy_managementCreatePolicyRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A string UUID used to ensure the request is idempotent. Required.\n\nRequired."
          },
          "policy": {
            "$ref": "#/components/schemas/v1policy_managementPolicy",
            "description": "The Policy that is to be created. Required.\n\nRequired.",
            "x-excluded-fields": [
              "version",
              "create_timestamp",
              "update_timestamp"
            ]
          }
        },
        "required": [
          "request_id",
          "policy"
        ]
      },
      "v1policy_managementListPoliciesRequestIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_REGO_SOURCE"
        ],
        "default": "INCLUDE_FIELD_REGO_SOURCE",
        "x-enum-value-descriptions": {
          "INCLUDE_FIELD_REGO_SOURCE": "Includes the rego_source field."
        }
      },
      "v1policy_managementListPoliciesResponse": {
        "type": "object",
        "properties": {
          "policies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1policy_managementPolicy"
            },
            "description": "A list of matching Policies, ordered alphabetically by Policy ID."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v1policy_managementPolicy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for the Policy. Required.\n\nRequired."
          },
          "version": {
            "type": "string",
            "format": "uint64",
            "description": "The Policy version number.",
            "x-release-info": {
              "noticeVersion": {
                "major": 4,
                "minor": 5
              },
              "releaseVersion": {
                "major": 6
              },
              "changeType": "REMOVE_FIELD",
              "description": "Remove internal policy version number from public API."
            }
          },
          "policy_schema_id": {
            "type": "string",
            "description": "The ID of the policy schema this Policy is associated with."
          },
          "description": {
            "type": "string",
            "description": "The human-readable description of the Policy.\n\nMax length: 256 characters."
          },
          "rego_source": {
            "type": "string",
            "description": "The rego policy definition. Rego Package name must be equal to the Policy ID.\n\nMax length: 2048 characters."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the Policy was created in UTC. Formatted as an RFC3339 timestamp."
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp indicating when the last change to the Policy occurred in UTC. Formatted as an RFC3339 timestamp."
          }
        },
        "required": [
          "id"
        ]
      },
      "v1policy_managementUpdatePolicyRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A string UUID used to ensure the request is idempotent. Required.\n\nRequired."
          },
          "policy": {
            "$ref": "#/components/schemas/v1policy_managementPolicy",
            "description": "The Policy that is to be updated. Required.\n\nRequired.",
            "x-excluded-fields": [
              "id",
              "version",
              "policy_schema_id",
              "create_timestamp",
              "update_timestamp"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "\n\nRequired.",
            "title": "The field mask used to indicate which fields in the resource are to be updated. Required. The allowed fields are: `description`, `rego_source`,"
          }
        },
        "required": [
          "request_id",
          "policy",
          "update_mask"
        ]
      },
      "BatchGetPostPostingFailuresNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CoreAPIPostPostingRepublisherINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "DeletePostPostingFailureFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureDeletePostPostingFailureFAILED_PRECONDITION_0",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "errorsPreconditionFailureDeletePostPostingFailureFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationDeletePostPostingFailureFAILED_PRECONDITION_0"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureViolationDeletePostPostingFailureFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_ACCOUNT_ID"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "v1post_posting_republisherBatchGetPostPostingFailuresResponse": {
        "type": "object",
        "properties": {
          "post_posting_failures": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1post_posting_republisherPostPostingFailure"
            },
            "description": "A map of Post-Posting Failure ID to Post-Posting Failures."
          }
        }
      },
      "v1post_posting_republisherContractExecutionBehaviour": {
        "type": "string",
        "enum": [
          "CONTRACT_EXECUTION_BEHAVIOUR_UNKNOWN",
          "CONTRACT_EXECUTION_BEHAVIOUR_NEWEST_CONTEXT",
          "CONTRACT_EXECUTION_BEHAVIOUR_RECORDED_CONTEXT"
        ],
        "default": "CONTRACT_EXECUTION_BEHAVIOUR_UNKNOWN",
        "x-enum-value-descriptions": {
          "CONTRACT_EXECUTION_BEHAVIOUR_NEWEST_CONTEXT": "Newest Context fetch the current execution context before execution.",
          "CONTRACT_EXECUTION_BEHAVIOUR_RECORDED_CONTEXT": "Recorded context use the context recorded in the db for execution.",
          "CONTRACT_EXECUTION_BEHAVIOUR_UNKNOWN": "Unknown defaults to Newest."
        }
      },
      "v1post_posting_republisherDeletePostPostingFailureResponse": {
        "type": "object"
      },
      "v1post_posting_republisherListPostPostingFailuresResponse": {
        "type": "object",
        "properties": {
          "post_posting_failures": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1post_posting_republisherPostPostingFailure"
            },
            "description": "A list of matching Post-Posting Failures, ordered by Update Count."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v1post_posting_republisherPostPostingFailure": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique, service-generated UUID."
          },
          "posting_instruction_batch_id": {
            "type": "string",
            "description": "The ID of the Posting Instruction Batch that triggered the failed `post_posting_hook` execution."
          },
          "attempt_number": {
            "type": "integer",
            "format": "int32",
            "description": "A counter describing the number of times the Post-Posting Failure has been republished by the user. It starts at 0."
          },
          "status": {
            "$ref": "#/components/schemas/v1post_posting_republisherPostPostingFailureStatus",
            "description": "The status of the Post-Posting Failure."
          },
          "failure_reason": {
            "type": "string",
            "description": "Contains the reason as to why the Post-Posting Failure occurred."
          },
          "insertion_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the Post-Posting Failure was inserted into the database, in UTC. Formatted as an RFC3339 timestamp."
          },
          "corresponding_plan_id": {
            "type": "string",
            "description": "corresponding_plan_id is set only if this account is supervised.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "account_id": {
            "$ref": "#/components/schemas/account_id",
            "required": false
          },
          "plan_id": {
            "$ref": "#/components/schemas/plan_id",
            "required": false
          }
        }
      },
      "v1post_posting_republisherPostPostingFailureStatus": {
        "type": "string",
        "enum": [
          "POST_POSTING_FAILURE_STATUS_UNKNOWN",
          "POST_POSTING_FAILURE_STATUS_FAILURE",
          "POST_POSTING_FAILURE_STATUS_BUFFERED",
          "POST_POSTING_FAILURE_STATUS_PUBLISHED"
        ],
        "default": "POST_POSTING_FAILURE_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "POST_POSTING_FAILURE_STATUS_BUFFERED": "Indicates this is a Post-Posting execution that has never been attempted because it was blocked by a previous failure.",
          "POST_POSTING_FAILURE_STATUS_FAILURE": "Indicates the Post-Posting Failure was created after a `post_posting_hook` execution was attempted and failed.",
          "POST_POSTING_FAILURE_STATUS_PUBLISHED": "Indicates this is a republished Post-Posting event and is currently being processed asynchronously.",
          "POST_POSTING_FAILURE_STATUS_UNKNOWN": "Default value."
        }
      },
      "v1post_posting_republisherRepublishPostPostingFailureRequest": {
        "type": "object",
        "properties": {
          "republish_type": {
            "$ref": "#/components/schemas/v1post_posting_republisherRepublishType",
            "description": "Chosen Republish Type. Defaults to `REPUBLISH_TYPE_REPUBLISH_SINGLE_FAILURE`."
          },
          "contract_execution_behaviour": {
            "$ref": "#/components/schemas/v1post_posting_republisherContractExecutionBehaviour",
            "description": "The behaviour of Smart Contract execution for the republished execution.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5
              },
              "changeType": "ADD_FIELD"
            }
          },
          "account_id": {
            "$ref": "#/components/schemas/account_id",
            "required": false
          },
          "plan_id": {
            "$ref": "#/components/schemas/plan_id",
            "required": false
          }
        }
      },
      "v1post_posting_republisherRepublishType": {
        "type": "string",
        "enum": [
          "REPUBLISH_TYPE_REPUBLISH_UNKNOWN",
          "REPUBLISH_TYPE_REPUBLISH_SINGLE_FAILURE",
          "REPUBLISH_TYPE_REPUBLISH_BLOCKED_FAILURES"
        ],
        "default": "REPUBLISH_TYPE_REPUBLISH_UNKNOWN",
        "x-enum-value-descriptions": {
          "REPUBLISH_TYPE_REPUBLISH_BLOCKED_FAILURES": "Republishes the earliest Post-Posting Failure for the account or plan, as well as all subsequent `post_posting_hook` executions blocked by the failed Post-Posting execution.",
          "REPUBLISH_TYPE_REPUBLISH_SINGLE_FAILURE": "Republishes the earliest Post-Posting Failure that exists for the account or plan.",
          "REPUBLISH_TYPE_REPUBLISH_UNKNOWN": "Unknown Republish type."
        }
      },
      "commonasync_operationsAsyncOperation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID that can be used to retrieve this operation."
          },
          "metadata": {
            "$ref": "#/components/schemas/googleprotobufAny",
            "description": "Metadata of the operation.",
            "x-third-party": "GOOGLE_PROTOBUF_ANY"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When this operation was created."
          },
          "done_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When this operation was completed."
          },
          "done": {
            "type": "boolean",
            "description": "Whether the operation is completed or not."
          },
          "response": {
            "$ref": "#/components/schemas/googleprotobufAny",
            "required": false
          },
          "error": {
            "$ref": "#/components/schemas/thoughtmachinerpcStatus",
            "required": false
          }
        },
        "description": "Represents a long-running or asynchronous operation in a service. It contains the status of this operation and, upon successful completion, the resource that was created or mutated as part of this operation."
      },
      "commonasync_operationsBatchGetAsyncOperationsResponse": {
        "type": "object",
        "properties": {
          "async_operations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/commonasync_operationsAsyncOperation"
            },
            "description": "Map of ID to the Async Operation with that ID."
          }
        },
        "description": "BatchGetAsyncOperationsResponse is a response containing multiple Async Operation resources."
      },
      "commonorderingOrderByDirection": {
        "type": "string",
        "enum": [
          "ORDER_BY_DESC",
          "ORDER_BY_ASC"
        ],
        "default": "ORDER_BY_DESC",
        "description": "The OrderByDirection controls how the results are ordered. This enum is deprecated. Ordering should now be implemented using a repeated enum of field names. See change https://phabricator.iap.tmachine.io/D39490 for details."
      },
      "core_apiv1posting_instruction_batchesCreatePostingInstructionBatchRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID generated by the client (the payment processor) used for idempotency. The client must ensure a unique `request_id` is passed within their namespace (determined by `client_id`). Multiple requests with the same <`client_id` - `request_id`> will receive the same response. Required.",
            "x-example-override": "9ea7fb24-634b-4e78-9d53-3556ec7b271a"
          },
          "posting_instruction_batch": {
            "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatch",
            "description": "A posting instruction batch object. Required.",
            "x-example-override": "{\"client_id\": \"ExamplePaymentProcessorClientID\", \"client_batch_id\": \"478ff244-9870-4452-cde1-40b27c644a39\", \"posting_instructions\": [{\"client_transaction_id\": \"tx_5ba67013-c060-422f\", \"outbound_authorisation\": {\"amount\": \"10.50\", \"denomination\": \"GBP\", \"target_account\": {\"account_id\": \"2cb63354-e431-135b-eda5-69db11421f84\"}, \"internal_account_id\": \"25\", \"advice\": false}, \"instruction_details\": {\"scheme_name\": \"domestic_payment_scheme\", \"settlement_date\": \"12-01-2020\", \"category\": \"personal\"}}], \"batch_details\": {\"tx_id\": \"tx_46624c03-71e7-4ef1-8fb9-cdb617c72e50\"}}"
          },
          "api_type": {
            "$ref": "#/components/schemas/v1posting_instruction_batchesPostingsAPIType",
            "description": "This defines which type of Postings API to use. Optional.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 7
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "TMV_543_LOW_PRIORITY_CREATE_PIB_ASYNC"
            }
          }
        },
        "description": "* CreatePostingInstructionBatchRequest defines request for the Vault Postings API. For each PostingInstructionBatchRequest published in the request topic, a PostingInstructionBatch will be published in the response topic (or DLQ if the request is badly-formed).\n\nThe Postings API is idempotent to duplicate PostingInstructionBatchRequest and will respond idempotently to PostingInstructionBatchRequest messages with the same <client_id-request_id>."
      },
      "posting_apiv1CreatePostingInstructionBatchRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID generated by the client (payment processor) that is used for idempotency. The client must ensure a unique `request_id` is passed within their namespace (determined by `client_id`). Multiple requests with the same <`client_id` - `request_id`> will receive the same response. Required."
          },
          "dry_run": {
            "type": "boolean",
            "description": "If true, the request will be executed with no side effects:<br>-Synchronous API: A PostingInstructionBatch will be returned<br>-Asynchronous API: A PostingInstructionBatch will be published to the response topic as defined by the Postings API Client ID<br> In either case, no PostingInstructionBatch will be created and no PostingInstructionBatchCreatedEvent will be published to the event topic."
          },
          "posting_instruction_batch": {
            "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatch",
            "description": "A posting instruction batch object. Required."
          },
          "time_to_live": {
            "type": "string",
            "format": "date-time",
            "description": "-Synchronous API: Not supported. <br>-Asynchronous API: Specifies a time after which the request generates an error with a POSTING_INSTRUCTION_BATCH_ERROR_TYPE_TTL_EXPIRED error type. Optional."
          },
          "shard_key": {
            "type": "string",
            "description": "A key used as a best-effort lock to prevent CreatePostingInstructionBatchRequest with the same shard_key from racing each other. For example, this can be used for multiple CreatePostingInstructionBatchRequests targeting the same account or plan to prevent retries from occurring, reducing the overall request latency. For a posting instruction batch that targets a single customer account, use the `account_id` or `payment_device_token` id. For a posting instruction batch that targets an account which is supervised, use the `plan_id`.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 4
              },
              "changeType": "ADD_FIELD"
            }
          }
        },
        "description": "* CreatePostingInstructionBatchRequest defines request for the Vault Posting API. For each PostingInstructionBatchRequest published in the request topic, a PostingInstructionBatch will be published in the response topic (or DLQ if the request is garbled).\n\nThe Posting API is idempotent to duplicate PostingInstructionBatchRequest, and will respond idempotently to PostingInstructionBatchRequest messages with the same <client_id-request_id>."
      },
      "posting_apiv1CreatePostingInstructionBatchResponse": {
        "type": "object",
        "properties": {
          "posting_instruction_batch": {
            "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatch",
            "title": "The created PostingInstructionBatch",
            "x-example-override": "{\"id\":\"5f3088e3-b574-4b3f-b955-332438ed9ceb\",\"create_request_id\":\"1723820084\",\"client_id\":\"CardIntegration\",\"client_batch_id\":\"478ff244-9870-4452-cde1-40b27c644a39\",\"posting_instructions\":[{\"id\":\"24375959-e88e-40b7-8ffb-1ccab9e2537d\",\"client_transaction_id\":\"1723820084\",\"outbound_authorisation\":{\"amount\":\"10.50\",\"denomination\":\"GBP\",\"target_account\":{\"account_id\":\"customer-123\"},\"internal_account_id\":\"internal-1723820064\",\"advice\":false,\"target_account_id\":\"customer-123\",\"internal_account_processing_label\":\"\",\"target_account_address\":\"DEFAULT\",\"asset\":\"COMMERCIAL_BANK_MONEY\"},\"pics\":[],\"instruction_details\":{\"category\":\"personal\",\"scheme_name\":\"domestic_payment_scheme\",\"settlement_date\":\"12-01-2020\"},\"committed_postings\":[{\"credit\":false,\"amount\":\"10.50\",\"denomination\":\"GBP\",\"account_id\":\"customer-123\",\"account_address\":\"DEFAULT\",\"asset\":\"COMMERCIAL_BANK_MONEY\",\"phase\":\"POSTING_PHASE_PENDING_OUTGOING\",\"internal_account_processing_label\":\"\"},{\"credit\":true,\"amount\":\"10.50\",\"denomination\":\"GBP\",\"account_id\":\"internal-1723820064\",\"account_address\":\"DEFAULT\",\"asset\":\"COMMERCIAL_BANK_MONEY\",\"phase\":\"POSTING_PHASE_PENDING_OUTGOING\",\"internal_account_processing_label\":\"\"}],\"posting_violations\":[],\"account_violations\":[],\"restriction_violations\":[],\"contract_violations\":[],\"override\":null,\"transaction_code\":null,\"booking_localised_date_time\":\"2024-08-16T14:54:44.718473Z\"}],\"batch_details\":{\"tx_id\":\"tx_46624c03-71e7-4ef1-8fb9-cdb617c72e50\"},\"value_timestamp\":\"2024-08-16T14:54:44.718473Z\",\"booking_timestamp\":\"2024-08-16T14:54:44.718473Z\",\"status\":\"POSTING_INSTRUCTION_BATCH_STATUS_ACCEPTED\",\"error\":null,\"insertion_timestamp\":\"2024-08-16T14:54:44.718473Z\",\"source_insertion_timestamp\":\"2024-08-16T14:54:44.718473Z\",\"dry_run\":false}"
          },
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1balancesBalance"
            },
            "description": "A list of all live balances for the account.",
            "x-example-override": "[{\"id\":\"MTk3MC0wMS0wMVQwMDowMDowMC4wMDAwMDBaLTE5ZGJhMDU5LWNhMmUtNTJmMi04MGFiLTFmMDE5MTgxM2EwNw\",\"account_id\":\"customer-123\",\"account_address\":\"DEFAULT\",\"phase\":\"POSTING_PHASE_COMMITTED\",\"asset\":\"COMMERCIAL_BANK_MONEY\",\"denomination\":\"GBP\",\"posting_instruction_batch_id\":\"\",\"value_time\":\"1970-01-01T00:00:00Z\",\"amount\":\"0\",\"total_debit\":\"0\",\"total_credit\":\"0\"},{\"id\":\"MTk3MC0wMS0wMVQwMDowMDowMC4wMDAwMDBaLTI2OGIwNGIyLTViNWEtNTE3OS04NzYwLTljM2I2YzgzNDA3OA\",\"account_id\":\"customer-123\",\"account_address\":\"DEFAULT\",\"phase\":\"POSTING_PHASE_PENDING_INCOMING\",\"asset\":\"COMMERCIAL_BANK_MONEY\",\"denomination\":\"GBP\",\"posting_instruction_batch_id\":\"\",\"value_time\":\"1970-01-01T00:00:00Z\",\"amount\":\"0\",\"total_debit\":\"0\",\"total_credit\":\"0\"},{\"id\":\"MjAyNC0wOC0xNlQxNDo1NDo0NC43MTg0NzNaLTQ0NGQwZWY0LWY3YjAtNWFlMy1iYjdlLTdiZWU1YTZjNjE3Zg\",\"account_id\":\"customer-123\",\"account_address\":\"DEFAULT\",\"phase\":\"POSTING_PHASE_PENDING_OUTGOING\",\"asset\":\"COMMERCIAL_BANK_MONEY\",\"denomination\":\"GBP\",\"posting_instruction_batch_id\":\"5f3088e3-b574-4b3f-b955-332438ed9ceb\",\"value_time\":\"2024-08-16T14:54:44.718473Z\",\"amount\":\"-10.5\",\"total_debit\":\"10.5\",\"total_credit\":\"0\"}]"
          }
        },
        "description": "* CreatePostingInstructionBatchResponse defines response for the Vault Posting API."
      },
      "thoughtmachinerpcStatus": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32",
            "description": "The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code]."
          },
          "message": {
            "type": "string",
            "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [thoughtmachine.rpc.Status.details][thoughtmachine.rpc.Status.details] field, or localized by the client."
          },
          "details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/googleprotobufAny"
            },
            "description": "A list of messages that carry the error details.  There will be a common set of message types for APIs to use."
          }
        },
        "description": "- Simple to use and understand for most users - Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message, and error details. The error code should be an enum value of [google.rpc.Code][google.rpc.Code], but it may accept additional error codes if needed.  The error message should be a developer-facing English message that helps developers *understand* and *resolve* the error. If a localized user-facing error message is needed, put the localized message in the error details or localize it in the client. The optional error details may contain arbitrary information about the error. There is a predefined set of error detail types in the package `google.rpc` which can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it is not necessarily the actual wire format. When the `Status` message is exposed in different client libraries and different wire protocols, it can be mapped differently. For example, it will likely be mapped to some exceptions in Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of environments, either with or without APIs, to provide a consistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,     it may embed the `Status` in the normal response to indicate the partial     errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may     have a `Status` message for error reporting purpose.\n\n- Batch operations. If a client uses batch request and batch response, the     `Status` message should be used directly inside batch response, one for     each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation     results in its response, the status of those operations should be     represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could     be used directly after any stripping needed for security/privacy reasons.",
        "title": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). The error model is designed to be:"
      },
      "v1posting_instruction_batchesBatchGetPostingInstructionBatchesResponse": {
        "type": "object",
        "properties": {
          "posting_instruction_batches": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatch"
            },
            "description": "A map of posting instruction batch ID to posting instruction batches."
          }
        }
      },
      "v1posting_instruction_batchesListPostingInstructionBatchesResponse": {
        "type": "object",
        "properties": {
          "posting_instruction_batches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatch"
            },
            "title": "A list of posting instruction batches that match the applied filters. The results are ordered by `value_timestamp` which defaults to descending, unless otherwise specified with `order_by_direction`.<br><br> _Note - If a batch contains posting instructions with different value timestamps, only the *earliest* timestamp is considered in the filter._"
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token to retrieve the previous page of results. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token to retrieve the next page of results. If empty, this is the last page of results."
          }
        }
      },
      "v1posting_instruction_batchesPostingsAPIType": {
        "type": "string",
        "enum": [
          "POSTINGS_API_TYPE_HIGH_PRIORITY",
          "POSTINGS_API_TYPE_LOW_PRIORITY"
        ],
        "default": "POSTINGS_API_TYPE_HIGH_PRIORITY",
        "description": "* PostingsAPIType defines which Postings API type to use.",
        "x-enum-value-descriptions": {
          "POSTINGS_API_TYPE_HIGH_PRIORITY": "Default value. Indicates that the request will be submitted to the high-priority Postings API.",
          "POSTINGS_API_TYPE_LOW_PRIORITY": "Indicates that the request will be submitted to the low-priority Postings API."
        }
      },
      "v1posting_instruction_batchesValidateCreatePostingInstructionBatchRequestRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID generated by the client (payment processor) that is used for idempotency. The client must ensure a unique `request_id` is passed within their namespace (determined by `client_id`). Multiple requests with the same <`client_id` - `request_id`> will receive the same response. Required.",
            "x-example-override": "9ea7fb24-634b-4e78-9d53-3556ec7b271a"
          },
          "posting_instruction_batch": {
            "$ref": "#/components/schemas/posting_apiv1PostingInstructionBatch",
            "description": "A posting instruction batch object. Required.",
            "x-example-override": "{\"client_id\": \"ExamplePaymentProcessorClientID\", \"client_batch_id\": \"478ff244-9870-4452-cde1-40b27c644a39\", \"posting_instructions\": [{\"client_transaction_id\": \"tx_5ba67013-c060-422f\", \"outbound_authorisation\": {\"amount\": \"10.50\", \"denomination\": \"GBP\", \"target_account\": {\"account_id\": \"2cb63354-e431-135b-eda5-69db11421f84\"}, \"internal_account_id\": \"25\", \"advice\": false}, \"instruction_details\": {\"scheme_name\": \"domestic_payment_scheme\", \"settlement_date\": \"12-01-2020\", \"category\": \"personal\"}}], \"batch_details\": {\"tx_id\": \"tx_46624c03-71e7-4ef1-8fb9-cdb617c72e50\"}}"
          }
        },
        "description": "* ValidateCreatePostingInstructionBatchRequestRequest is used to validate if the request messages for CreatePostingInstructionBatch and CreatePostingInstructionBatchAsync are correct."
      },
      "v1posting_instruction_batchesValidateCreatePostingInstructionBatchRequestResponse": {
        "type": "object",
        "properties": {
          "is_valid": {
            "type": "boolean",
            "description": "Indicates whether the syntax of the `create-posting-instruction-batch` request is valid."
          },
          "failure_reason": {
            "type": "string",
            "description": "A string that communicates the reason why the `create-posting-instruction-batch` request failed validation. Optional.",
            "x-example-override": ""
          }
        }
      },
      "v1postings_api_clientsBatchGetPostingsAPIClientsResponse": {
        "type": "object",
        "properties": {
          "postings_api_clients": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1postings_api_clientsPostingsAPIClient"
            },
            "description": "A list of `PostingsAPIClient`s."
          }
        }
      },
      "v1postings_api_clientsCreatePostingsAPIClientRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID generated for idempotency. Required.",
            "x-example-override": "35433eb8-6afa-42bf-b7b3-b23504d3e325"
          },
          "postings_api_client": {
            "$ref": "#/components/schemas/v1postings_api_clientsPostingsAPIClient",
            "description": "A `PostingsAPIClient` object. Required.",
            "x-example-override": "{\"id\": \"ExamplePaymentProcessorClientID\", \"response_topic\": \"integration.postings_api.domestic_payment_processor_id.response\"}"
          }
        },
        "description": "Creates a `PostingsAPIClient`."
      },
      "v1postings_api_clientsListPostingsAPIClientsResponse": {
        "type": "object",
        "properties": {
          "postings_api_clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1postings_api_clientsPostingsAPIClient"
            },
            "description": "A list of `PostingsAPIClient` objects.",
            "x-example-override": "[{\"id\": \"ExamplePaymentProcessorClientID1\", \"response_topic\": \"integration.postings_api.domestic_payment_processor_id.response\"}, {\"id\": \"ExamplePaymentProcessorClientID2\", \"response_topic\": \"integration.postings_api.domestic_payment_processor_id.response\"}]"
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this returns the last page of results."
          }
        },
        "description": "Returns a list of `PostingsAPIClient`s."
      },
      "v1postings_api_clientsPostingsAPIClient": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID that identifies a `PostingsAPIClient` to the Postings API.",
            "x-example-override": "ExamplePaymentProcessorClientID"
          },
          "response_topic": {
            "type": "string",
            "description": "The Kafka topic that the Postings API should respond to for this `PostingsAPIClient`. NOTES: - Multiple `PostingsAPIClient`s may share a response topic. - Must contain the prefix 'integration.'. For compatibility, existing topics that are not prefixed with 'integration.' are allowed.",
            "x-example-override": "integration.postings_api.domestic_payment_processor_id.response"
          },
          "response_topic_low_priority": {
            "type": "string",
            "description": "The low priority Kafka topic that the Postings API should respond to for this `PostingsAPIClient`. NOTES: - Multiple `PostingsAPIClient`s may share a response topic. - Must contain the prefix 'integration.'. For compatibility, existing topics that are not prefixed with 'integration.' are allowed.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 9
              },
              "changeType": "ADD_FIELD"
            },
            "x-example-override": "integration.postings_api.domestic_payment_processor_id.low_priority.response"
          }
        },
        "description": "Configuration of a `PostingsAPIClient` that maps a unique `id` to their (non-unique) response topic."
      },
      "v1postings_api_clientsUpdatePostingsAPIClientRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID generated for idempotency. Required.",
            "x-example-override": "4c82213e-11ff-4358-980b-714a10dcfb76"
          },
          "postings_api_client": {
            "$ref": "#/components/schemas/v1postings_api_clientsPostingsAPIClient",
            "description": "A `PostingsAPIClient` object. Required.",
            "x-example-override": "{\"id\": \"ExamplePaymentProcessorClientID\", \"response_topic\": \"integration.postings_api.domestic_payment_processor_id.response\", \"response_topic_low_priority\": \"integration.postings_api.domestic_payment_processor_id.low_priority.response\"}",
            "x-excluded-fields": [
              "response_topic"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "The field mask used to indicate which fields in the resource are to be updated. The only allowed field is `response_topic_low_priority`, which must differ from `response_topic`. NOTE: Once the low priority response topic is set, it can be changed but it cannot be unset. Required.",
            "x-example-override": "{\"paths\": [\"response_topic_low_priority\"]}"
          }
        },
        "description": "Updates a `PostingsAPIClient`. Currently, only a single path for the update mask is supported, i.e. `response_topic_low_priority`. Clients managing their postings API clients outside of the Configuration Layer Utility should use this endpoint to add a `low_priority_response_topic` if they want to start using the low priority functionality. Care must be used when using the endpoint. If a `response_topic_low_priority` was already defined for a `PostingsAPIClient`, changing it will require planning a migration from the old topic to the new."
      },
      "CoreAPIProcessingGroupsINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "CoreAPIProcessingGroupsNOT_FOUND_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CreateProcessingGroupALREADY_EXISTS_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "ALREADY_EXISTS"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "UpdateProcessingGroupFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateProcessingGroupFAILED_PRECONDITION_0",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateProcessingGroupFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateProcessingGroupFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "errorsPreconditionFailureUpdateProcessingGroupFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateProcessingGroupFAILED_PRECONDITION_0"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateProcessingGroupFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateProcessingGroupFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureViolationUpdateProcessingGroupFAILED_PRECONDITION_0": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "DEFAULT_PROCESSING_GROUP_TIMEZONE_ALREADY_SET"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"processing_group_id\":\"value\",\"timezone\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "processing_group_id",
                "description": "The ID of the processing group."
              },
              {
                "key": "timezone",
                "description": "The existing timezone of the processing group."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateProcessingGroupFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "TIMEZONE_UPDATE_FOR_NON_DEFAULT_PROCESSING_GROUP"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"processing_group_id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "processing_group_id",
                "description": "The ID of the processing group."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "v1processing_groupsListProcessingGroupsResponse": {
        "type": "object",
        "properties": {
          "processing_groups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1processing_groupsProcessingGroup"
            },
            "description": "The list of Processing Groups in the given page."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "productsListProductsRequestInternalityRefiner": {
        "type": "string",
        "enum": [
          "INTERNALITY_REFINER_ANY_INTERNALITY",
          "INTERNALITY_REFINER_INTERNAL",
          "INTERNALITY_REFINER_EXTERNAL"
        ],
        "default": "INTERNALITY_REFINER_ANY_INTERNALITY",
        "x-enum-value-descriptions": {
          "INTERNALITY_REFINER_ANY_INTERNALITY": "Default. Lists both internal and external products.",
          "INTERNALITY_REFINER_EXTERNAL": "Lists external products only.",
          "INTERNALITY_REFINER_INTERNAL": "Lists internal products only."
        }
      },
      "v1paramsAccountField": {
        "type": "object"
      },
      "v1paramsLevel": {
        "type": "string",
        "enum": [
          "LEVEL_UNKNOWN",
          "LEVEL_GLOBAL",
          "LEVEL_PRODUCT",
          "LEVEL_INSTANCE"
        ],
        "default": "LEVEL_UNKNOWN",
        "x-enum-value-release-info": {
          "LEVEL_GLOBAL": {
            "noticeVersion": {
              "major": 1,
              "minor": 7
            },
            "releaseVersion": {
              "major": 5
            },
            "changeType": "REMOVE_ENUM_VALUE",
            "description": "Deprecated as no functionality uses this value."
          }
        },
        "x-enum-value-descriptions": {
          "LEVEL_GLOBAL": "The parameter is only available at a global level.",
          "LEVEL_INSTANCE": "The parameter is only available at an instance level.",
          "LEVEL_PRODUCT": "The parameter is only available at a product level.",
          "LEVEL_UNKNOWN": "The level is unknown."
        }
      },
      "v1paramsParam": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the parameter."
          },
          "display_name": {
            "type": "string",
            "description": "The name of the parameter to be displayed in the UI."
          },
          "description": {
            "type": "string",
            "description": "The description of the parameter."
          },
          "value": {
            "type": "string",
            "description": "The current value of the parameter, populated only for product level parameters."
          },
          "default_value": {
            "type": "string",
            "description": "The default value of the parameter. This will only be used if an AccountUpdate or AccountMigration converts an Account to a ProductVersion that introduces this parameter. It will not be used as a default if an Account is created on a ProductVersion which uses this parameter."
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp the parameter is effective from in UTC. Formatted as an RFC3339 timestamp."
          },
          "level": {
            "$ref": "#/components/schemas/v1paramsLevel",
            "description": "The level the parameter is effective at."
          },
          "update_permission": {
            "$ref": "#/components/schemas/v1paramsUpdatePermission",
            "description": "The permission level required to update the parameter."
          },
          "derived": {
            "type": "boolean",
            "description": "Indicates whether this parameter is derived or not. Only applicable to instance-level parameters."
          },
          "is_optional": {
            "type": "boolean",
            "description": "Indicates whether this parameter value is optional or not."
          },
          "number": {
            "$ref": "#/components/schemas/v1paramsNumberField",
            "required": false
          },
          "account": {
            "$ref": "#/components/schemas/v1paramsAccountField",
            "required": false
          },
          "values": {
            "$ref": "#/components/schemas/v1paramsValueChoiceField",
            "required": false
          },
          "denomination": {
            "$ref": "#/components/schemas/v1paramsDenominationField",
            "required": false
          },
          "date": {
            "$ref": "#/components/schemas/v1paramsDateField",
            "required": false
          },
          "str": {
            "$ref": "#/components/schemas/v1paramsStringField",
            "required": false
          }
        }
      },
      "v1paramsUpdatePermission": {
        "type": "string",
        "enum": [
          "UPDATE_PERMISSION_UNKNOWN",
          "UPDATE_PERMISSION_FIXED",
          "UPDATE_PERMISSION_OPS_EDITABLE",
          "UPDATE_PERMISSION_CUSTOMER_EDITABLE",
          "UPDATE_PERMISSION_CUSTOMER_EDITABLE_WITH_OPS_PERMISSION"
        ],
        "default": "UPDATE_PERMISSION_UNKNOWN",
        "x-enum-value-descriptions": {
          "UPDATE_PERMISSION_CUSTOMER_EDITABLE": "The product is editable by a bank employee.",
          "UPDATE_PERMISSION_CUSTOMER_EDITABLE_WITH_OPS_PERMISSION": "The product is only editable by a bank employee with operations permission.",
          "UPDATE_PERMISSION_FIXED": "The product cannot be updated.",
          "UPDATE_PERMISSION_OPS_EDITABLE": "The product is editable by operations.",
          "UPDATE_PERMISSION_UNKNOWN": "The update permission is unknown."
        }
      },
      "v1paramsValueChoice": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The value of the value choice entry."
          },
          "display_name": {
            "type": "string",
            "description": "The name of the value choice displayed to the bank."
          }
        }
      },
      "v1paramsValueChoiceField": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1paramsValueChoice"
            },
            "description": "A list of value choices for this parameter."
          }
        }
      },
      "v1productsAddressDetails": {
        "type": "object",
        "properties": {
          "address_name": {
            "type": "string",
            "description": "The account address the details refer to."
          },
          "description": {
            "type": "string",
            "description": "A human-readable description of the address."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of tags that describe the address."
          }
        },
        "description": "A detailed description of an account address."
      },
      "v1productsAttribute": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The semantically important name of the attribute."
          },
          "data_type": {
            "$ref": "#/components/schemas/v1productsAttributeDataType",
            "description": "The type of the attribute. All values of this attribute are guaranteed to be of this type and will fail attribute execution with a meaningful error if a value is returned from the `attribute_hook` that is not of this type."
          }
        },
        "description": "Attribute describes the name and type of an attribute exposed from this Product, the value of which is a result of the `attribute_hook` execution."
      },
      "v1productsAttributeDataType": {
        "type": "object",
        "properties": {
          "decimal_type": {
            "$ref": "#/components/schemas/v1productsAttributeDecimalType",
            "required": false
          },
          "datetime_type": {
            "$ref": "#/components/schemas/v1productsAttributeDateTimeType",
            "required": false
          },
          "string_type": {
            "$ref": "#/components/schemas/v1productsAttributeStringType",
            "required": false
          }
        },
        "description": "AttributeDataType describes the type that an output of an `attribute_hook` must produce for the given attribute."
      },
      "v1productsAttributeDateTimeType": {
        "type": "object"
      },
      "v1productsAttributeDecimalType": {
        "type": "object"
      },
      "v1productsAttributeStringType": {
        "type": "object"
      },
      "v1productsBatchGetProductVersionsResponse": {
        "type": "object",
        "properties": {
          "product_versions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1productsProductVersion"
            },
            "description": "Maps the product version ID to the product version."
          }
        }
      },
      "v1productsBatchGetProductsResponse": {
        "type": "object",
        "properties": {
          "products": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1productsProduct"
            },
            "description": "Maps the product ID to the product."
          }
        }
      },
      "v1productsContractModuleDetails": {
        "type": "object",
        "properties": {
          "alias_to_shared_function_details": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1contract_modulesSharedFunctionDetails"
            },
            "description": "A map of Contract Module aliases to the function details required for the Contract to run."
          }
        }
      },
      "v1productsCreateProductVersionRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID that is used to ensure the request is idempotent.\n\nRequired.\nMax length: 256 characters."
          },
          "product_version": {
            "$ref": "#/components/schemas/v1productsProductVersion",
            "description": "The product version to be created. Required.",
            "x-excluded-fields": [
              "id",
              "display_version_number",
              "create_timestamp",
              "is_current",
              "params.display_name",
              "params.description",
              "params.default_value",
              "params.effective_timestamp",
              "params.level",
              "params.update_permission",
              "params.number",
              "params.account",
              "params.values",
              "params.denomination",
              "params.date",
              "params.str",
              "params.derived",
              "params.is_optional",
              "tside",
              "address_details",
              "contract_module_details",
              "notification_types",
              "parameter_id_by_instance_parameter_name",
              "expected_parameters",
              "attributes",
              "contracts_language_api_version"
            ]
          },
          "migration_strategy": {
            "$ref": "#/components/schemas/v1productsProductVersionMigrationStrategy",
            "description": "The migration strategy for applying the new version. Optional."
          },
          "is_internal": {
            "type": "boolean",
            "description": "When creating a new product, used to indicate if the new product is for internal accounts only and not available to customers."
          }
        },
        "description": "Create a ProductVersion.",
        "required": [
          "request_id"
        ]
      },
      "v1productsExpectedParameter": {
        "type": "object",
        "properties": {
          "parameter_id": {
            "type": "string",
            "description": "The ID of the Parameter referenced by this Expected Parameter. Can be retrieved via the `BatchGetParameters` endpoint `/v1/parameters:batchGet?ids=<parameter-id>`."
          },
          "is_optional": {
            "type": "boolean",
            "description": "Whether the parameter is optional. If `false`, attempts to create an Account using this Product Version or convert an Account to this Product Version without a value defined for this parameter will fail."
          },
          "triggers_pre_parameter_change_hook": {
            "type": "boolean",
            "description": "Whether proposed new values for this parameter will be validated by the pre_parameter_change_hook."
          },
          "triggers_post_parameter_change_hook": {
            "type": "boolean",
            "description": "Whether new values for this parameter will cause the post_parameter_change_hook to execute."
          }
        }
      },
      "v1productsHighVolumeEligibility": {
        "type": "object",
        "properties": {
          "ledger": {
            "type": "boolean",
            "title": "If true, the contract template is eligible for high volume processing in the ledger"
          }
        },
        "title": "Represents a product version's eligibility for high volume processing"
      },
      "v1productsListProductVersionParametersTimeseriesResponse": {
        "type": "object",
        "properties": {
          "product_version_param_timeseries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1productsParameterTimeseries"
            },
            "description": "The product version parameter timeseries that is retrieved for the specified product version ID."
          }
        }
      },
      "v1productsListProductVersionsResponse": {
        "type": "object",
        "properties": {
          "product_versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1productsProductVersion"
            },
            "description": "A list of the product versions matching the specified product_version_id. The order of the items is arbitrary and is not guaranteed to remain the same."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page If empty, returns the last page of results."
          }
        }
      },
      "v1productsListProductsResponse": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1productsProduct"
            },
            "description": "A list of matching products. The order of the items is arbitrary and is not guaranteed to remain the same."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, returns the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, returns the last page of results."
          }
        }
      },
      "v1productsParamValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "The value of a parameter."
          },
          "effective_from_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp that indicates when the parameter value is effective from, in UTC. Formatted as an RFC3339 timestamp."
          }
        }
      },
      "v1productsParameterTimeseries": {
        "type": "object",
        "properties": {
          "param_name": {
            "type": "string",
            "description": "The parameter the value changes apply to."
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1productsParamValue"
            },
            "description": "The value of the parameter and the timestamp that indicates when the parameter value became active."
          }
        }
      },
      "v1productsProduct": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A globally-unique ID for the product.",
            "x-output-only": true
          },
          "display_name": {
            "type": "string",
            "description": "The name of the product displayed to the customer."
          },
          "is_internal": {
            "type": "boolean",
            "description": "Indicates if the product is meant for customers to sign up to (external) or if it used to model internal bank accounts (internal)."
          },
          "current_version_id": {
            "type": "string",
            "description": "The ID of the current version of the product."
          }
        },
        "description": "A product specifies the behaviours and rules for an account in Vault. Each product will have one or more versions; one of these versions will be the current version. The current version is the version that will be used when customers open an account of the given product type."
      },
      "v1productsProductVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A globally-unique ID for the product version."
          },
          "display_name": {
            "type": "string",
            "description": "The name of the product displayed to the customer. Optional - if not provided, this is populated with product_id."
          },
          "display_version_number": {
            "$ref": "#/components/schemas/versionSemVer",
            "description": "The version number of the product. This is set in the contract code."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when the product version was created, in UTC. Formatted as an RFC3339 timestamp."
          },
          "is_current": {
            "type": "boolean",
            "description": "Indicates whether this is the current version of the product."
          },
          "description": {
            "type": "string",
            "description": "A description of the product version. If set on creation, this will override any description set in the Smart Contract code. Optional."
          },
          "summary": {
            "type": "string",
            "description": "A summary of the product version. If set on creation and the major version of the display_version_number is < 4, this will override the summary set in the Smart Contract code. Optional."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Tags for the product version; these are created by users of Vault and simplify searching. Optional."
          },
          "core_tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1productsProductVersionCoreTag"
            },
            "description": "Core tags for the product version; these are created by Vault and could be, for example, savings or loan. Optional."
          },
          "params": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1paramsParam"
            },
            "description": "The template level parameter values for the product version. Required in a POST product-versions request when the contract has product level parameters (only name and value attributes of parameters need to be provided).<br> Note: Any `default_value` for the template parameter specified in the Smart Contract will not be used."
          },
          "code": {
            "type": "string",
            "description": "The Smart Contract code for the product version. Required."
          },
          "product_id": {
            "type": "string",
            "description": "Used as the product_id when the migration strategy is set to NEW_PRODUCT; otherwise this will add product_version to a specified product. Required."
          },
          "tside": {
            "$ref": "#/components/schemas/v1accountingTside",
            "description": "Tside for any accounts created with this product version. Tside is used by the bank to indicate the side of the balance sheet the accounts are on. This is set in the Smart Contract code or set to LIABILITY by default."
          },
          "supported_denominations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The denominations supported by this product version. Required for non-internal products."
          },
          "address_details": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1productsAddressDetails"
            },
            "description": "The address details described in this product version."
          },
          "contract_module_details": {
            "$ref": "#/components/schemas/v1productsContractModuleDetails",
            "description": "The Contract Module interfaces required for the execution of this product. This is set in the Contract code."
          },
          "notification_types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The notification types supported by this product version."
          },
          "parameter_id_by_instance_parameter_name": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A map containing parameter IDs for instance parameters that are now usable as parameters. They are keyed by the name of the parameter defined in the contract that created them."
          },
          "expected_parameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1productsExpectedParameter"
            },
            "description": "The expected parameters defined by the contract. Output only. Determined by the `expected_parameters` metadata field in the contract."
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1productsAttribute"
            },
            "description": "The attributes defined by the contract. Output only. Determined by the `attributes` metadata field in the contract."
          },
          "high_volume_eligibility": {
            "$ref": "#/components/schemas/v1productsHighVolumeEligibility",
            "description": "Indicates the product version's eligibility for high volume processing. The smart contract code must be compatible with the desired eligibility. Optional. If not provided, the product version is not eligible for any high volume processing.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "featureFlag": "IMP_45_HIGH_VOLUME_ACCOUNTS"
            }
          },
          "contracts_language_api_version": {
            "$ref": "#/components/schemas/versionSemVer",
            "description": "The Contracts Language API version.",
            "x-release-info": {
              "changeType": "ADD_FIELD",
              "description": "Extend Product Version API resource with Contracts Language API Version"
            }
          }
        },
        "description": "A product version that holds detailed information about a specific version of a product, including the code for a smart contract."
      },
      "v1productsProductVersionCoreTag": {
        "type": "string",
        "enum": [
          "PRODUCT_VERSION_CORE_TAG_UNKNOWN",
          "PRODUCT_VERSION_CORE_TAG_DEPOSIT",
          "PRODUCT_VERSION_CORE_TAG_FIXED_TERM_DEPOSIT",
          "PRODUCT_VERSION_CORE_TAG_SAVING",
          "PRODUCT_VERSION_CORE_TAG_LOAN",
          "PRODUCT_VERSION_CORE_TAG_CREDIT",
          "PRODUCT_VERSION_CORE_TAG_MORTGAGE"
        ],
        "default": "PRODUCT_VERSION_CORE_TAG_UNKNOWN",
        "x-enum-value-descriptions": {
          "PRODUCT_VERSION_CORE_TAG_CREDIT": "Tags the product as a credit product.",
          "PRODUCT_VERSION_CORE_TAG_DEPOSIT": "Tags the product version as a single deposit.",
          "PRODUCT_VERSION_CORE_TAG_FIXED_TERM_DEPOSIT": "Tags the product version as several deposits over a fixed term.",
          "PRODUCT_VERSION_CORE_TAG_LOAN": "Tags the product as a loan.",
          "PRODUCT_VERSION_CORE_TAG_MORTGAGE": "Tags the product as a mortgage.",
          "PRODUCT_VERSION_CORE_TAG_SAVING": "Tags the product as a savings product.",
          "PRODUCT_VERSION_CORE_TAG_UNKNOWN": "Default value."
        }
      },
      "v1productsProductVersionMigrationStrategy": {
        "type": "string",
        "enum": [
          "PRODUCT_VERSION_MIGRATION_STRATEGY_UNKNOWN",
          "PRODUCT_VERSION_MIGRATION_STRATEGY_NEW_PRODUCT",
          "PRODUCT_VERSION_MIGRATION_STRATEGY_ADD_VERSION",
          "PRODUCT_VERSION_MIGRATION_STRATEGY_ADD_VERSION_APPLY_NEW_USERS"
        ],
        "default": "PRODUCT_VERSION_MIGRATION_STRATEGY_UNKNOWN",
        "x-enum-value-descriptions": {
          "PRODUCT_VERSION_MIGRATION_STRATEGY_ADD_VERSION": "Creates a new product version, returning an error if the product does not exist. This strategy does not update the current version of the product. Existing accounts on this product are not migrated to this product version. This is not a valid strategy for internal products.",
          "PRODUCT_VERSION_MIGRATION_STRATEGY_ADD_VERSION_APPLY_NEW_USERS": "Creates a new product version, returning an error if the product does not exist. This strategy updates the current version of the product to this product version. Existing accounts on this product are not migrated to this product version. This is not a valid strategy for internal products.",
          "PRODUCT_VERSION_MIGRATION_STRATEGY_NEW_PRODUCT": "Creates a new product and initial product version, returning an error if the product already exists. This is a valid strategy for internal products.",
          "PRODUCT_VERSION_MIGRATION_STRATEGY_UNKNOWN": "The migration strategy is not known. This is not a valid strategy for internal products. Defaults to `PRODUCT_VERSION_MIGRATION_STRATEGY_NEW_PRODUCT`."
        }
      },
      "v1productsProductVersionView": {
        "type": "string",
        "enum": [
          "PRODUCT_VERSION_VIEW_BASIC",
          "PRODUCT_VERSION_VIEW_INCLUDE_TAGS",
          "PRODUCT_VERSION_VIEW_INCLUDE_PARAMETERS",
          "PRODUCT_VERSION_VIEW_INCLUDE_CODE"
        ],
        "default": "PRODUCT_VERSION_VIEW_BASIC",
        "x-enum-value-descriptions": {
          "PRODUCT_VERSION_VIEW_BASIC": "Default. Includes basic information about the product version.",
          "PRODUCT_VERSION_VIEW_INCLUDE_CODE": "Includes contract parameters and source code associated with the product.",
          "PRODUCT_VERSION_VIEW_INCLUDE_PARAMETERS": "Includes basic product version information and contract parameters associated with the product.",
          "PRODUCT_VERSION_VIEW_INCLUDE_TAGS": "Includes basic product version information and tags associated with the product."
        }
      },
      "v1productsUpdateProductVersionParamsRequest": {
        "type": "object",
        "properties": {
          "product_version_id": {
            "type": "string",
            "description": "The ID of the product version to be updated.\n\nRequired."
          },
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 512 characters."
          },
          "items_to_add": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1paramsParam"
            },
            "description": "A list of parameters that are to be added to the product version parameter timeseries. Each parameter in the `items_to_add` field must have its `name` and `value` populated. The `effective_timestamp` is optional and will default to current time. If set, the `effective_timestamp` must be formatted as an RFC3339 timestamp and must not be in the past.\n\nWhen editing the value of one or more parameter(s), each parameter in `items_to_add` must correspond to a parameter in `items_to_remove` with a matching `name` and `effective_timestamp`.",
            "x-excluded-fields": [
              "display_name",
              "description",
              "default_value",
              "level",
              "update_permission",
              "number",
              "account",
              "values",
              "denomination",
              "date",
              "str",
              "derived",
              "is_optional"
            ]
          },
          "items_to_remove": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1paramsParam"
            },
            "description": "A list of the parameters that are to be removed from the product version parameter timeseries. You must populate the `items_to_remove` field with `name` and `effective_timestamp` for each parameter. The `effective_timestamp` must be an RFC3339 timestamp and must not be in the past. The `value` of the parameter(s) is ignored. If the `items_to_remove` field is populated with a parameter `name` and `effective_timestamp` that do not already exist in the product version parameter, this generates an error.\n\nWhen editing the value of one or more parameter(s), each parameter in `items_to_remove` must correspond to a parameter in `items_to_add` with a matching `name` and `effective_timestamp`.",
            "x-excluded-fields": [
              "display_name",
              "description",
              "default_value",
              "level",
              "update_permission",
              "value",
              "number",
              "account",
              "values",
              "denomination",
              "date",
              "str",
              "derived",
              "is_optional"
            ]
          }
        },
        "description": "Updates parameter values for a product version at current or future timestamps. This will not add or remove parameters from the product version.",
        "required": [
          "product_version_id",
          "request_id"
        ]
      },
      "v1restrictionsBatchGetRestrictionSetDefinitionVersionsResponse": {
        "type": "object",
        "properties": {
          "restriction_set_definition_versions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1restrictionsRestrictionSetDefinitionVersion"
            },
            "description": "A map of the restriction set definition version ID to the restriction set definition version."
          }
        }
      },
      "v1restrictionsBatchGetRestrictionSetsResponse": {
        "type": "object",
        "properties": {
          "restriction_sets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1restrictionsRestrictionSet"
            },
            "description": "A map of the restriction set ID to the restriction set."
          }
        }
      },
      "v1restrictionsCreateRestrictionSetDefinitionVersionRequest": {
        "type": "object",
        "properties": {
          "restriction_set_definition_version": {
            "$ref": "#/components/schemas/v1restrictionsRestrictionSetDefinitionVersion",
            "description": "The restriction set definition version to create. If the provided restriction set definition ID does not exist in the system, it will be created automatically. Required.",
            "x-excluded-fields": [
              "id",
              "create_timestamp",
              "is_current"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1restrictionsCreateRestrictionSetRequest": {
        "type": "object",
        "properties": {
          "restriction_set": {
            "$ref": "#/components/schemas/v1restrictionsRestrictionSet",
            "description": "The restriction set to create. Required.",
            "x-excluded-fields": [
              "id",
              "restrictions",
              "is_active"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1restrictionsListRestrictionSetDefinitionVersionsResponse": {
        "type": "object",
        "properties": {
          "restriction_set_definition_versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1restrictionsRestrictionSetDefinitionVersion"
            },
            "description": "A list of matching restriction set definition versions, ordered by ascending `create_timestamp`."
          }
        }
      },
      "v1restrictionsListRestrictionSetDefinitionsResponse": {
        "type": "object",
        "properties": {
          "restriction_set_definitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1restrictionsRestrictionSetDefinition"
            },
            "description": "A list of restriction set definitions, ordered by ascending `name`."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "The pagination token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v1restrictionsListRestrictionSetsResponse": {
        "type": "object",
        "properties": {
          "restriction_sets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1restrictionsRestrictionSet"
            },
            "description": "A list of matching restriction sets. The order of the items is arbitrary."
          }
        }
      },
      "v1restrictionsListRestrictionsResponse": {
        "type": "object",
        "properties": {
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1restrictionsRestriction"
            },
            "description": "A list of matching restrictions."
          }
        }
      },
      "v1restrictionsRestriction": {
        "type": "object",
        "properties": {
          "restriction_type": {
            "$ref": "#/components/schemas/v1restrictionsRestrictionType",
            "description": "Enum value indicating which restriction type this applies to."
          },
          "parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "title": "The restriction parameters. Param name (descriptor) -> Param value"
          },
          "customer_id": {
            "type": "string",
            "description": "The customer ID this restriction applies to."
          },
          "account_id": {
            "type": "string",
            "description": "The account ID this restriction applies to."
          },
          "payment_device_id": {
            "type": "string",
            "description": "The payment device ID this restriction applies to."
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the restriction applies from, in UTC. Formatted as an RFC3339 timestamp."
          },
          "expiry_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the restriction will expire. If empty, the restriction will not expire automatically, in UTC. Formatted as an RFC3339 timestamp."
          },
          "id": {
            "type": "string",
            "description": "The unique identifier for this restriction."
          }
        },
        "description": "Primitive restriction. This is an output-only object and is always part of a RestrictionSet."
      },
      "v1restrictionsRestrictionDefinition": {
        "type": "object",
        "properties": {
          "restriction_type": {
            "$ref": "#/components/schemas/v1restrictionsRestrictionType",
            "description": "The restriction type of this restriction definition. Required for create requests and must be unique among restriction definitions within a request and not set to unknown."
          },
          "required_restriction_levels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1restrictionsRestrictionLevel"
            },
            "description": "The restriction levels required when instantiating from the definition. Required for create requests; no duplicates; may not be unknown."
          }
        },
        "description": "Definition of a restriction used in describing a restriction set definition."
      },
      "v1restrictionsRestrictionLevel": {
        "type": "string",
        "enum": [
          "RESTRICTION_LEVEL_UNKNOWN",
          "RESTRICTION_LEVEL_CUSTOMER",
          "RESTRICTION_LEVEL_ACCOUNT",
          "RESTRICTION_LEVEL_PAYMENT_DEVICE"
        ],
        "default": "RESTRICTION_LEVEL_UNKNOWN",
        "description": "The level the restriction is applied at.",
        "x-enum-value-descriptions": {
          "RESTRICTION_LEVEL_ACCOUNT": "Restriction will be applied for an account.",
          "RESTRICTION_LEVEL_CUSTOMER": "Restrictions will be applied for a customer.",
          "RESTRICTION_LEVEL_PAYMENT_DEVICE": "Restrictions will be applied for a payment device.",
          "RESTRICTION_LEVEL_UNKNOWN": "An unknown restriction level."
        }
      },
      "v1restrictionsRestrictionSet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for this restriction set."
          },
          "restriction_set_definition_id": {
            "type": "string",
            "description": "The ID of a restriction set definition. Optional for create requests; if not provided for creation, a restriction set definition version ID must be provided.\n"
          },
          "restriction_set_definition_version_id": {
            "type": "string",
            "description": "The ID of a restriction set definition version. Optional for create requests; if not provided for creation, a restriction set definition ID must be provided.\n"
          },
          "name": {
            "type": "string",
            "description": "The name of the restriction set. Optional.\n"
          },
          "restrictions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1restrictionsRestriction"
            },
            "description": "The restrictions that constitute this restriction set. Output only."
          },
          "description": {
            "type": "string",
            "description": "A description of the restriction set. Optional.\n"
          },
          "restriction_set_parameters": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "The restriction parameters for the parameterised restriction types in the restriction set definition. For example, the restriction type LIMIT_DEBITS requires `limit_debits_amount` and`limit_debits_currency` to be included here. Optional unless the restriction set definition version contains restriction types that require parameters.\n"
          },
          "customer_id": {
            "type": "string",
            "description": "The ID of the customer the CUSTOMER level restrictions are to be applied to. Required for create requests if there is at least one restriction definition with level CUSTOMER.\n"
          },
          "account_id": {
            "type": "string",
            "description": "The ID of the account the ACCOUNT level restrictions are to be applied to. Required for create requests if there is at least one restriction definition with level ACCOUNT.\n"
          },
          "payment_device_id": {
            "type": "string",
            "description": "The ID of the payment device the PAYMENT_DEVICE level restrictions are to be applied to. Required for create requests if there is at least one restriction definition with level PAYMENT_DEVICE.\n"
          },
          "effective_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the restriction set should apply from; must be in the future. Optional; default is the current time, in UTC. Formatted as an RFC3339 timestamp.\n"
          },
          "expiry_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the restriction will expire; must be after the effective_timestamp. Optional; if left empty, the restriction will not expire automatically, in UTC. Formatted as an RFC3339 timestamp.\n"
          },
          "is_active": {
            "type": "boolean",
            "description": "Indicates if the restriction set is active at the current time or at the time provided when, for example listing restriction sets. Update only."
          }
        },
        "description": "An instantiated restriction set definition formed of restrictions that apply to specific `customer_id` or `account_id` or `payment_device_id`."
      },
      "v1restrictionsRestrictionSetDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier for this restriction set."
          },
          "name": {
            "type": "string",
            "description": "The restriction set definition name."
          },
          "is_active": {
            "type": "boolean",
            "description": "Whether the restriction set definition is active. Inactive restriction set definitions may still apply to customers, accounts and payment devices after being made inactive if the entity is still assigned to them.",
            "x-release-info": {
              "noticeVersion": {
                "major": 4,
                "minor": 6
              },
              "releaseVersion": {
                "major": 6
              },
              "changeType": "REMOVE_FIELD",
              "description": "This is an immutable field which is hardcoded to true internally, so it is not necessary to return this on the API"
            }
          }
        },
        "description": "A set of definitions from which restriction sets can be created and applied to customers, accounts and payment devices. It's an output only object, derived from the versions created."
      },
      "v1restrictionsRestrictionSetDefinitionVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for this restriction set definition version. Output only."
          },
          "restriction_definitions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1restrictionsRestrictionDefinition"
            },
            "description": "The restriction definitions that constitute this restriction set definition version. Required for create requests."
          },
          "restriction_set_definition_id": {
            "type": "string",
            "description": "The ID or name of the restriction set definition this version belongs to. Required for create requests.\n\nRequired."
          },
          "description": {
            "type": "string",
            "description": "Description of the restriction set definition version. Optional.\n"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of when the restriction set definition version was created, in UTC. Output only. Formatted as an RFC3339 timestamp."
          },
          "is_current": {
            "type": "boolean",
            "description": "Indicates whether the restriction set definition version is the current version. Output only."
          }
        },
        "description": "A specific version of a restriction set definition.",
        "required": [
          "restriction_set_definition_id"
        ]
      },
      "v1restrictionsRestrictionType": {
        "type": "string",
        "enum": [
          "RESTRICTION_TYPE_UNKNOWN",
          "RESTRICTION_TYPE_PREVENT_CREDITS",
          "RESTRICTION_TYPE_REVIEW_CREDITS",
          "RESTRICTION_TYPE_PREVENT_DEBITS",
          "RESTRICTION_TYPE_REVIEW_DEBITS",
          "RESTRICTION_TYPE_PREVENT_CLOSURE",
          "RESTRICTION_TYPE_PREVENT_OPENING",
          "RESTRICTION_TYPE_LIMIT_DEBITS",
          "RESTRICTION_TYPE_LIMIT_CREDITS",
          "RESTRICTION_TYPE_PREVENT_UPDATES",
          "RESTRICTION_TYPE_PREVENT_ACCOUNT_CREATION"
        ],
        "default": "RESTRICTION_TYPE_UNKNOWN",
        "description": "The restriction type that should be applied.",
        "x-enum-value-descriptions": {
          "RESTRICTION_TYPE_LIMIT_CREDITS": "A restriction type that limits credits for a customer, account or payment device. Applies to individual posting amounts, not a cumulative amount across one or more postings. This restriction requires `limit_credits_amount` and `limit_credits_currency` to be included as part of the restriction_set_parameters when creating a restriction set. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Prevents the customer from receiving credits above the specified amount. [RESTRICTION_LEVEL_ACCOUNT] - Prevents the account from receiving credits above the specified amount. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents the payment device from receiving credits above the specified amount.",
          "RESTRICTION_TYPE_LIMIT_DEBITS": "A restriction type that limits debits being made by a customer, account or payment device. Applies to individual posting amounts, not a cumulative amount across one or more postings. This restriction requires `limit_debits_amount` and `limit_debits_currency` to be included as part of the restriction_set_parameters when creating a restriction set. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Limits the debits the customer can make to the specified amount. [RESTRICTION_LEVEL_CUSTOMER, RESTRICTION_LEVEL_ACCOUNT] - Limits the debits the customer can make from an account to the specified amount. [RESTRICTION_LEVEL_ACCOUNT] - Limits the debits the account can make to the specified amount. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Limits the debits the payment device can make to the specified amount.",
          "RESTRICTION_TYPE_PREVENT_ACCOUNT_CREATION": "A restriction type that prevents a customer from applying for any accounts, and from being added as a new stakeholder when updating an account. A stakeholder with a restriction of this type can be removed from the stakeholder list. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Prevents the customer from applying for any accounts.",
          "RESTRICTION_TYPE_PREVENT_CLOSURE": "A restriction type that prevents closing a customer, account or payment device. Enforced restriction level combinations are: [RESTRICTION_LEVEL_ACCOUNT] - Prevents all stakeholders from closing the account. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents the payment device from being made inactive.",
          "RESTRICTION_TYPE_PREVENT_CREDITS": "A restriction type that prevents credits. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Prevents the customer from receiving credits [RESTRICTION_LEVEL_ACCOUNT] - Prevents the account from receiving credits. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents the payment device from receiving credits. [RESTRICTION_LEVEL_ACCOUNT, RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents the account from receiving credits using this payment device.<br><br> The optional argument `\"prevent_credits_exemption_conditions\"`, defines arbitrary key-value pairs, which, if they are all present in the `posting_instructions[].instruction_details` field of a posting instruction batch, will allow the restriction to be bypassed. <br><br> The `\"prevent_credits_exemption_conditions\"` parameter must be formatted as a JSON string with one or more key-value pairs. For example, to prevent credits on an account except when the debtor account number is \"1234\", the `\"prevent_credits_exemption_conditions\"` parameter may look like `\"{\"debitor_account_number\":\"1234\", \"debitor_bank_id\":\"4321\"}\"`.",
          "RESTRICTION_TYPE_PREVENT_DEBITS": "A restriction type that prevents debits. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Prevents debits for the customer. [RESTRICTION_LEVEL_CUSTOMER, RESTRICTION_LEVEL_ACCOUNT] - Prevents debits for the customer on a specific account. [RESTRICTION_LEVEL_ACCOUNT] - Prevents debits for the account. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents debits for the payment device.<br><br> The optional argument `\"prevent_debits_exemption_conditions\"`, defines arbitrary key-value pairs, which, if they are all present in the `posting_instructions[].instruction_details` field of a posting instruction batch, will allow the restriction to be bypassed. <br><br> The `\"prevent_debits_exemption_conditions\"` parameter must be formatted as a JSON string with one or more key-value pairs. For example, to prevent debits on an account except when the creditor account number is \"1234\", the `\"prevent_debits_exemption_conditions\"` parameter may look like `\"{\"creditor_account_number\":\"1234\", \"creditor_bank_id\":\"4321\"}\"`.",
          "RESTRICTION_TYPE_PREVENT_OPENING": "A restriction type that prevents opening a customer, account or payment device. Enforced restriction level combinations are: [RESTRICTION_LEVEL_ACCOUNT] - Prevents an account from being approved [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents a payment device from being made active",
          "RESTRICTION_TYPE_PREVENT_UPDATES": "A restriction type that prevents updating a customer, account or payment device. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Prevents the customer from being updated. [RESTRICTION_LEVEL_ACCOUNT] - Prevents the account from being updated. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Prevents the payment device from being updated.<br><br> *NOTE: [RESTRICTION_LEVEL_ACCOUNT]: Prevents account updates via `PUT /v1/accounts/{account.id}` or `PUT /v2/accounts/{account.id}`; it does not prevent account updates via `POST /v1/account-updates`.*",
          "RESTRICTION_TYPE_REVIEW_CREDITS": "A restriction type that will require reviewing credits. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Forces a review of credits for a customer (NOT YET IMPLEMENTED IN POSTINGS PROCESSOR). [RESTRICTION_LEVEL_ACCOUNT] - Forces a review of credits for an account. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Forces a review of credits for a payment device.",
          "RESTRICTION_TYPE_REVIEW_DEBITS": "A restriction type that requires reviewing debits. Enforced restriction level combinations are: [RESTRICTION_LEVEL_CUSTOMER] - Forces a review of customer debits. [RESTRICTION_LEVEL_ACCOUNT] - Forces a review of account debits. [RESTRICTION_LEVEL_PAYMENT_DEVICE] - Forces a review of payment device debits.",
          "RESTRICTION_TYPE_UNKNOWN": "An unknown restriction type. There are no enforced combinations."
        }
      },
      "v1restrictionsUpdateRestrictionSetRequest": {
        "type": "object",
        "properties": {
          "restriction_set": {
            "$ref": "#/components/schemas/v1restrictionsRestrictionSet",
            "description": "The restriction set to update. Only is_active can be updated and only from True to False at the current time. Required.",
            "x-excluded-fields": [
              "restriction_set_definition_id",
              "restriction_set_definition_version_id",
              "name",
              "restrictions",
              "description",
              "restriction_set_parameters",
              "customer_id",
              "account_id",
              "payment_device_id",
              "effective_timestamp",
              "expiry_timestamp"
            ]
          },
          "request_id": {
            "type": "string",
            "description": "The unique string ID used to ensure this request is idempotent. Required.\n\nRequired.\nMax length: 256 characters."
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "The field mask used to indicate which fields in the resource are to be updated. Required. The only valid update path is \"is_active\"."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "CoreAPISchedulerINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "CoreAPISchedulerNOT_FOUND_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "v1schedulerBatchGetJobsResponse": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1schedulerJob"
            },
            "description": "Maps the Job ID to the requested Job."
          }
        }
      },
      "v1schedulerBatchGetSchedulesResponse": {
        "type": "object",
        "properties": {
          "schedules": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1schedulerSchedule"
            },
            "description": "Maps the Schedule ID to the requested Schedules."
          }
        }
      },
      "v1schedulerCreateScheduleTagRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID used to ensure the request is idempotent.\n\nRequired.\nMax length: 256 characters."
          },
          "schedule_tag": {
            "$ref": "#/components/schemas/v1schedulerScheduleTag",
            "description": "The ScheduleTag that is to be created. Required."
          }
        },
        "required": [
          "request_id"
        ]
      },
      "v1schedulerJob": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A Unique identifier for a Job."
          },
          "status": {
            "$ref": "#/components/schemas/v1schedulerJobStatus",
            "description": "The execution status of the Job."
          },
          "schedule_id": {
            "type": "string",
            "description": "The Schedule ID references the Schedule that the Job belongs to."
          },
          "schedule_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the job was scheduled to be triggered, in UTC. Formatted as an RFC3339 timestamp."
          },
          "publish_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the job was actually published by the Scheduler, in UTC. Formatted as an RFC3339 timestamp."
          },
          "completed_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Indicates the time that a successful job outcome was received. This timestamp is in UTC. Formatted as an RFC3339 timestamp.",
            "x-release-info": {
              "releaseVersion": {
                "major": 2,
                "minor": 7
              },
              "changeType": "ADD_FIELD",
              "description": "Add a new field: completed timestamp"
            }
          },
          "metadata": {
            "$ref": "#/components/schemas/v1schedulerJobMetadata",
            "description": "Metadata of the Job.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "Adds a new field: metadata",
              "featureFlag": "TM_97518_JOB_METADATA_LIST_JOBS"
            }
          }
        }
      },
      "v1schedulerJobMetadata": {
        "type": "object",
        "properties": {
          "service_name": {
            "type": "string",
            "description": "service_name stores the name of the service where the job execution failed."
          },
          "error_trace": {
            "type": "string",
            "description": "error_trace is a string containing details of any errors that occurred during processing. The exact content of this string is subject to change. As such, we do not recommend integrating systems to build dependencies on the error trace."
          },
          "processed_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "processed_timestamp is the time that the job outcome was processed by the scheduler."
          },
          "retry_count": {
            "type": "integer",
            "format": "int64",
            "description": "retry_count is the number of times the job has been automatically retried due to having a retryable error."
          },
          "last_retry_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "last_retry_timestamp is the time that the job was last retried automatically."
          }
        },
        "description": "JobMetadata is a message that gives more information on the status of the job. Read only."
      },
      "v1schedulerJobStatus": {
        "type": "string",
        "enum": [
          "JOB_STATUS_UNKNOWN",
          "JOB_STATUS_PUBLISHED",
          "JOB_STATUS_SUCCEEDED",
          "JOB_STATUS_FAILED",
          "JOB_STATUS_SKIPPED",
          "JOB_STATUS_OVERRIDDEN"
        ],
        "default": "JOB_STATUS_UNKNOWN",
        "description": "The status of the Job.",
        "x-enum-value-release-info": {
          "JOB_STATUS_OVERRIDDEN": {
            "releaseVersion": {
              "major": 5,
              "minor": 5
            },
            "changeType": "ADD_ENUM_VALUE",
            "description": "Adds a new status value: Overridden",
            "featureFlag": "TM_96471_OVERRIDE_JOBS_STATUS"
          }
        },
        "x-enum-value-descriptions": {
          "JOB_STATUS_FAILED": "A Job has failed to complete.",
          "JOB_STATUS_OVERRIDDEN": "A Job has been overridden. A failed Job has been manually overridden to unblock the schedule. Behaviour identical to a succeeded Job. Can only be set by calling the BatchRepublishJobs endpoint.",
          "JOB_STATUS_PUBLISHED": "A Job has been published but not executed.",
          "JOB_STATUS_SKIPPED": "A Job has been skipped.",
          "JOB_STATUS_SUCCEEDED": "A Job has completed sucessfully.",
          "JOB_STATUS_UNKNOWN": "Default Value."
        }
      },
      "v1schedulerListJobsResponse": {
        "type": "object",
        "properties": {
          "jobs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1schedulerJob"
            },
            "description": "A list of Jobs that belongs to the specified Schedule ID. Results are not ordered but guarenteed to remain the same."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. Empty token if it is the first page."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. Empty token if it is the last page."
          }
        }
      },
      "v1schedulerListSchedulesResponse": {
        "type": "object",
        "properties": {
          "schedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1schedulerSchedule"
            },
            "description": "Contains the list of requested Schedules ordered by the time of creation ascending."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. Empty token if it is the first page."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. Empty token if it is the last page."
          }
        }
      },
      "v1schedulerRepublishJobRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Job to be republished."
          }
        }
      },
      "v1schedulerRepublishJobsRequest": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The IDs of the Jobs to be republished.\n\nRequired.\nMin count: 1.\nMax count: 500."
          },
          "target_status": {
            "$ref": "#/components/schemas/v1schedulerJobStatus",
            "description": "The target status of the Jobs upon republishing. Determines whether Jobs need to be republished for override. Optional. If the field is not populated, Jobs will be republished normally. target_status of the Job can only be JOB_STATUS_OVERRIDDEN The status of all Jobs corresponding to the provided Job IDs will be updated to the target status. Only Jobs with status JOB_STATUS_FAILED can be updated. Updated Jobs will not be retried. The corresponding schedule will be unblocked to execute next Jobs.",
            "x-release-info": {
              "releaseVersion": {
                "major": 5,
                "minor": 5
              },
              "changeType": "ADD_FIELD",
              "description": "Add a target status to determine status of jobs after republishing"
            }
          }
        },
        "required": [
          "ids"
        ]
      },
      "v1schedulerResource": {
        "type": "object",
        "properties": {
          "resource_id": {
            "type": "string",
            "title": "The ID of the resource that the schedules are associated to. Required if resource is being passed as a filter"
          },
          "resource_type": {
            "$ref": "#/components/schemas/v1schedulerResourceType",
            "title": "The type of resource to be filtered for. Default is account"
          }
        },
        "description": "The ScheduleGroupMembership stores the details of the Group that the Schedule belongs to."
      },
      "v1schedulerResourceType": {
        "type": "string",
        "enum": [
          "RESOURCE_TYPE_UNKNOWN",
          "RESOURCE_TYPE_ACCOUNT",
          "RESOURCE_TYPE_PLAN"
        ],
        "default": "RESOURCE_TYPE_UNKNOWN",
        "title": "Types of resources that you can list schedules for with a corresponding resource id",
        "x-enum-value-descriptions": {
          "RESOURCE_TYPE_ACCOUNT": "Resource type for accounts.",
          "RESOURCE_TYPE_PLAN": "Resource type for plans.",
          "RESOURCE_TYPE_UNKNOWN": "Default Value, invalid"
        }
      },
      "v1schedulerSchedule": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The UUID of the Schedule."
          },
          "name": {
            "type": "string",
            "description": "The name of the Schedule."
          },
          "display_name": {
            "type": "string",
            "description": "The user-friendly display name for the Schedule."
          },
          "status": {
            "$ref": "#/components/schemas/v1schedulerScheduleStatus",
            "description": "The Status of the Schedule."
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Schedule was created, in UTC. Formatted as an RFC3339 timestamp."
          },
          "start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time that the Schedule will first run, in UTC. Formatted as an RFC3339 timestamp."
          },
          "end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time when the Schedule will stop running, in UTC. Formatted as an RFC3339 timestamp."
          },
          "next_run_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The next time the Schedule will run, calculated from the Time Expression, in UTC. Formatted as an RFC3339 timestamp."
          },
          "disabled_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The time the Schedule became disabled, in UTC. Formatted as an RFC3339 timestamp."
          },
          "time_expression": {
            "type": "string",
            "description": "The expression that defines when Jobs will be run. This can be either a cron expression or a schedule method (e.g. `EndOfMonthSchedule`). The syntax for cron expressions follows https://github.com/thought-machine/cronexpr (to be used strictly for interpreting cron syntax). For constructing expressions, please refer to the smart contract documentation."
          },
          "timezone": {
            "type": "string",
            "description": "The timezone the Schedule is in. All timestamps attached to a Schedule are, in UTC. The timezone reflects when the `next_run_timestamp` is calculated according to the time expression.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The tags for a given Schedule.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD"
            }
          },
          "group": {
            "$ref": "#/components/schemas/v1schedulerScheduleGroupMembership",
            "description": "The Group the Schedule belongs to.",
            "x-release-info": {
              "releaseVersion": {
                "major": 1,
                "minor": 8
              },
              "changeType": "ADD_FIELD"
            }
          },
          "skip_start_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when to start skipping a schedule, in UTC. Optional. Formatted as an RFC3339 timestamp.",
            "x-release-info": {
              "releaseVersion": {
                "major": 3,
                "minor": 1
              },
              "changeType": "ADD_FIELD"
            }
          },
          "skip_end_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "A timestamp indicating when to resume a skipped schedule, in UTC. Optional. Formatted as an RFC3339 timestamp.",
            "x-release-info": {
              "releaseVersion": {
                "major": 3,
                "minor": 1
              },
              "changeType": "ADD_FIELD"
            }
          }
        },
        "description": "This is the response structure when returning Schedules."
      },
      "v1schedulerScheduleGroupMembership": {
        "type": "object",
        "properties": {
          "group_id": {
            "type": "string",
            "description": "The ID of the Group the Schedule belongs to."
          },
          "group_order": {
            "type": "integer",
            "format": "int64",
            "description": "The order of execution of Schedules in the Group."
          }
        },
        "description": "The ScheduleGroupMembership stores the details of the Group that the Schedule belongs to."
      },
      "v1schedulerScheduleStatus": {
        "type": "string",
        "enum": [
          "SCHEDULE_STATUS_UNKNOWN",
          "SCHEDULE_STATUS_ENABLED",
          "SCHEDULE_STATUS_DISABLED",
          "SCHEDULE_STATUS_COMPLETED",
          "SCHEDULE_STATUS_FAILED",
          "SCHEDULE_STATUS_PENDING",
          "SCHEDULE_STATUS_DELAYED"
        ],
        "default": "SCHEDULE_STATUS_UNKNOWN",
        "x-enum-value-release-info": {
          "SCHEDULE_STATUS_DELAYED": {
            "noticeVersion": {
              "major": 5,
              "minor": 6
            },
            "releaseVersion": {
              "major": 7
            },
            "changeType": "REMOVE_ENUM_VALUE",
            "description": "This status is now deprecated."
          },
          "SCHEDULE_STATUS_SKIPPED": {
            "noticeVersion": {
              "major": 3,
              "minor": 1
            },
            "releaseVersion": {
              "major": 5
            },
            "changeType": "REMOVE_ENUM_VALUE",
            "description": "This field's functionality is to be replaced by skip_start_timestamp/skip_end_timestamp"
          }
        },
        "x-enum-value-descriptions": {
          "SCHEDULE_STATUS_COMPLETED": "The Schedule has completed and is inactive.",
          "SCHEDULE_STATUS_DELAYED": "A Schedule is in a DELAYED State.",
          "SCHEDULE_STATUS_DISABLED": "The Schedule is disabled and inactive.",
          "SCHEDULE_STATUS_ENABLED": "The Schedule is enabled and active.",
          "SCHEDULE_STATUS_FAILED": "The Schedule has failed and is inactive.",
          "SCHEDULE_STATUS_PENDING": "The Schedule is in a PENDING State.",
          "SCHEDULE_STATUS_UNKNOWN": "When selected, a filter is applied to ScheduleStatus. Default is unselected."
        }
      },
      "v1schedulerScheduleTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID (or human-readable name) of the ScheduleTag. Required.\n\nRequired.\nMax length: 256 characters."
          },
          "description": {
            "type": "string",
            "description": "The description of the ScheduleTag. Optional.\n",
            "x-create-only": true
          },
          "sends_scheduled_operation_reports": {
            "type": "boolean",
            "description": "Indicates if the ScheduleTag is set to produce execution notifications."
          }
        },
        "required": [
          "id"
        ]
      },
      "v1supervisor_contractsBatchGetSupervisorContractVersionsRequestIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_CODE",
          "INCLUDE_FIELD_DETAILS_API_VERSION",
          "INCLUDE_FIELD_DETAILS_NOTIFICATION_TYPES"
        ],
        "default": "INCLUDE_FIELD_CODE"
      },
      "v1supervisor_contractsBatchGetSupervisorContractVersionsResponse": {
        "type": "object",
        "properties": {
          "supervisor_contract_versions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1supervisor_contractsSupervisorContractVersion"
            },
            "description": "Map of ID to Supervisor Contract Version."
          }
        }
      },
      "v1supervisor_contractsBatchGetSupervisorContractsResponse": {
        "type": "object",
        "properties": {
          "supervisor_contracts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v1supervisor_contractsSupervisorContract"
            },
            "description": "Map of ID to Supervisor Contract."
          }
        }
      },
      "v1supervisor_contractsCreateSupervisorContractRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID that is used to ensure the request is idempotent.\n\nRequired."
          },
          "supervisor_contract": {
            "$ref": "#/components/schemas/v1supervisor_contractsSupervisorContract",
            "description": "The Supervisor Contract to be created.\n\nRequired.",
            "x-excluded-fields": [
              "create_timestamp"
            ]
          }
        },
        "required": [
          "request_id",
          "supervisor_contract"
        ]
      },
      "v1supervisor_contractsCreateSupervisorContractVersionRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique string ID that is used to ensure the request is idempotent.\n\nRequired."
          },
          "supervisor_contract_version": {
            "$ref": "#/components/schemas/v1supervisor_contractsSupervisorContractVersion",
            "description": "The Supervisor Contract Version to be created.\n\nRequired.",
            "x-excluded-fields": [
              "create_timestamp",
              "details"
            ]
          }
        },
        "required": [
          "request_id",
          "supervisor_contract_version"
        ]
      },
      "v1supervisor_contractsListSupervisorContractVersionsRequestIncludeField": {
        "type": "string",
        "enum": [
          "INCLUDE_FIELD_DETAILS_API_VERSION",
          "INCLUDE_FIELD_DETAILS_NOTIFICATION_TYPES"
        ],
        "default": "INCLUDE_FIELD_DETAILS_API_VERSION"
      },
      "v1supervisor_contractsListSupervisorContractVersionsResponse": {
        "type": "object",
        "properties": {
          "supervisor_contract_versions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1supervisor_contractsSupervisorContractVersion"
            },
            "description": "A list of Supervisor Contract Versions, ordered by descending creation timestamp."
          },
          "next_page_token": {
            "type": "string",
            "description": "The token used to retrieve the next page. If empty, this returns the last page of results."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The token used to retrieve the previous page. If empty, this returns the first page of results."
          }
        }
      },
      "v1supervisor_contractsListSupervisorContractsResponse": {
        "type": "object",
        "properties": {
          "supervisor_contracts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v1supervisor_contractsSupervisorContract"
            },
            "description": "A list of Supervisor Contracts, ordered by descending creation timestamp."
          },
          "next_page_token": {
            "type": "string",
            "description": "The token used to retrieve the next page. If empty, this returns the last page of results."
          },
          "previous_page_token": {
            "type": "string",
            "description": "The token used to retrieve the previous page. If empty, this returns the first page of results."
          }
        }
      },
      "v1supervisor_contractsSupervisorContract": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID. Can be provided by the client, otherwise it will be a service-generated UUID.\n"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when it was created, in UTC. Formatted as an RFC3339 timestamp."
          },
          "display_name": {
            "type": "string",
            "description": "The human-readable name.\n\nRequired."
          }
        },
        "description": "A parent resource for zero or more `SupervisorContractVersion`s.",
        "required": [
          "display_name"
        ]
      },
      "v1supervisor_contractsSupervisorContractCodeDetails": {
        "type": "object",
        "properties": {
          "api_version": {
            "$ref": "#/components/schemas/versionSemVer",
            "description": "Contracts API version used by the Supervisor Contract."
          },
          "display_version": {
            "$ref": "#/components/schemas/versionSemVer",
            "description": "Human-readable semantic version of the Supervisor Contract Version."
          },
          "notification_types": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The notification types supported by this Supervisor Contract."
          }
        },
        "description": "Holds information derived from Supervisor code."
      },
      "v1supervisor_contractsSupervisorContractVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID. Can be provided by the client, otherwise it will be a service-generated UUID.\n"
          },
          "create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp indicating when it was created, in UTC. Formatted as an RFC3339 timestamp."
          },
          "supervisor_contract_id": {
            "type": "string",
            "description": "The ID of the `SupervisorContract` of which this is a version.\n\nRequired."
          },
          "display_name": {
            "type": "string",
            "description": "The human-readable name.\n\nRequired."
          },
          "description": {
            "type": "string",
            "description": "The human-readable description.\n\nRequired."
          },
          "code": {
            "type": "string",
            "description": "The source code.\n\nRequired."
          },
          "details": {
            "$ref": "#/components/schemas/v1supervisor_contractsSupervisorContractCodeDetails",
            "description": "Additional information about the Supervisor Contract derived from the code (API version, etc.)."
          }
        },
        "description": "Contains the original source code of the Supervisor Contract and the structured information about it (e.g. version, event types, hooks, etc.). The latter is derived from the source code and may not be directly set.",
        "required": [
          "supervisor_contract_id",
          "display_name",
          "description",
          "code"
        ]
      },
      "v1vaultversionVaultVersion": {
        "type": "object",
        "properties": {
          "version": {
            "$ref": "#/components/schemas/versionSemVer",
            "description": "The Vault version."
          },
          "pre_release": {
            "type": "string",
            "description": "The pre-release tag."
          },
          "build": {
            "type": "string",
            "description": "The build tag."
          }
        }
      },
      "BatchGetAccountsNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CoreAPIAccountsINVALID_ARGUMENT_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "INVALID_ARGUMENT"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsBadRequest",
                  "title": "BadRequest"
                }
              ]
            }
          }
        }
      },
      "CreateAccountALREADY_EXISTS_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "ALREADY_EXISTS"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_10": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_10",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_11": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_11",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_12": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_12",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_13": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_13",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_14": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_14",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_15": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_15",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_16": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_16",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_17": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_17",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_18": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_18",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_19": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_19",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_2",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_20": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_20",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_21": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_21",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_22": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_22",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_23": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_23",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_24": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_24",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_25": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_25",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_26": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_26",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_3",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_4",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_5",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_6",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_7",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_8",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "CreateAccountFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_9",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_1",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_10": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_10",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_11": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_11",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_12": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_12",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_13": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_13",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_14": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_14",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_15": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_15",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_16": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_16",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_17": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_17",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_18": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_18",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_19": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_19",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_2",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_20": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_20",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_21": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_21",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_22": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_22",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_23": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_23",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_24": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_24",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_25": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_25",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_26": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_26",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_27": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_27",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_28": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_28",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_29": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_29",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_3",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_30": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_30",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_31": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_31",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_32": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_32",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_33": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_33",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_34": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_34",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_4",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_5",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_6",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_7",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_8",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "FAILED_PRECONDITION"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_9",
                  "title": "PreconditionFailure"
                }
              ]
            }
          }
        }
      },
      "UpdateAccountNOT_FOUND_0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "An error message provided by the endpoint."
          },
          "code": {
            "type": "string",
            "description": "The Vault code of the error.",
            "x-example-override": "NOT_FOUND"
          },
          "tracing_id": {
            "type": "string",
            "description": "Tracing ID used to identify a response's origin.",
            "x-example-override": "699cc484-49b0-40c5-a26e-a857dab67e65"
          },
          "vault_error_code": {
            "type": "string",
            "description": "This field is deprecated and will no longer be returned from version 5.0.0. Use the new `code` and `details` fields instead.",
            "x-example-override": "XXX.YYY.ZZZ"
          },
          "details": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/errorsResourceInfo",
                  "title": "ResourceInfo"
                }
              ]
            }
          }
        }
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_10": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_10"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_11": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_11"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_12": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_12"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_13": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_13"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_14": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_14"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_15": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_15"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_16": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_16"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_17": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_17"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_18": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_18"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_19": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_19"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_2"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_20": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_20"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_21": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_21"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_22": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_22"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_23": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_23"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_24": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_24"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_25": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_25"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_26": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_26"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_3"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_4"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_5"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_6"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_7"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_8"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureCreateAccountFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_9"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_1"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_10": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_10"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_11": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_11"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_12": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_12"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_13": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_13"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_14": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_14"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_15": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_15"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_16": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_16"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_17": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_17"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_18": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_18"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_19": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_19"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_2"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_20": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_20"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_21": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_21"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_22": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_22"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_23": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_23"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_24": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_24"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_25": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_25"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_26": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_26"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_27": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_27"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_28": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_28"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_29": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_29"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_3"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_30": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_30"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_31": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_31"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_32": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_32"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_33": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_33"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_34": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_34"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_4"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_5"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_6"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_7"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_8"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureUpdateAccountFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "@type": {
            "type": "string",
            "description": "A type name to identify this detail.",
            "x-example-override": "type.googleapis.com/errors.PreconditionFailure"
          },
          "violations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_9"
            },
            "description": "Describes all precondition violations."
          }
        },
        "description": "Describes what preconditions have failed, which will require fixing before this request becomes valid."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SMART_CONTRACT_VERSION_EXPECTED_PARAMETER_VALUES_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"parameter.ids\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter.ids",
                "description": "A JSON-encoded array of the IDs of Parameters that have missing values."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_10": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_SCHEDULED_EVENT_EXPRESSION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"scheduled_event.end_datetime\":\"value\",\"scheduled_event.expression\":\"value\",\"scheduled_event.start_datetime\":\"value\",\"smart_contract_event_type.name\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the invalid Scheduled Event."
              },
              {
                "key": "scheduled_event.expression",
                "description": "The expression of the invalid Scheduled Event."
              },
              {
                "key": "scheduled_event.start_datetime",
                "description": "The start of the invalid Scheduled Event. Format is RFC3339."
              },
              {
                "key": "scheduled_event.end_datetime",
                "description": "The end of the invalid Scheduled Event. Format is RFC3339."
              },
              {
                "key": "account.id",
                "description": "The ID of the created Account. Indicates that the Account has been created. Only present if the contract hook returned invalid Scheduled Events during a retry."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_11": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_SCHEDULED_EVENT_RANGE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"scheduled_event.end_datetime\":\"value\",\"scheduled_event.start_datetime\":\"value\",\"smart_contract_event_type.name\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the invalid Scheduled Event."
              },
              {
                "key": "scheduled_event.start_datetime",
                "description": "The start of the invalid Scheduled Event. Format is RFC3339."
              },
              {
                "key": "scheduled_event.end_datetime",
                "description": "The end of the invalid Scheduled Event. Format is RFC3339."
              },
              {
                "key": "account.id",
                "description": "The ID of the created Account. Indicates that the Account has been created. Only present if the contract hook returned invalid Scheduled Events during a retry."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_12": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_SCHEDULED_EVENT_SKIP_RANGE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"schedule_skip.end\":\"value\",\"schedule_skip.start\":\"value\",\"smart_contract_event_type.name\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the invalid Scheduled Event."
              },
              {
                "key": "schedule_skip.start",
                "description": "The start of the skip range for the invalid Scheduled Event."
              },
              {
                "key": "schedule_skip.end",
                "description": "The end of the skip range for the invalid Scheduled Event."
              },
              {
                "key": "account.id",
                "description": "The ID of the created Account. Indicates that the Account has been created. Only present if the contract hook returned invalid Scheduled Events during a retry."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_13": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SCHEDULED_EVENT_TAGS_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"account_schedule_tag.ids\":\"value\",\"smart_contract_event_type.name\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the invalid Scheduled Event."
              },
              {
                "key": "account_schedule_tag.ids",
                "description": "A JSON-encoded array of the IDs of the tags that could not be found."
              },
              {
                "key": "account.id",
                "description": "The ID of the created Account. Indicates that the Account has been created. Only present if the contract hook returned invalid Scheduled Events during a retry."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_14": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_SCHEDULED_EVENTS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.id",
                "description": "The ID of the created account."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_15": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "CONTRACT_MODULE_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.id",
                "description": "The ID of the created Account. Indicates that the Account hasbeen created. Only present if the contract module could be found on the first run of the request but could not be found during a retry."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract module could be found on the first run of the request but could not be found during a retry."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_16": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_DESTINATION_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account which cannot be found."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected due to the Account's status."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected due to the Account's status."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected due to the Account's status."
              },
              {
                "key": "account.id",
                "description": "The ID of the created account."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_17": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_DESTINATION_ACCOUNT_INVALID_STATUS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account which is in an invalid status for accepting Postings."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected due to the Account's status."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected due to the Account's status."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected due to the Account's status."
              },
              {
                "key": "account.id",
                "description": "The ID of the created account."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_18": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_BREACHES_DESTINATION_TERMS_AND_CONDITIONS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"rejection.message\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected."
              },
              {
                "key": "rejection.message",
                "description": "The rejection message set by the Smart Contract Version."
              },
              {
                "key": "account.id",
                "description": "The ID of the created account."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_19": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_DESTINATION_INSUFFICIENT_FUNDS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"rejection.message\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected."
              },
              {
                "key": "rejection.message",
                "description": "The rejection message set by the Smart Contract Version."
              },
              {
                "key": "account.id",
                "description": "The ID of the created account."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SMART_CONTRACT_VERSION_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_20": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_WRONG_DENOMINATION_FOR_DESTINATION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"rejection.message\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected."
              },
              {
                "key": "rejection.message",
                "description": "The rejection message set by the Smart Contract Version."
              },
              {
                "key": "account.id",
                "description": "The ID of the created account."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_21": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_REJECTED_BY_DESTINATION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"rejection.message\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected."
              },
              {
                "key": "rejection.message",
                "description": "The rejection message set by the Smart Contract Version."
              },
              {
                "key": "account.id",
                "description": "The ID of the created account."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_22": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_POSTING_INSTRUCTION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"violation_subtype\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "violation_subtype",
                "description": "The type of the violation."
              },
              {
                "key": "account.id",
                "description": "The ID of the created account."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_23": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "RETRY_EXCEEDED_MAXIMUM_LOCKED_ACCOUNT_DURATION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"failed_directive_type\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "failed_directive_type",
                "description": "This will be one of SCHEDULED_EVENTS, LEDGER_DIRECTIVES or NOTIFICATION_DIRECTIVES."
              },
              {
                "key": "failed_directive_type",
                "description": "This will be one of SCHEDULED_EVENTS, LEDGER_DIRECTIVES or NOTIFICATION_DIRECTIVES."
              },
              {
                "key": "account.id",
                "description": "The ID of the created account."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_24": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "NOTIFICATION_TOO_BIG"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"failed_directive_type\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "failed_directive_type",
                "description": "This will be one of SCHEDULED_EVENTS, LEDGER_DIRECTIVES or NOTIFICATION_DIRECTIVES."
              },
              {
                "key": "account.id",
                "description": "The ID of the created account."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_25": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "EXISTING_INTERNAL_ACCOUNT_WITH_PROCESSING_GROUP_AND_LABEL"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.id",
                "description": "The ID of the Internal Account from the same Processing Groupthat is already assigned the processing label."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_26": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "PARAMETER_VALUE_HIERARCHY_NODE_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "STAKEHOLDERS_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"stakeholder.ids\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "stakeholder.ids",
                "description": "A JSON-encoded array of the IDs of the stakeholders that cannot be found."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INACTIVE_STAKEHOLDERS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"stakeholder.ids\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "stakeholder.ids",
                "description": "A JSON-encoded array of the IDs of the stakeholders that are not active."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "RESTRICTED_STAKEHOLDER"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"customer.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"restriction_set.ids\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "restriction_set.ids",
                "description": "A JSON-encoded array of IDs of the Restriction Sets that contain the Restrictions that prevented the operation."
              },
              {
                "key": "customer.id",
                "description": "The ID of the Customer with the Restriction."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected due to the Restriction."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected due to the Restriction."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected due to the Restriction."
              },
              {
                "key": "account.id",
                "description": "The ID of the created Account. Indicates that the Account has been created. Only present if the stakeholders of a Customer Account that is the destination for a Posting Instruction have a Restriction set or if Restrictions changed during a retry."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if if the stakeholders of a Customer Account that is the destination for a Posting Instruction have a Restriction set or if Restrictions changed during a retry."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "RESTRICTED_ACCOUNT"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"restriction_set.ids\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "restriction_set.ids",
                "description": "A JSON-encoded array of IDs of the Restriction Sets that contain the Restrictions that prevented the operation."
              },
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account with the Restriction."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected due to the Restriction."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected due to the Restriction."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected due to the Restriction."
              },
              {
                "key": "account.id",
                "description": "The ID of the created Account. Indicates that the Account has been created."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "OVERLAPPING_SCHEDULED_EVENT_TAGS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"account_schedule_tag.ids\":\"value\",\"smart_contract_event_type.name\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account_schedule_tag.ids",
                "description": "A JSON-encoded array of Account Schedule Tag IDs which are overlapping."
              },
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the Scheduled Event that contained the tags."
              },
              {
                "key": "account.id",
                "description": "The ID of the created Account. Indicates that the Account has been created. Only present if the contract hook returned invalid Scheduled Events during a retry."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "EXCEPTION_RAISED_BY_SMART_CONTRACT"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"exception_args\":\"value\",\"exception_type\":\"value\",\"stack_trace\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "exception_type",
                "description": "The type of the exception."
              },
              {
                "key": "exception_args",
                "description": "The arguments to the exception."
              },
              {
                "key": "stack_trace",
                "description": "The stack trace indicating the location in the Smart Contract Version the exception was raised from."
              },
              {
                "key": "account.id",
                "description": "The ID of the created Account. Indicates that the Account has been created. Only present if contract execution succeeded on the first run of the request but failed during a retry."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if contract execution succeeded on the first run of the request but failed during a retry."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationCreateAccountFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SCHEDULED_EVENT_STARTS_IN_PAST"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\",\"account.status\":\"value\",\"effective_datetime\":\"value\",\"scheduled_event.start_datetime\":\"value\",\"smart_contract_event_type.name\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the invalid Scheduled Event."
              },
              {
                "key": "effective_datetime",
                "description": "The time that was passed to the activation hook. The start time must not be before this. Format is RFC3339."
              },
              {
                "key": "scheduled_event.start_datetime",
                "description": "The start time of the invalid Scheduled Event. Format is RFC3339."
              },
              {
                "key": "account.id",
                "description": "The ID of the created Account. Indicates that the Account has been created. Only present if the contract hook returned invalid Scheduled Events during a retry."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_1": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SMART_CONTRACT_VERSION_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_10": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INACTIVE_STAKEHOLDERS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"stakeholder.ids\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "stakeholder.ids",
                "description": "A JSON-encoded array of the IDs of the stakeholders that are not active."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_11": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "RESTRICTED_STAKEHOLDER"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"customer.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"restriction_set.ids\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "restriction_set.ids",
                "description": "A JSON-encoded array of IDs of the Restriction Sets that contain the Restrictions that prevented the operation."
              },
              {
                "key": "customer.id",
                "description": "The ID of the Customer with the Restriction."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected due to the Restriction."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected due to the Restriction."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected due to the Restriction."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if stakeholders of a Customer Account that is the destination for a Posting Instruction have a Restriction set or if Restrictions changed during a retry.Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the stakeholders of a Customer Account that is the destination for a Posting Instruction have a Restriction set or if Restrictions changed during a retry. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_12": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "RESTRICTED_ACCOUNT"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"restriction_set.ids\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "restriction_set.ids",
                "description": "A JSON-encoded array of IDs of the Restriction Sets that contain the Restrictions that prevented the operation."
              },
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account with the Restriction."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected due to the Restriction."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected due to the Restriction."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected due to the Restriction."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_13": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SUPERVISED_ACCOUNT_CANNOT_HAVE_SMART_CONTRACT_VERSION_WITH_ADJUSTMENT_STRATEGY"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the request intended to update the account with."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_14": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "OVERLAPPING_SCHEDULED_EVENT_TAGS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"account_schedule_tag.ids\":\"value\",\"smart_contract_event_type.name\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account_schedule_tag.ids",
                "description": "A JSON-encoded array of Account Schedule Tag IDs which are overlapping."
              },
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the Scheduled Event that contained the tags."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_15": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "EXCEPTION_RAISED_BY_SMART_CONTRACT"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"exception_args\":\"value\",\"exception_type\":\"value\",\"smart_contract_version.id\":\"value\",\"stack_trace\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "exception_type",
                "description": "The type of the exception."
              },
              {
                "key": "exception_args",
                "description": "The arguments to the exception."
              },
              {
                "key": "stack_trace",
                "description": "The stack trace indicating the location in the Smart Contract Version the exception was raised from."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if contract execution succeeded on the first run of the request but failed during a retry. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if contract execution succeeded on the first run of the request but failed during a retry. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_16": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SCHEDULED_EVENT_STARTS_IN_PAST"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"effective_datetime\":\"value\",\"scheduled_event.start_datetime\":\"value\",\"smart_contract_event_type.name\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the invalid Scheduled Event."
              },
              {
                "key": "effective_datetime",
                "description": "The time that was passed to the Smart Contract Hook. The start time must not be before this. Format is RFC3339."
              },
              {
                "key": "scheduled_event.start_datetime",
                "description": "The start time of the invalid Scheduled Event. Format is RFC3339."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_17": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_SCHEDULED_EVENT_EXPRESSION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"scheduled_event.end_datetime\":\"value\",\"scheduled_event.expression\":\"value\",\"scheduled_event.start_datetime\":\"value\",\"smart_contract_event_type.name\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the invalid Scheduled Event."
              },
              {
                "key": "scheduled_event.expression",
                "description": "The expression of the invalid Scheduled Event."
              },
              {
                "key": "scheduled_event.start_datetime",
                "description": "The start of the invalid Scheduled Event. Format is RFC3339."
              },
              {
                "key": "scheduled_event.end_datetime",
                "description": "The end of the invalid Scheduled Event. Format is RFC3339."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_18": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_SCHEDULED_EVENT_RANGE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"scheduled_event.end_datetime\":\"value\",\"scheduled_event.start_datetime\":\"value\",\"smart_contract_event_type.name\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the invalid Scheduled Event."
              },
              {
                "key": "scheduled_event.start_datetime",
                "description": "The start of the invalid Scheduled Event. Format is RFC3339."
              },
              {
                "key": "scheduled_event.end_datetime",
                "description": "The end of the invalid Scheduled Event. Format is RFC3339."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_19": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_SCHEDULED_EVENT_SKIP_RANGE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"schedule_skip.end\":\"value\",\"schedule_skip.start\":\"value\",\"smart_contract_event_type.name\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the invalid Scheduled Event."
              },
              {
                "key": "schedule_skip.start",
                "description": "The start of the skip range for the invalid Scheduled Event."
              },
              {
                "key": "schedule_skip.end",
                "description": "The end of the skip range for the invalid Scheduled Event."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_2": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "BLOCKED_BY_ACCOUNT_STATUS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.status",
                "description": "The status of the Account."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_20": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SCHEDULED_EVENT_TAGS_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"account_schedule_tag.ids\":\"value\",\"smart_contract_event_type.name\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_event_type.name",
                "description": "The event type of the invalid Scheduled Event."
              },
              {
                "key": "account_schedule_tag.ids",
                "description": "A JSON-encoded array of the IDs of the tags that could not be found."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the contract hook returned invalid Scheduled Events during a retry. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_21": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_SCHEDULED_EVENTS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_22": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "CONTRACT_MODULE_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the contract module could be found on the first run of the request but could not be found during a retry. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the contract module could be found on the first run of the request but could not be found during a retry."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_23": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_DESTINATION_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account which cannot be found."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_24": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_DESTINATION_ACCOUNT_INVALID_STATUS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account which is in an invalid status for accepting Postings."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected due to the Account's status."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected due to the Account's status."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected due to the Account's status."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_25": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_BREACHES_DESTINATION_TERMS_AND_CONDITIONS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"rejection.message\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected."
              },
              {
                "key": "rejection.message",
                "description": "The rejection message set by the Smart Contract Version."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_26": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_DESTINATION_INSUFFICIENT_FUNDS"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"rejection.message\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected."
              },
              {
                "key": "rejection.message",
                "description": "The rejection message set by the Smart Contract Version."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_27": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_WRONG_DENOMINATION_FOR_DESTINATION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"rejection.message\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected."
              },
              {
                "key": "rejection.message",
                "description": "The rejection message set by the Smart Contract Version."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_28": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "POSTING_INSTRUCTION_REJECTED_BY_DESTINATION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"destination_account.id\":\"value\",\"posting_instruction_batch.client_batch_id\":\"value\",\"posting_instruction_batch.id\":\"value\",\"posting_instruction_batch.posting_instructions.id\":\"value\",\"rejection.message\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "destination_account.id",
                "description": "The ID of the destination Account."
              },
              {
                "key": "posting_instruction_batch.id",
                "description": "The ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.client_batch_id",
                "description": "The Client Batch ID of the Posting Instruction Batch that was rejected."
              },
              {
                "key": "posting_instruction_batch.posting_instructions.id",
                "description": "The ID of the Posting Instruction that was rejected."
              },
              {
                "key": "rejection.message",
                "description": "The rejection message set by the Smart Contract Version."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_29": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "INVALID_POSTING_INSTRUCTION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"smart_contract_version.id\":\"value\",\"violation_subtype\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "violation_subtype",
                "description": "The type of the violation."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_3": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "BLOCKED_BY_CONVERSION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_version.id",
                "description": "The ID of the Smart Contract Version being converted to."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_30": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "ACCOUNT_BALANCE_NON_ZERO"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_31": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "NOTIFICATION_TOO_BIG"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_32": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "RETRY_EXCEEDED_MAXIMUM_LOCKED_ACCOUNT_DURATION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"failed_directive_type\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "failed_directive_type",
                "description": "This will be one of SCHEDULED_EVENTS, LEDGER_DIRECTIVES or NOTIFICATION_DIRECTIVES."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_33": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "EXISTING_INTERNAL_ACCOUNT_WITH_PROCESSING_GROUP_AND_LABEL"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "account.id",
                "description": "The ID of the Internal Account from the same Processing Groupthat is already assigned the processing label."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_34": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "PARAMETER_VALUE_HIERARCHY_NODE_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{}"
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_4": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SMART_CONTRACT_VERSION_EXPECTED_PARAMETER_VALUES_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"parameter.ids\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter.ids",
                "description": "A JSON-encoded array of the IDs of Parameters that have missing values."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if values are not found during a retry. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if values are not found during a retry. Only present if the request mutates the the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_5": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "FUTURE_DATED_INSTANCE_PARAMETER_VALUE"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"effective_datetime\":\"value\",\"instance_parameter.name\":\"value\",\"parameter.id\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter.id",
                "description": "The Parameter ID that maps to an Instance Parameter that the request attempted to future date."
              },
              {
                "key": "instance_parameter.name",
                "description": "The Instance Parameter name that the request attempted to future date."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The ID of the Smart Contract version."
              },
              {
                "key": "effective_datetime",
                "description": "The time that was passed to the Smart Contract hook. Formatted as an RFC3339 timestamp in UTC."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_6": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SMART_CONTRACT_VERSION_INSTANCE_PARAMETER_VALUES_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"account.status\":\"value\",\"parameter.ids\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "parameter.ids",
                "description": "A JSON-encoded array of the IDs of Parameters that have missing values. These are the IDs for use on the v1/parameters API, which may not exactly match the names of the Instance Parameters in the Smart Contract Version."
              },
              {
                "key": "account.status",
                "description": "The status the Account is currently in. Only present if values are not found during a retry. Only present if the request mutates the Account's status."
              },
              {
                "key": "smart_contract_version.id",
                "description": "The Smart Contract Version the Account is currently associated with. Only present if values are not found during a retry. Only present if the request mutates the Smart Contract Version."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_7": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "UNSUPPORTED_SMART_CONTRACT_API_VERSION"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"minimum_smart_contract_api_version\":\"value\",\"smart_contract_api_version\":\"value\",\"smart_contract_version.id\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "smart_contract_version.id",
                "description": "The ID of the Smart Contract Version on the unsupported API version."
              },
              {
                "key": "smart_contract_api_version",
                "description": "The API version used by the Smart Contract Version."
              },
              {
                "key": "minimum_smart_contract_api_version",
                "description": "The minimum API version required by this endpoint."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_8": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "SMART_CONTRACT_VERSION_NOT_SUPPORTED_BY_ACCOUNT_SUPERVISOR"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"valid_supervised_contract_version_ids\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "valid_supervised_contract_version_ids",
                "description": "A JSON-encoded array of IDs of the Smart Contract Versions which are supported by the Supervisor."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "errorsPreconditionFailureViolationUpdateAccountFAILED_PRECONDITION_9": {
        "type": "object",
        "properties": {
          "violation_type": {
            "type": "string",
            "description": "Type of violation, specific to the resource or API and can be used to programmatically handle the error. Formatted in upper case, e.g. \"RESOURCE_INACTIVE\".",
            "x-example-override": "STAKEHOLDERS_NOT_FOUND"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Additional structured details about this error.",
            "x-example-override": "{\"stakeholder.ids\":\"value\"}",
            "x-metadata-release-info": [
              {
                "key": "stakeholder.ids",
                "description": "A JSON-encoded array of the IDs of the stakeholders that cannot be found."
              }
            ]
          }
        },
        "description": "A message type used to describe a single precondition failure."
      },
      "v2accountsAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the Account. When creating a customer Account this field is optional and will default to a UUID if not provided. When creating an internal Account this field is required. Max length: 36 characters."
          },
          "type": {
            "$ref": "#/components/schemas/v2accountsAccountType",
            "description": "The type of the Account. Required."
          },
          "smart_contract_version_id": {
            "type": "string",
            "description": "The ID of the Smart Contract Version the Account is currently on.<br><br> _For create requests_: This must be set for Customer Accounts, but must be empty for Internal Accounts.<br><br> _For update requests_: This can be directly updated to request the converting of a Customer Account to a new Smart Contract version.<br><br> Only the hooks on this Smart Contract Version will be executed (supervisors and propagation delays notwithstanding) with the exception of the conversion hook which would be run for the pending Smart Contract Version."
          },
          "pending_smart_contract_version_id": {
            "type": "string",
            "description": "The ID of the Smart Contract Version the Account is converting to. A non-empty value indicates that the conversion hook has been successfully executed and that directives are being committed. Vault sets this field automatically while converting the Account to a new Smart Contract Version; if it remains populated for any length of time it may indicate that user intervention is required. Vault will continually attempt to move to this Smart Contract Version asynchronously. Until the Account is successfully moved to this Smart Contract Version, hooks from its current Smart Contract Version will be executed. Immediately following moving to this Smart Contract Version, there may be delay in propagating changes; in some cases the hooks on the previous Smart Contract Version are executed for postings, scheduled events and parameter changes."
          },
          "stakeholder_ids": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of stakeholders on the Account. Empty for Internal Accounts."
          },
          "alias": {
            "type": "string",
            "description": "A user-provided alias for the Account. Optional."
          },
          "status": {
            "$ref": "#/components/schemas/v2accountsAccountStatus",
            "description": "The status of the Account. When creating an Internal Account this must be set to OPEN. When creating a Customer Account this must be set to either PENDING or OPEN. This can only be updated to OPEN, CLOSED or CANCELLED."
          },
          "vault_create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Account was created in Vault, in UTC. Output only. Formatted as an RFC3339 timestamp."
          },
          "source_create_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Account was created, in UTC. Output only. This value may be backdated for Accounts migrated to Vault via the Data Loader API. Formatted as an RFC3339 timestamp."
          },
          "source_open_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Account finished moving to status OPEN, in UTC. Output only. This value may be earlier than the `vault_create_timestamp` for Accounts migrated to Vault via the Data Loader API. This value is always greater than or equal to `source_create_timestamp`. Formatted as an RFC3339 timestamp."
          },
          "source_close_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Account finished moving to status CLOSED, in UTC. Output only. This value may be earlier than the `vault_create_timestamp` for Accounts migrated to Vault via the Data Loader API. This value is always greater than or equal to `source_open_timestamp`. Formatted as an RFC3339 timestamp."
          },
          "update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "When the Account was last updated, in UTC. Empty for Accounts that have not been updated. Output only. Formatted as an RFC3339 timestamp."
          },
          "activation_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The effective time that the Account's activation hook was run, in UTC. Output only. This value will be earlier than the `vault_create_timestamp` for Accounts created in OPEN, because the activation hook is executed before creating the Account. Formatted as an RFC3339 timestamp."
          },
          "permitted_denominations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A set of denominations, which is accessible from within the Smart Contract:<br><br> - If the Smart Contract Version specifies supported denominations, then this set must be a subset of those (if none are specified here then the field will be set to the Smart Contract Version's supported denominations).<br> - If the Smart Contract Version does not specify denominations, then at least one must be specified when creating the Account.<br><br> Incoming Postings are not required to specify a denomination contained in this list; if this validation is required then it must be implemented in the Smart Contract. This field cannot be updated, and cannot be populated for Internal Accounts, unless created via the v1/internal-accounts endpoint (deprecated)."
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "User-provided key/value Account details. Vault does not use data stored here, it is purely for use by downstream systems. Entries can be removed by specifying a key with an empty value. Keys with values will create new entries or replace existing ones. Any existing entries with keys not in the request will not be modified. Optional."
          },
          "t_side": {
            "$ref": "#/components/schemas/v2accountsTSide",
            "description": "The side of the balance sheet where the Account balance is counted. Can be optionally provided when creating Internal Accounts. If it is not provided, it will default to LIABILITY. For Customer Accounts, the t_side is defined in the Smart Contract. It cannot be provided in this request."
          },
          "contract_update_timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The most recent time at which the Smart Contract Version was updated on the Account, in UTC. Empty if it has never changed. Formatted as an RFC3339 timestamp."
          },
          "processing_group_id": {
            "type": "string",
            "title": "The ID of the Processing Group the Account is in. Can only be provided for create requests. If omitted, the Account will be assigned to the default Processing Group. <br><br>*Multiple Processing Groups are only available as an optional add-on.*"
          },
          "parameter_value_hierarchy_node_id": {
            "type": "string",
            "title": "The ID of the Parameter Value Hierarchy Node which the Account is associated with. Optional. <br><br>*The Parameter Value Hierarchy is only available as an optional add-on.*"
          },
          "processing_label": {
            "type": "string",
            "title": "The processing label, used in Posting Instructions to target a particular Internal Account for the Customer Account's Processing Group. Only one Internal Account can be assigned a specific label for each Processing Group. Can only be applied to Internal Accounts. Optional. <br><br>*Multiple Processing Groups are only available as an optional add-on.*"
          }
        }
      },
      "v2accountsAccountStatus": {
        "type": "string",
        "enum": [
          "ACCOUNT_STATUS_UNKNOWN",
          "ACCOUNT_STATUS_PENDING",
          "ACCOUNT_STATUS_OPENING",
          "ACCOUNT_STATUS_OPEN",
          "ACCOUNT_STATUS_CLOSING",
          "ACCOUNT_STATUS_CLOSED",
          "ACCOUNT_STATUS_CANCELLED",
          "ACCOUNT_STATUS_PENDING_OPENING",
          "ACCOUNT_STATUS_PENDING_CLOSURE"
        ],
        "default": "ACCOUNT_STATUS_UNKNOWN",
        "x-enum-value-descriptions": {
          "ACCOUNT_STATUS_CANCELLED": "The Account is cancelled. No hooks are allowed. No postings are allowed. No schedules exist. This status can only be moved to from PENDING.",
          "ACCOUNT_STATUS_CLOSED": "The Account has been closed. Its balances are zero and new postings will be rejected. All schedules have been deactivated, although latent events may still occur (which cannot affect balances). This is a terminal status. Some notifications may not have been successful in the deactivation process if an error was returned. See [troubleshooting](/vault_v5/accounts_version_2/#troubleshooting_accounts) for more information.",
          "ACCOUNT_STATUS_CLOSING": "An Account is in the process of being closed. Its deactivation hook has been successfully executed but the resulting postings may not have been committed and schedules may not have been deactivated yet. This status is intended to be short-lived; if it persists for any length of time it may indicate that user intervention is required. Vault will continually attempt to move to CLOSED status asynchronously. Postings are accepted based on the presence of any Restrictions, and the Smart Contract behaviour. Schedules may continue to execute if not yet deactivated.",
          "ACCOUNT_STATUS_OPEN": "An Account has been activated. Postings are accepted based on the presence of any Restrictions, and the Smart Contract behaviour. Schedules have been created and commenced as of the activation time. In the event that Postings and/or notifications failed during the activation process, an error will be returned. For more information, see [troubleshooting](/vault_v5/accounts_version_2/#troubleshooting_accounts).",
          "ACCOUNT_STATUS_OPENING": "An Account in the process of being activated. Its activation hook has been successfully executed but the directives it produced may not have been committed yet. This status is intended to be short-lived; if it persists for any length of time it may indicate that user intervention is required. Vault will continually attempt to move to OPEN status asynchronously. Postings will be rejected unless they come from the activation hook. Any such Postings may have been committed. Schedules may have been created. Notifications may have been sent.",
          "ACCOUNT_STATUS_PENDING": "An Account that has not been activated. If this status was requested, the PENDING response means that no hook has yet been run, no schedules will exist, and Postings will be rejected. If the OPEN status was requested, a PENDING response means that manual remediation is required. For more information, see [troubleshooting](/vault_v5/accounts_version_2/#troubleshooting_accounts).",
          "ACCOUNT_STATUS_PENDING_CLOSURE": "The Account is in pending closure status. <br> DEPRECATED: This status exists to support v1 endpoints on v2 and will be removed no earlier than Vault Core 7.0. The closure Account update is created. The closure hook is run. The Account remains in this state until manually updated to closed. Balances are checked when transitioning to CLOSED.",
          "ACCOUNT_STATUS_PENDING_OPENING": "The Account is in pending open status. <br> Postings will be rejected unless they come from the activation hook. Any such Postings may have been committed. Schedules may have been created. Notifications may have been sent. Once in this status an Account can only move to OPEN. <br> DEPRECATED: This status exists to support v1 endpoints on v2 and will be removed no earlier than Vault Core 7.0. The Account is represented as OPEN on v1 endpoints. In v2, the Account may or may not be activated. Activation Account Updates are created which will activate the Account and update it to OPEN once complete.",
          "ACCOUNT_STATUS_UNKNOWN": "This status exists to avoid an empty request unintentionally setting an undesired status. An Account will never have this status."
        }
      },
      "v2accountsBatchGetAccountsResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/v2accountsAccount"
            },
            "description": "The retrieved Accounts. This is a map Accounts keyed on ID."
          }
        }
      },
      "v2accountsCreateAccountRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID for the request. Used for idempotence."
          },
          "account": {
            "$ref": "#/components/schemas/v2accountsAccount",
            "description": "The Account to create.",
            "x-excluded-fields": [
              "smart_contract_id",
              "pending_smart_contract_version_id",
              "vault_create_timestamp",
              "source_create_timestamp",
              "source_open_timestamp",
              "source_close_timestamp",
              "update_timestamp",
              "contract_update_timestamp",
              "activation_timestamp",
              "tranche_id"
            ]
          },
          "create_options": {
            "$ref": "#/components/schemas/v2accountsAccountCreateOptions",
            "description": "The create options. Only applies to Customer Accounts."
          }
        }
      },
      "v2accountsListAccountsRequestOrderBy": {
        "type": "string",
        "enum": [
          "ORDER_BY_ACCOUNT_ID_ASC",
          "ORDER_BY_ACCOUNT_ID_DESC",
          "ORDER_BY_SOURCE_CREATE_TIMESTAMP_ASC",
          "ORDER_BY_SOURCE_CREATE_TIMESTAMP_DESC"
        ],
        "default": "ORDER_BY_ACCOUNT_ID_ASC",
        "x-enum-value-descriptions": {
          "ORDER_BY_ACCOUNT_ID_ASC": "Order results by Account ID in ascending order - the default.",
          "ORDER_BY_ACCOUNT_ID_DESC": "Order results by Account ID in descending order.",
          "ORDER_BY_SOURCE_CREATE_TIMESTAMP_ASC": "Order results by source_create_timestamp in ascending order.",
          "ORDER_BY_SOURCE_CREATE_TIMESTAMP_DESC": "Order results by source_create_timestamp in descending order."
        }
      },
      "v2accountsListAccountsResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v2accountsAccount"
            },
            "description": "A list of matching Accounts."
          },
          "previous_page_token": {
            "type": "string",
            "description": "Token used to retrieve the previous page. If empty, this is the first page of results."
          },
          "next_page_token": {
            "type": "string",
            "description": "Token used to retrieve the next page. If empty, this is the last page of results."
          }
        }
      },
      "v2accountsUpdateAccountRequest": {
        "type": "object",
        "properties": {
          "request_id": {
            "type": "string",
            "description": "A unique ID for the request. Used for idempotence."
          },
          "account": {
            "$ref": "#/components/schemas/v2accountsAccount",
            "description": "The Account to update. Only the fields being updated need to be specified.",
            "x-excluded-fields": [
              "smart_contract_id",
              "pending_smart_contract_version_id",
              "vault_create_timestamp",
              "source_create_timestamp",
              "source_open_timestamp",
              "source_close_timestamp",
              "update_timestamp",
              "contract_update_timestamp",
              "activation_timestamp",
              "tranche_id",
              "type",
              "name",
              "permitted_denominations",
              "t_side",
              "processing_group_id"
            ]
          },
          "update_mask": {
            "$ref": "#/components/schemas/tmachineprotobufFieldMask",
            "description": "The fields to update. The only accepted fields are `stakeholder_ids`, `details`, `status`, `smart_contract_version_id`, `parameter_value_hierarchy_node_id` or `processing_label`. Only one field can be updated in a single request. See the documentation for the `details` field to understand how it can be updated.",
            "x-example-override": "{\"paths\": [\"status\"]}"
          }
        }
      },
      "string_value": {
        "type": "string",
        "description": "The value of a string Parameter."
      },
      "decimal_value": {
        "type": "string",
        "description": "The value of a decimal Parameter."
      },
      "enumeration_value": {
        "type": "string",
        "description": "The value of an enumeration Parameter."
      },
      "date_time_value": {
        "type": "string",
        "description": "The value of a date-time Parameter, in UTC. Formatted as an RFC3339 timestamp."
      },
      "account_id_value": {
        "type": "string",
        "description": "The ID of an Account, may be Internal or Customer."
      },
      "amount": {
        "type": "string",
        "description": "A delta amount. The sign of the delta can be given explicitly (`\"+3.40\"`, `\"-20\"`) or implicitly if it is positive (e.g \"3.40\" is the same as \"+3.40\")."
      },
      "replacement_amount": {
        "type": "string",
        "description": "A new amount, to replace the existing authorised amount."
      },
      "payment_device_token": {
        "type": "string",
        "description": "A payment device token that uniquely identifies a payment device link based on the value_timestamp of the posting instruction. When the target_account is specified via the token, Vault will resolve the token to a Vault account and the account_id will be returned in the posting instruction target_account_id field."
      },
      "account_id": {
        "type": "string",
        "description": "The account ID to republish an associated Post-Posting Failure for."
      },
      "customer_id": {
        "type": "string",
        "description": "The customer ID the Flag applies to.\n"
      },
      "payment_device_id": {
        "type": "string",
        "description": "The payment device ID the Flag applies to.\n"
      },
      "global": {
        "type": "boolean",
        "description": "Whether or not this Parameter Value is globally owned. This field should be used instead of account_config_group_id='root'. All Resources will use this value unless it's overridden by a Parameter Value owned by a hierarchy or the Resource itself."
      },
      "parameter_value_hierarchy_node_id": {
        "type": "string",
        "description": "The ID of the Parameter Value Hierarchy Node that owns this value. Required for create requests."
      },
      "event_identifier": {
        "type": "string",
        "title": "The ID of the Event"
      },
      "plan_id": {
        "type": "string",
        "description": "The plan ID to republish an associated Post-Posting Failure for."
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-Auth-Token"
      }
    },
    "requestBodies": {
      "v1account_schedule_tagsCreateAccountScheduleTagRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1account_schedule_tagsCreateAccountScheduleTagRequest"
            }
          }
        }
      },
      "v1account_schedule_tagsUpdateAccountScheduleTagRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1account_schedule_tagsUpdateAccountScheduleTagRequest"
            }
          }
        }
      },
      "v1accountsCreateAccountMigrationRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1accountsCreateAccountMigrationRequest"
            }
          }
        }
      },
      "v1accountsUpdateAccountMigrationRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1accountsUpdateAccountMigrationRequest"
            }
          }
        }
      },
      "v1accountsCreateAccountUpdateBatchRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1accountsCreateAccountUpdateBatchRequest"
            }
          }
        }
      },
      "v1accountsCreateAccountUpdateRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1accountsCreateAccountUpdateRequest"
            }
          }
        }
      },
      "v1accountsCreateAccountRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1accountsCreateAccountRequest"
            }
          }
        }
      },
      "v1accountsUpdateAccountRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1accountsUpdateAccountRequest"
            }
          }
        }
      },
      "v1accountsUpdateAccountDetailsRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1accountsUpdateAccountDetailsRequest"
            }
          }
        }
      },
      "v1authCreateServiceAccountRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1authCreateServiceAccountRequest"
            }
          }
        }
      },
      "v1authUpdateServiceAccountRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1authUpdateServiceAccountRequest"
            }
          }
        }
      },
      "v1authUpdateServiceAccountPermissionsRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1authUpdateServiceAccountPermissionsRequest"
            }
          }
        }
      },
      "v1calendarCreateCalendarRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1calendarCreateCalendarRequest"
            }
          }
        }
      },
      "v1calendarCreateCalendarEventRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1calendarCreateCalendarEventRequest"
            }
          }
        }
      },
      "v1calendarUpdateCalendarEventRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1calendarUpdateCalendarEventRequest"
            }
          }
        }
      },
      "v1calendarCreateCalendarPeriodDescriptorRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1calendarCreateCalendarPeriodDescriptorRequest"
            }
          }
        }
      },
      "v1calendarUpdateBookkeepingDateRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1calendarUpdateBookkeepingDateRequest"
            }
          }
        }
      },
      "v1calendarChangeCurrentCalendarPeriodRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1calendarChangeCurrentCalendarPeriodRequest"
            }
          }
        }
      },
      "v1calendarUpdateCalendarRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1calendarUpdateCalendarRequest"
            }
          }
        }
      },
      "v1contract_modulesCreateContractModuleVersionRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1contract_modulesCreateContractModuleVersionRequest"
            }
          }
        }
      },
      "v1contract_modulesCreateContractModuleRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1contract_modulesCreateContractModuleRequest"
            }
          }
        }
      },
      "v1contract_modulesCreateSmartContractModuleVersionsLinkRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1contract_modulesCreateSmartContractModuleVersionsLinkRequest"
            }
          }
        }
      },
      "v1contractsSimulateContractsRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1contractsSimulateContractsRequest"
            }
          }
        }
      },
      "v1customersCreateCustomerAddressRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1customersCreateCustomerAddressRequest"
            }
          }
        }
      },
      "v1customersUpdateCustomerAddressRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1customersUpdateCustomerAddressRequest"
            }
          }
        }
      },
      "v1customersCreateCustomerRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1customersCreateCustomerRequest"
            }
          }
        }
      },
      "v1customersUpdateCustomerRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1customersUpdateCustomerRequest"
            }
          }
        }
      },
      "v1customersUpdateCustomerAdditionalDetailsRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1customersUpdateCustomerAdditionalDetailsRequest"
            }
          }
        }
      },
      "v1customersListCustomersRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1customersListCustomersRequest"
            }
          }
        }
      },
      "v1eventsReplayJournalEventsRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1eventsReplayJournalEventsRequest"
            }
          }
        }
      },
      "v1flagsCreateFlagDefinitionRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1flagsCreateFlagDefinitionRequest"
            }
          }
        }
      },
      "v1flagsUpdateFlagDefinitionRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1flagsUpdateFlagDefinitionRequest"
            }
          }
        }
      },
      "v1flagsCreateFlagRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1flagsCreateFlagRequest"
            }
          }
        }
      },
      "v1flagsUpdateFlagRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1flagsUpdateFlagRequest"
            }
          }
        }
      },
      "v1global_parametersCreateGlobalParameterValueRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1global_parametersCreateGlobalParameterValueRequest"
            }
          }
        }
      },
      "v1global_parametersCreateGlobalParameterRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1global_parametersCreateGlobalParameterRequest"
            }
          }
        }
      },
      "v1internal_accountsCreateInternalAccountRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1internal_accountsCreateInternalAccountRequest"
            }
          }
        }
      },
      "v1parametersCreateParameterValueHierarchyNodeRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1parametersCreateParameterValueHierarchyNodeRequest"
            }
          }
        }
      },
      "v1parametersUpdateParameterValueHierarchyNodeRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1parametersUpdateParameterValueHierarchyNodeRequest"
            }
          }
        }
      },
      "v1parametersCreateParameterValueRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1parametersCreateParameterValueRequest"
            }
          }
        }
      },
      "v1parametersUpdateParameterValueRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1parametersUpdateParameterValueRequest"
            }
          }
        }
      },
      "v1parametersBatchCreateParameterValuesRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1parametersBatchCreateParameterValuesRequest"
            }
          }
        }
      },
      "v1parametersCreateParameterRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1parametersCreateParameterRequest"
            }
          }
        }
      },
      "v1payment_devicesCreatePaymentDeviceLinkRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1payment_devicesCreatePaymentDeviceLinkRequest"
            }
          }
        }
      },
      "v1payment_devicesUpdatePaymentDeviceLinkRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1payment_devicesUpdatePaymentDeviceLinkRequest"
            }
          }
        }
      },
      "v1payment_devicesCreatePaymentDeviceRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1payment_devicesCreatePaymentDeviceRequest"
            }
          }
        }
      },
      "v1payment_devicesUpdatePaymentDeviceRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1payment_devicesUpdatePaymentDeviceRequest"
            }
          }
        }
      },
      "v1plansCreatePlanMigrationRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1plansCreatePlanMigrationRequest"
            }
          }
        }
      },
      "v1plansCreatePlanUpdateRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1plansCreatePlanUpdateRequest"
            }
          }
        }
      },
      "v1plansCreatePlanRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1plansCreatePlanRequest"
            }
          }
        }
      },
      "v1policy_managementCreatePolicyRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1policy_managementCreatePolicyRequest"
            }
          }
        }
      },
      "v1policy_managementUpdatePolicyRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1policy_managementUpdatePolicyRequest"
            }
          }
        }
      },
      "v1post_posting_republisherRepublishPostPostingFailureRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1post_posting_republisherRepublishPostPostingFailureRequest"
            }
          }
        }
      },
      "v1posting_instruction_batchesValidateCreatePostingInstructionBatchRequestRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1posting_instruction_batchesValidateCreatePostingInstructionBatchRequestRequest"
            }
          }
        }
      },
      "posting_apiv1CreatePostingInstructionBatchRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/posting_apiv1CreatePostingInstructionBatchRequest"
            }
          }
        }
      },
      "core_apiv1posting_instruction_batchesCreatePostingInstructionBatchRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/core_apiv1posting_instruction_batchesCreatePostingInstructionBatchRequest"
            }
          }
        }
      },
      "v1postings_api_clientsCreatePostingsAPIClientRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1postings_api_clientsCreatePostingsAPIClientRequest"
            }
          }
        }
      },
      "v1postings_api_clientsUpdatePostingsAPIClientRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1postings_api_clientsUpdatePostingsAPIClientRequest"
            }
          }
        }
      },
      "v1processing_groupsCreateProcessingGroupRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1processing_groupsCreateProcessingGroupRequest"
            }
          }
        }
      },
      "v1processing_groupsUpdateProcessingGroupRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1processing_groupsUpdateProcessingGroupRequest"
            }
          }
        }
      },
      "v1productsCreateProductVersionRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1productsCreateProductVersionRequest"
            }
          }
        }
      },
      "v1productsUpdateProductVersionParamsRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1productsUpdateProductVersionParamsRequest"
            }
          }
        }
      },
      "v1restrictionsCreateRestrictionSetDefinitionVersionRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1restrictionsCreateRestrictionSetDefinitionVersionRequest"
            }
          }
        }
      },
      "v1restrictionsCreateRestrictionSetRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1restrictionsCreateRestrictionSetRequest"
            }
          }
        }
      },
      "v1restrictionsUpdateRestrictionSetRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1restrictionsUpdateRestrictionSetRequest"
            }
          }
        }
      },
      "v1schedulerRepublishJobRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1schedulerRepublishJobRequest"
            }
          }
        }
      },
      "v1schedulerRepublishJobsRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1schedulerRepublishJobsRequest"
            }
          }
        }
      },
      "v1schedulerCreateScheduleTagRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1schedulerCreateScheduleTagRequest"
            }
          }
        }
      },
      "v1supervisor_contractsCreateSupervisorContractVersionRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1supervisor_contractsCreateSupervisorContractVersionRequest"
            }
          }
        }
      },
      "v1supervisor_contractsCreateSupervisorContractRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v1supervisor_contractsCreateSupervisorContractRequest"
            }
          }
        }
      },
      "v2accountsCreateAccountRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v2accountsCreateAccountRequest"
            }
          }
        }
      },
      "v2accountsUpdateAccountRequest": {
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/v2accountsUpdateAccountRequest"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
